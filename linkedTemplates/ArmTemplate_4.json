{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "fng-dtf-acrp-dev"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/Billing API - Usage - LoadMonthlyData_BillingID')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetDateRange",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@pipeline().parameters.DaterangeKQL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": {
                                        "value": "ADFErrorLog",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach Date",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetDateRange",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetDateRange').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Copy REST Output",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 10,
                                        "retryIntervalInSeconds": 60,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:10:00",
                                            "requestInterval": "00.00:00:02.000",
                                            "requestMethod": "GET",
                                            "paginationRules": {
                                                "AbsoluteUrl": "$['nextLink']"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".csv"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['kind']"
                                                    },
                                                    "sink": {
                                                        "name": "kind",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['name']"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['type']"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['tags']"
                                                    },
                                                    "sink": {
                                                        "name": "tags",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingAccountId']"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingAccountName']"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingPeriodStartDate']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingPeriodEndDate']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingProfileId']"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingProfileName']"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountOwnerId']"
                                                    },
                                                    "sink": {
                                                        "name": "accountOwnerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountName']"
                                                    },
                                                    "sink": {
                                                        "name": "accountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['subscriptionId']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['subscriptionName']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['date']"
                                                    },
                                                    "sink": {
                                                        "name": "date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['product']"
                                                    },
                                                    "sink": {
                                                        "name": "product",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['partNumber']"
                                                    },
                                                    "sink": {
                                                        "name": "partNumber",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['meterId']"
                                                    },
                                                    "sink": {
                                                        "name": "meterId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['quantity']"
                                                    },
                                                    "sink": {
                                                        "name": "quantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['effectivePrice']"
                                                    },
                                                    "sink": {
                                                        "name": "effectivePrice",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['cost']"
                                                    },
                                                    "sink": {
                                                        "name": "cost",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['unitPrice']"
                                                    },
                                                    "sink": {
                                                        "name": "unitPrice",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingCurrency']"
                                                    },
                                                    "sink": {
                                                        "name": "billingCurrency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceLocation']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceLocation",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['consumedService']"
                                                    },
                                                    "sink": {
                                                        "name": "consumedService",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceId']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceName']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['serviceInfo2']"
                                                    },
                                                    "sink": {
                                                        "name": "serviceInfo2",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['invoiceSection']"
                                                    },
                                                    "sink": {
                                                        "name": "invoiceSection",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceGroup']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceGroup",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['offerId']"
                                                    },
                                                    "sink": {
                                                        "name": "offerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['isAzureCreditEligible']"
                                                    },
                                                    "sink": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['publisherType']"
                                                    },
                                                    "sink": {
                                                        "name": "publisherType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['chargeType']"
                                                    },
                                                    "sink": {
                                                        "name": "chargeType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['frequency']"
                                                    },
                                                    "sink": {
                                                        "name": "frequency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['meterDetails']"
                                                    },
                                                    "sink": {
                                                        "name": "meterDetails",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_RelativeURL": {
                                                    "value": "/providers/Microsoft.Billing/BillingAccounts/@{item().BillingID}/providers/Microsoft.Consumption/usageDetails?api-version=2019-10-01&$expand=meterDetails&$filter=properties/usageStart gt '@{item().ReportingDateStart}' and properties/usageEnd lt '@{item().ReportingDateEnd}'",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "src_BillingDataTSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": {
                                                    "value": "billingdata",
                                                    "type": "Expression"
                                                },
                                                "DirectoryName": {
                                                    "value": "@{formatDateTime(item().ReportingDateEnd, 'yyyy')}/@{formatDateTime(item().ReportingDateEnd, 'MM')}/@{formatDateTime(item().ReportingDateEnd, 'dd')}/UsageByBillingID_Monthly",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@{item().BillingID}_usage.tsv",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Update ADFErrorLog - others",
                                    "type": "AzureDataExplorerCommand",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "command": {
                                            "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Historic', ReportingDate='@{item().ReportingDate},@{item().ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Copy Rest Ouput', ErrorCode= '@{activity('Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Copy REST Output').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().BillingID}',  ErrorSubscription= '@{item().BillingID}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                            "type": "Expression"
                                        },
                                        "commandTimeout": "00:20:00"
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Update ADFErrorLog_SimpleError_Log",
                                    "type": "AzureDataExplorerCommand",
                                    "dependsOn": [
                                        {
                                            "activity": "Update ADFErrorLog - others",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "command": {
                                            "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Historic', ReportingDate='@{item().ReportingDate},@{item().ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().BillingID}',  ErrorSubscription= '@{item().BillingID}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                            "type": "Expression"
                                        },
                                        "commandTimeout": "00:20:00"
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "DataLake to ADX",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 300,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureDataExplorerSink"
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "kind",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "kind",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "id",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "name",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "type",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "tags",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "tags",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingAccountId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingAccountName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingProfileId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingProfileName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "accountOwnerId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "accountOwnerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "accountName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "accountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "subscriptionId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "subscriptionName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "date",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "product",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "product",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "partNumber",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "partNumber",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "meterId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "meterId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "quantity",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "quantity",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "effectivePrice",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "effectivePrice",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "cost",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "cost",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "unitPrice",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "unitPrice",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingCurrency",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingCurrency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceLocation",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceLocation",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "consumedService",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "consumedService",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "serviceInfo2",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "serviceInfo2",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "invoiceSection",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "invoiceSection",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceGroup",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceGroup",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "offerId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "offerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "publisherType",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "publisherType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "chargeType",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "chargeType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "frequency",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "frequency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "meterDetails",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "meterDetails",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "src_BillingDataTSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "billingdata",
                                                "DirectoryName": {
                                                    "value": "@{formatDateTime(item().ReportingDateEnd, 'yyyy')}/@{formatDateTime(item().ReportingDateEnd, 'MM')}/@{formatDateTime(item().ReportingDateEnd, 'dd')}/UsageByBillingID_Monthly",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@{item().BillingID}_usage.tsv",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "adx_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "TableName": "BillingData_Tags_Monthly_Aug"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "DaterangeKQL": {
                        "type": "string",
                        "defaultValue": "range ReportingDate from datetime(2021-07-01 00:00:00) to datetime(2021-08-31 00:00:00) step 1d  | extend ReportingDateStart= format_datetime(startofmonth(ReportingDate), 'yyyy-MM-dd'), ReportingDateEnd= format_datetime(endofmonth(ReportingDate), 'yyyy-MM-dd') | distinct ReportingDateStart, ReportingDateEnd | extend JoinKey = 1 | join kind=inner ( print BillingID = '78931757', JoinKey = 1 | union (print BillingID = '88673741', JoinKey = 1) ) on JoinKey | project ReportingDateStart, ReportingDateEnd, BillingID"
                    }
                },
                "folder": {
                    "name": "Billing/HistoricData"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:31Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 2 - API Call - Usage')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy REST Output",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 10,
                            "retryIntervalInSeconds": 60,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:10:00",
                                "requestInterval": "00.00:00:02.000",
                                "requestMethod": "GET",
                                "paginationRules": {
                                    "AbsoluteUrl": "$['nextLink']"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".csv"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['kind']"
                                        },
                                        "sink": {
                                            "name": "kind",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['name']"
                                        },
                                        "sink": {
                                            "name": "name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['type']"
                                        },
                                        "sink": {
                                            "name": "type",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['tags']"
                                        },
                                        "sink": {
                                            "name": "tags",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['billingAccountId']"
                                        },
                                        "sink": {
                                            "name": "billingAccountId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['billingAccountName']"
                                        },
                                        "sink": {
                                            "name": "billingAccountName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['billingPeriodStartDate']"
                                        },
                                        "sink": {
                                            "name": "billingPeriodStartDate",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['billingPeriodEndDate']"
                                        },
                                        "sink": {
                                            "name": "billingPeriodEndDate",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['billingProfileId']"
                                        },
                                        "sink": {
                                            "name": "billingProfileId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['billingProfileName']"
                                        },
                                        "sink": {
                                            "name": "billingProfileName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['accountOwnerId']"
                                        },
                                        "sink": {
                                            "name": "accountOwnerId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['accountName']"
                                        },
                                        "sink": {
                                            "name": "accountName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['subscriptionId']"
                                        },
                                        "sink": {
                                            "name": "subscriptionId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['subscriptionName']"
                                        },
                                        "sink": {
                                            "name": "subscriptionName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['date']"
                                        },
                                        "sink": {
                                            "name": "date",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['product']"
                                        },
                                        "sink": {
                                            "name": "product",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['partNumber']"
                                        },
                                        "sink": {
                                            "name": "partNumber",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['meterId']"
                                        },
                                        "sink": {
                                            "name": "meterId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['quantity']"
                                        },
                                        "sink": {
                                            "name": "quantity",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['effectivePrice']"
                                        },
                                        "sink": {
                                            "name": "effectivePrice",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['cost']"
                                        },
                                        "sink": {
                                            "name": "cost",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['unitPrice']"
                                        },
                                        "sink": {
                                            "name": "unitPrice",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['billingCurrency']"
                                        },
                                        "sink": {
                                            "name": "billingCurrency",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['resourceLocation']"
                                        },
                                        "sink": {
                                            "name": "resourceLocation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['consumedService']"
                                        },
                                        "sink": {
                                            "name": "consumedService",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['resourceId']"
                                        },
                                        "sink": {
                                            "name": "resourceId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['resourceName']"
                                        },
                                        "sink": {
                                            "name": "resourceName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['serviceInfo2']"
                                        },
                                        "sink": {
                                            "name": "serviceInfo2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['invoiceSection']"
                                        },
                                        "sink": {
                                            "name": "invoiceSection",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['resourceGroup']"
                                        },
                                        "sink": {
                                            "name": "resourceGroup",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['offerId']"
                                        },
                                        "sink": {
                                            "name": "offerId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['isAzureCreditEligible']"
                                        },
                                        "sink": {
                                            "name": "isAzureCreditEligible",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['publisherType']"
                                        },
                                        "sink": {
                                            "name": "publisherType",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['chargeType']"
                                        },
                                        "sink": {
                                            "name": "chargeType",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['frequency']"
                                        },
                                        "sink": {
                                            "name": "frequency",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']['meterDetails']"
                                        },
                                        "sink": {
                                            "name": "meterDetails",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "RestResource_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_RelativeURL": {
                                        "value": "/providers/Microsoft.Billing/BillingAccounts/@{pipeline().parameters.p_BillingId}/providers/Microsoft.Consumption/usageDetails?api-version=2019-10-01&$expand=meterDetails&$filter=properties/usageStart gt '@{pipeline().parameters.p_BeginDate}' and properties/usageEnd lt '@{pipeline().parameters.p_EndDate}'",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "src_BillingDataTSV",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ContainerName": {
                                        "value": "@pipeline().parameters.p_containername",
                                        "type": "Expression"
                                    },
                                    "DirectoryName": {
                                        "value": "@pipeline().parameters.p_UsageTempFolderName",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@{guid()}_usage.tsv",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Update ADFErrorLog",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Copy REST Output",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - UsageByBillingID', ReportingDate='@{pipeline().parameters.p_BeginDate},@{pipeline().parameters.p_EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Copy Rest Ouput', ErrorCode= '@{activity('Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Copy REST Output').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{pipeline().parameters.p_BillingId}',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='@{pipeline().parameters.p_BatchType}'",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Update ADFErrorLog_SimpleError_Log",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Update ADFErrorLog",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - UsageByBillingID', ReportingDate='@{pipeline().parameters.p_BeginDate},@{pipeline().parameters.p_EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{pipeline().parameters.p_BillingId}',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='@{pipeline().parameters.p_BatchType}'",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_BillingId": {
                        "type": "string",
                        "defaultValue": "Default"
                    },
                    "p_BeginDate": {
                        "type": "string"
                    },
                    "p_EndDate": {
                        "type": "string"
                    },
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BatchType": {
                        "type": "string"
                    },
                    "p_UsageTempFolderName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:31Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API - Usage - LoadMonthlyData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetDateRange",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set Parent Directory",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@pipeline().parameters.DateRangeKQL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": true
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": {
                                        "value": "ADFErrorLog",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Set ReportingDate",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "GetDateRange",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "v_DateRange",
                            "value": {
                                "value": "@activity('GetDateRange').output.value",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEach Subscription",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Set ReportingDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('v_DateRange')",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Copy REST Output",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Token",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:05:00",
                                            "requestInterval": "00.00:00:02.000",
                                            "requestMethod": "GET",
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@variables('Token')",
                                                    "type": "Expression"
                                                }
                                            },
                                            "paginationRules": {
                                                "AbsoluteUrl": "$['nextLink']"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".csv"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['kind']"
                                                    },
                                                    "sink": {
                                                        "name": "kind",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['name']"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['type']"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingAccountId']"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingAccountName']"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingPeriodStartDate']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingPeriodEndDate']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingProfileId']"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingProfileName']"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountOwnerId']"
                                                    },
                                                    "sink": {
                                                        "name": "accountOwnerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountName']"
                                                    },
                                                    "sink": {
                                                        "name": "accountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['subscriptionId']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['subscriptionName']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['date']"
                                                    },
                                                    "sink": {
                                                        "name": "date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['product']"
                                                    },
                                                    "sink": {
                                                        "name": "product",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['partNumber']"
                                                    },
                                                    "sink": {
                                                        "name": "partNumber",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['meterId']"
                                                    },
                                                    "sink": {
                                                        "name": "meterId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['quantity']"
                                                    },
                                                    "sink": {
                                                        "name": "quantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['effectivePrice']"
                                                    },
                                                    "sink": {
                                                        "name": "effectivePrice",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['cost']"
                                                    },
                                                    "sink": {
                                                        "name": "cost",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['unitPrice']"
                                                    },
                                                    "sink": {
                                                        "name": "unitPrice",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingCurrency']"
                                                    },
                                                    "sink": {
                                                        "name": "billingCurrency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceLocation']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceLocation",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['consumedService']"
                                                    },
                                                    "sink": {
                                                        "name": "consumedService",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceId']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceName']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['invoiceSection']"
                                                    },
                                                    "sink": {
                                                        "name": "invoiceSection",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceGroup']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceGroup",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['offerId']"
                                                    },
                                                    "sink": {
                                                        "name": "offerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['isAzureCreditEligible']"
                                                    },
                                                    "sink": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['publisherType']"
                                                    },
                                                    "sink": {
                                                        "name": "publisherType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['chargeType']"
                                                    },
                                                    "sink": {
                                                        "name": "chargeType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['frequency']"
                                                    },
                                                    "sink": {
                                                        "name": "frequency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['meterDetails']"
                                                    },
                                                    "sink": {
                                                        "name": "meterDetails",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_RelativeURL": {
                                                    "value": "/subscriptions/@{item().SubscriptionGuid}/providers/Microsoft.Consumption/usageDetails?api-version=2019-10-01&$filter=properties/usageStart gt '@{item().Min_ReportingDate}' and properties/usageEnd lt '@{item().Max_ReportingDate}'",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BillingDataCSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sink_filename": {
                                                    "value": "@{item().SubscriptionName}_@{item().SubscriptionGuid}_@{item().Filekey}.csv",
                                                    "type": "Expression"
                                                },
                                                "dir_name": {
                                                    "value": "@{variables('RunDate')}",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Wait for 7 seconds",
                                    "type": "Wait",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 7
                                    }
                                },
                                {
                                    "name": "If Gateway Error",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(greater(indexof(activity('Copy REST Output').output.errors[0]['Message'], 'GatewayTimeout' ) ,-1), \ngreater(indexof(activity('Copy REST Output').output.errors[0]['Message'], 'Too many requests' ) ,-1))\n",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Update ADFErrorLog - others",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Historic', ReportingDate='@{item().Min_ReportingDate},@{item().Max_ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Copy Rest Ouput', ErrorCode= '@{activity('Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Copy REST Output').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError_Log",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog - others",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Historic', ReportingDate='@{item().Min_ReportingDate},@{item().Max_ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Wait 7 minutes",
                                                "type": "Wait",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "waitTimeInSeconds": 420
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Retry Copy REST Output",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Historic', ReportingDate='@{item().Min_ReportingDate},@{item().Max_ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Retry Copy Rest Ouput', ErrorCode= '@{activity('Retry Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Retry Copy REST Output').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Historic', ReportingDate='@{item().Min_ReportingDate},@{item().Max_ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Retry Copy REST Output",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Set Token_copy1",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RestSource",
                                                        "httpRequestTimeout": "00:05:00",
                                                        "requestInterval": "00.00:00:02.000",
                                                        "requestMethod": "GET",
                                                        "additionalHeaders": {
                                                            "Authorization": {
                                                                "value": "@variables('Token')",
                                                                "type": "Expression"
                                                            }
                                                        },
                                                        "paginationRules": {
                                                            "AbsoluteUrl": "$['nextLink']"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".csv"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "path": "[['kind']"
                                                                },
                                                                "sink": {
                                                                    "name": "kind",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['id']"
                                                                },
                                                                "sink": {
                                                                    "name": "id",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['name']"
                                                                },
                                                                "sink": {
                                                                    "name": "name",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['type']"
                                                                },
                                                                "sink": {
                                                                    "name": "type",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingAccountId']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingAccountId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingAccountName']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingAccountName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingPeriodStartDate']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingPeriodStartDate",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingPeriodEndDate']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingPeriodEndDate",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingProfileId']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingProfileId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingProfileName']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingProfileName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['accountOwnerId']"
                                                                },
                                                                "sink": {
                                                                    "name": "accountOwnerId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['accountName']"
                                                                },
                                                                "sink": {
                                                                    "name": "accountName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['subscriptionId']"
                                                                },
                                                                "sink": {
                                                                    "name": "subscriptionId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['subscriptionName']"
                                                                },
                                                                "sink": {
                                                                    "name": "subscriptionName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['date']"
                                                                },
                                                                "sink": {
                                                                    "name": "date",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['product']"
                                                                },
                                                                "sink": {
                                                                    "name": "product",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['partNumber']"
                                                                },
                                                                "sink": {
                                                                    "name": "partNumber",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['meterId']"
                                                                },
                                                                "sink": {
                                                                    "name": "meterId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['quantity']"
                                                                },
                                                                "sink": {
                                                                    "name": "quantity",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['effectivePrice']"
                                                                },
                                                                "sink": {
                                                                    "name": "effectivePrice",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['cost']"
                                                                },
                                                                "sink": {
                                                                    "name": "cost",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['unitPrice']"
                                                                },
                                                                "sink": {
                                                                    "name": "unitPrice",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingCurrency']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingCurrency",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['resourceLocation']"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceLocation",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['consumedService']"
                                                                },
                                                                "sink": {
                                                                    "name": "consumedService",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['resourceId']"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['resourceName']"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['invoiceSection']"
                                                                },
                                                                "sink": {
                                                                    "name": "invoiceSection",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['resourceGroup']"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceGroup",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['offerId']"
                                                                },
                                                                "sink": {
                                                                    "name": "offerId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['isAzureCreditEligible']"
                                                                },
                                                                "sink": {
                                                                    "name": "isAzureCreditEligible",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['publisherType']"
                                                                },
                                                                "sink": {
                                                                    "name": "publisherType",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['chargeType']"
                                                                },
                                                                "sink": {
                                                                    "name": "chargeType",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['frequency']"
                                                                },
                                                                "sink": {
                                                                    "name": "frequency",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['meterDetails']"
                                                                },
                                                                "sink": {
                                                                    "name": "meterDetails",
                                                                    "type": "String"
                                                                }
                                                            }
                                                        ],
                                                        "collectionReference": "$['value']"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "RestResource_BillingData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "p_RelativeURL": {
                                                                "value": "/subscriptions/@{item().SubscriptionGuid}/providers/Microsoft.Consumption/usageDetails?api-version=2019-10-01&$filter=properties/usageStart gt '@{item().Min_ReportingDate}' and properties/usageEnd lt '@{item().Max_ReportingDate}'",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BillingDataCSV",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "sink_filename": {
                                                                "value": "@{item().SubscriptionName}_@{item().SubscriptionGuid}_@{item().Filekey}.csv",
                                                                "type": "Expression"
                                                            },
                                                            "dir_name": {
                                                                "value": "@{variables('RunDate')}",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "GetBearerToken_copy1",
                                                "description": "Use this Web activity to get bearer token",
                                                "type": "WebActivity",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Wait 7 minutes",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "method": "POST",
                                                    "headers": {
                                                        "Content-Type": "application/x-www-form-urlencoded"
                                                    },
                                                    "url": {
                                                        "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                                        "type": "Expression"
                                                    },
                                                    "body": {
                                                        "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{activity('GetSPNSecret').output.value}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Set Token_copy1",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "GetBearerToken_copy1",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "Token",
                                                    "value": {
                                                        "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "GetBearerToken",
                                    "description": "Use this Web activity to get bearer token",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSPNSecret",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/x-www-form-urlencoded"
                                        },
                                        "url": {
                                            "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{activity('GetSPNSecret').output.value}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Token",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "GetBearerToken",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Token",
                                        "value": {
                                            "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "GetSPNSecret",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {},
                                        "url": {
                                            "value": "@concat(pipeline().parameters.p_SPNSecretURL,'?api-version=7.0')",
                                            "type": "Expression"
                                        },
                                        "authentication": {
                                            "type": "MSI",
                                            "resource": "https://vault.azure.net"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set Parent Directory",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "RunDate",
                            "value": {
                                "value": "@replace(replace(concat('HistoricData-Usage-',formatDateTime(utcnow())),':','-'),'.','-')",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "ClientID": {
                        "type": "string",
                        "defaultValue": "aa5605bb-2877-483d-b005-e1439ee1f988"
                    },
                    "tenant_id": {
                        "type": "string",
                        "defaultValue": "8a807b9b-02da-47f3-a903-791a42a2285c"
                    },
                    "DateRangeKQL": {
                        "type": "string",
                        "defaultValue": "range ReportingDate from ago(5000d) to todatetime('2021-07-31') step 1d | extend ReportingDate=todatetime(format_datetime(ReportingDate, 'yyyy-MM-dd')) | extend FileKey = format_datetime(ReportingDate, 'yyyy-MM') | where FileKey contains '2018' or FileKey contains '2019' or FileKey contains '2020' or FileKey contains '2021' | summarize Min_ReportingDate= min(ReportingDate), Max_ReportingDate = max(ReportingDate) by FileKey | project Min_ReportingDate=format_datetime(Min_ReportingDate,'yyyy-MM-dd'), Max_ReportingDate=format_datetime(Max_ReportingDate,'yyyy-MM-dd'), FileKey | extend dummykey = 1 //| order by Min_ReportingDate asc | join  kind=fullouter ( [@\"BillingData_New\"] | where subscriptionName in ('crystal granger softprocorp', 'dev env', 'fnf-information_governance-prod-01', 'fnf-infrastructure-keyvault', 'sl-exos-all' ) | distinct subscriptionId,subscriptionName | union (     [@\"BillingConfig\"]     | where SubscriptionGuid in ('85007903-ccaa-41f0-9a74-1be006bb429f', '0e6d9ec9-3f9f-4354-9d2e-15faed542546', 'a2ca26b7-774e-4207-801a-c45151ff310d', 'f1743aea-3bf1-4feb-9b59-8059836a5999') | project subscriptionId=tostring(SubscriptionGuid), subscriptionName=SubscriptionName | distinct subscriptionId,subscriptionName ) | extend dummkey = 1)on $left.dummykey==$right.dummkey | project Min_ReportingDate, Max_ReportingDate, SubscriptionName=subscriptionName, SubscriptionGuid=subscriptionId, FileKey | distinct Min_ReportingDate,Max_ReportingDate,SubscriptionName,SubscriptionGuid,FileKey | order by Min_ReportingDate asc //| summarize format_bytes(sum(estimate_data_size(*)),4,'MB')"
                    },
                    "p_SPNSecretURL": {
                        "type": "string",
                        "defaultValue": "https://kv-ccop-dv.vault.azure.net/secrets/CostMGMT-SPN-Secret/eafafff824ca4d8c8a8c604579b70ed1"
                    }
                },
                "variables": {
                    "v_DateRange": {
                        "type": "Array"
                    },
                    "REST_API_ProcessStatus": {
                        "type": "String"
                    },
                    "Token": {
                        "type": "String"
                    },
                    "RunDate": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Billing/HistoricData"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:31Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 1 - API Call - Forecast_copy1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get ForeCast Date Range",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Lookup Max Error TimeStamp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "range ReportingDate from now() to now(180d) step 1d\n| extend endofMonth=endofmonth(ReportingDate)\n| distinct endofMonth\n| top @{pipeline().parameters.p_ForeCastMonths} by endofMonth asc nulls last\n| summarize EndDate=max(endofMonth)\n| project BeginDate=format_datetime(now(), 'yyyy-MM-dd'), EndDate=format_datetime(EndDate, 'yyyy-MM-dd')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Get SubID and RG",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Lookup Max Error TimeStamp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "let consolidated = 'consolidated';\nBillingData\n| where billingDate > ago(90d)\n| distinct subscriptionId, resourceGroup\n| extend resourceGroup = iff(isempty(resourceGroup), consolidated, resourceGroup)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "For Each Sub and RG",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get SubID and RG",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Clean up Forecast Folder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get SubID and RG').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "Get ForeCast Data",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "SubscriptionID",
                                                    "value": {
                                                        "value": "@{item().subscriptionId}",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "ResourceGroup",
                                                    "value": {
                                                        "value": "@{item().resourceGroup}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "POST",
                                            "requestBody": {
                                                "value": "{\n    \"type\": \"Usage\",\n    \"dataSet\": {\n        \"granularity\": \"Daily\",\n        \"aggregation\": {\n            \"totalCost\": {\n                \"name\": \"Cost\",\n                \"function\": \"Sum\"\n            }\n        },\n        \"sorting\": [\n            {\n                \"direction\": \"ascending\",\n                \"name\": \"UsageDate\"\n            }\n        ]\n    },\n    \"timeframe\": \"Custom\",\n    \"timePeriod\": {\n        \"from\": \"@{activity('Get ForeCast Date Range').output.value[0].BeginDate}\",\n        \"to\": \"@{activity('Get ForeCast Date Range').output.value[0].EndDate}\"\n    },\n    \"includeActualCost\": false,\n    \"includeFreshPartialCost\": false\n}",
                                                "type": "Expression"
                                            },
                                            "additionalHeaders": {
                                                "Content-type": "application/json"
                                            },
                                            "paginationRules": {
                                                "AbsoluteUrl": "$['nextLink']",
                                                "supportRFC5988": "true"
                                            }
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_RelativeURL": {
                                                    "value": "@if(equals(item().resourceGroup,'consolidated'),concat('subscriptions/',item().subscriptionId,'/providers/Microsoft.CostManagement/forecast?api-version=2021-10-01'),concat('subscriptions/',item().subscriptionId,'/resourceGroups/',item().resourceGroup,'/providers/Microsoft.CostManagement/forecast?api-version=2021-10-01'))",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BillingSummary",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FilePath": {
                                                    "value": "@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'yyyy')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'MM')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'dd')}/@{variables('SubFolder')}/@{variables('JsonPath')}/@{item().subscriptionId}_@{item().resourceGroup}.json",
                                                    "type": "Expression"
                                                },
                                                "container": {
                                                    "value": "@pipeline().parameters.p_containername",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "If Gateway Error",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get ForeCast Data",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(greater(indexof(activity('Get ForeCast Data').output.errors[0]['Message'], 'GatewayTimeout' ) ,-1), \ngreater(indexof(activity('Get ForeCast Data').output.errors[0]['Message'], 'Too many requests' ) ,-1))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Update ADFErrorLog",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Forecast', ReportingDate='@{activity('Get ForeCast Date Range').output.value[0].BeginDate},@{activity('Get ForeCast Date Range').output.value[0].EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Copy Rest Ouput', ErrorCode= '@{activity('Get ForeCast Data').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Get ForeCast Data').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().resourceGroup}',  ErrorSubscription= '@{item().subscriptionId}', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='Daily'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError_Log",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Forecast', ReportingDate='@{activity('Get ForeCast Date Range').output.value[0].BeginDate},@{activity('Get ForeCast Date Range').output.value[0].EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().resourceGroup}',  ErrorSubscription= '@{item().subscriptionId}', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='Daily'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Wait 3 minutes",
                                                "type": "Wait",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "waitTimeInSeconds": 180
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_retry",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get ForeCast Data_retry",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Forecast', ReportingDate='@{activity('Get ForeCast Data_retry').output.value[0].BeginDate},@{activity('Get ForeCast Data_retry').output.value[0].EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Copy Rest Ouput', ErrorCode= '@{activity('Get ForeCast Data_retry').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Get ForeCast Data_retry').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().resourceGroup}',  ErrorSubscription= '@{item().subscriptionId}', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='Daily'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError_Log_retry",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog_retry",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Forecast', ReportingDate='@{activity('Get ForeCast Data_retry').output.value[0].BeginDate},@{activity('Get ForeCast Data_retry').output.value[0].EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().resourceGroup}',  ErrorSubscription= '@{item().subscriptionId}', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='Daily'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Get ForeCast Data_retry",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Wait 3 minutes",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RestSource",
                                                        "additionalColumns": [
                                                            {
                                                                "name": "SubscriptionID",
                                                                "value": {
                                                                    "value": "@{item().subscriptionId}",
                                                                    "type": "Expression"
                                                                }
                                                            },
                                                            {
                                                                "name": "ResourceGroup",
                                                                "value": {
                                                                    "value": "@{item().resourceGroup}",
                                                                    "type": "Expression"
                                                                }
                                                            }
                                                        ],
                                                        "httpRequestTimeout": "00:01:40",
                                                        "requestInterval": "00.00:00:00.010",
                                                        "requestMethod": "POST",
                                                        "requestBody": {
                                                            "value": "{\n    \"type\": \"Usage\",\n    \"dataSet\": {\n        \"granularity\": \"Daily\",\n        \"aggregation\": {\n            \"totalCost\": {\n                \"name\": \"Cost\",\n                \"function\": \"Sum\"\n            }\n        },\n        \"sorting\": [\n            {\n                \"direction\": \"ascending\",\n                \"name\": \"UsageDate\"\n            }\n        ]\n    },\n    \"timeframe\": \"Custom\",\n    \"timePeriod\": {\n        \"from\": \"@{activity('Get ForeCast Date Range').output.value[0].BeginDate}\",\n        \"to\": \"@{activity('Get ForeCast Date Range').output.value[0].EndDate}\"\n    },\n    \"includeActualCost\": false,\n    \"includeFreshPartialCost\": false\n}",
                                                            "type": "Expression"
                                                        },
                                                        "additionalHeaders": {
                                                            "Content-type": "application/json"
                                                        },
                                                        "paginationRules": {
                                                            "AbsoluteUrl": "$['nextLink']",
                                                            "supportRFC5988": "true"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "JsonSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "JsonWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "RestResource_BillingData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "p_RelativeURL": {
                                                                "value": "@if(equals(item().resourceGroup,'consolidated'),concat('subscriptions/',item().subscriptionId,'/providers/Microsoft.CostManagement/forecast?api-version=2021-10-01'),concat('subscriptions/',item().subscriptionId,'/resourceGroups/',item().resourceGroup,'/providers/Microsoft.CostManagement/forecast?api-version=2021-10-01'))",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BillingSummary",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "FilePath": {
                                                                "value": "@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'yyyy')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'MM')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'dd')}/@{variables('SubFolder')}/@{variables('JsonPath')}/@{item().subscriptionId}_@{item().resourceGroup}.json",
                                                                "type": "Expression"
                                                            },
                                                            "container": {
                                                                "value": "@pipeline().parameters.p_containername",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Clean up Forecast Folder",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Get ForeCast Date Range",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "FolderValidation",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FilePath": {
                                        "value": "@{pipeline().parameters.p_containername}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'yyyy')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'MM')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'dd')}/@{variables('SubFolder')}",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "Lookup Max Error TimeStamp",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "let _lastretry = toscalar(WaterMark | distinct ForeCast_LastRetry);\nADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - Forecast'\n| summarize MaxErrorTimeStamp = max(ErrorTimestamp)\n| project MaxErrorTimeStamp=iif(isnull(MaxErrorTimeStamp),_lastretry,MaxErrorTimeStamp)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            }
                        }
                    },
                    {
                        "name": "Update WaterMark",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Insert into Forecast",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace WaterMark <|\nWaterMark\n| project BillingData_LastRetry,Reservation_LastRetry, Credit_LastRetry, ReservationDesc_LastRetry,MarketPlace_LastRetry,ForeCast_LastRetry=todatetime('@{activity('Lookup Max Error TimeStamp').output.firstRow.MaxErrorTimeStamp}')",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Create CSV from JSON",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "For Each Sub and RG",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "1.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "JsonToCSV - ForeCast",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "container": {
                                        "value": "'@{pipeline().parameters.p_containername}'",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "'{@formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'yyyy')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'MM')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'dd')}/@{variables('SubFolder')}'",
                                        "type": "Expression"
                                    },
                                    "filename": "'*'",
                                    "JsonFolder": {
                                        "value": "'@{variables('JsonPath')}'",
                                        "type": "Expression"
                                    },
                                    "CsvFolder": {
                                        "value": "'@{variables('CSVPath')}'",
                                        "type": "Expression"
                                    }
                                },
                                "datasetParameters": {
                                    "ReadJsonFiles": {},
                                    "OutputToCSV": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "Copy to Forecast Staging Table",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Create CSV from JSON",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Truncate Staging",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'yyyy')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'MM')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'dd')}/@{variables('SubFolder')}/@{variables('CSVPath')}",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "SubscriptionID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "subscriptionId",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceGroup",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "resourceGroup",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Cost",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "cost",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UsageDate",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "usageDate",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "CSVText",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_containername",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'yyyy')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'MM')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'dd')}/@{variables('SubFolder')}/@{variables('CSVPath')}/*",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_Forecast"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Truncate Staging",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace Staging_Forecast <| Staging_Forecast | take 0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Insert into Forecast",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Copy to Forecast Staging Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-append Forecast_History_Usage <| \nlet UnDefined = 'undefined'; \nlet consolidated = 'consolidated';\nStaging_Forecast | where resourceGroup <> consolidated | project subscriptionId, resourceGroup, cost=toreal(cost), usageDate=todatetime(usageDate),LogDate=now()\n| union (\nStaging_Forecast | where resourceGroup <> consolidated | extend cost=toreal(cost), usageDate=todatetime(usageDate) | summarize cost=sum(cost) by subscriptionId, usageDate\n| join kind=inner (Staging_Forecast | where resourceGroup == consolidated | project SubID=subscriptionId,SubCost=toreal(cost),UsgDate=todatetime(usageDate)) \non $left.subscriptionId==$right.SubID and $left.usageDate==$right.UsgDate\n| extend resourceGroup = UnDefined\n| project subscriptionId, resourceGroup, cost=SubCost-cost,usageDate,LogDate=now()\n| where cost > 0\n)",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_ForecastMonths": {
                        "type": "string",
                        "defaultValue": "3"
                    },
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    }
                },
                "variables": {
                    "JsonPath": {
                        "type": "String",
                        "defaultValue": "Json"
                    },
                    "CSVPath": {
                        "type": "String",
                        "defaultValue": "Csv"
                    },
                    "SubFolder": {
                        "type": "String",
                        "defaultValue": "Forecast_Usage"
                    },
                    "ErrorPercentage": {
                        "type": "String",
                        "defaultValue": "25"
                    }
                },
                "folder": {
                    "name": "Forecast_Usage_APITest"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:31Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 1 - API Call - Forecast')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get ForeCast Date Range",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Lookup Max Error TimeStamp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "range ReportingDate from now() to now(180d) step 1d\n| extend endofMonth=endofmonth(ReportingDate)\n| distinct endofMonth\n| top @{pipeline().parameters.p_ForeCastMonths} by endofMonth asc nulls last\n| summarize EndDate=max(endofMonth)\n| project BeginDate=format_datetime(now(), 'yyyy-MM-dd'), EndDate=format_datetime(EndDate, 'yyyy-MM-dd')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Get SubID and RG",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Lookup Max Error TimeStamp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "let consolidated = 'consolidated';\nBillingData\n| where billingDate > ago(90d)\n| distinct subscriptionId, resourceGroup\n| extend resourceGroup = iff(isempty(resourceGroup), consolidated, resourceGroup)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "For Each Sub and RG",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get SubID and RG",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Clean up Forecast Folder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get SubID and RG').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "Get ForeCast Data",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "SubscriptionID",
                                                    "value": {
                                                        "value": "@{item().subscriptionId}",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "ResourceGroup",
                                                    "value": {
                                                        "value": "@{item().resourceGroup}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.100",
                                            "requestMethod": "POST",
                                            "requestBody": {
                                                "value": "{\n    \"type\": \"AmortizedCost\",\n    \"dataSet\": {\n        \"granularity\": \"Daily\",\n        \"aggregation\": {\n            \"totalCost\": {\n                \"name\": \"Cost\",\n                \"function\": \"Sum\"\n            }\n        },\n        \"sorting\": [\n            {\n                \"direction\": \"ascending\",\n                \"name\": \"UsageDate\"\n            }\n        ]\n    },\n    \"timeframe\": \"Custom\",\n    \"timePeriod\": {\n        \"from\": \"@{activity('Get ForeCast Date Range').output.value[0].BeginDate}\",\n        \"to\": \"@{activity('Get ForeCast Date Range').output.value[0].EndDate}\"\n    },\n    \"includeActualCost\": false,\n    \"includeFreshPartialCost\": false\n}",
                                                "type": "Expression"
                                            },
                                            "additionalHeaders": {
                                                "Content-type": "application/json"
                                            },
                                            "paginationRules": {
                                                "AbsoluteUrl": "$['nextLink']",
                                                "supportRFC5988": "true"
                                            }
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "parallelCopies": 10
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_RelativeURL": {
                                                    "value": "@if(equals(item().resourceGroup,'consolidated'),concat('subscriptions/',item().subscriptionId,'/providers/Microsoft.CostManagement/forecast?api-version=2021-10-01'),concat('subscriptions/',item().subscriptionId,'/resourceGroups/',item().resourceGroup,'/providers/Microsoft.CostManagement/forecast?api-version=2021-10-01'))",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BillingSummary",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FilePath": {
                                                    "value": "@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'yyyy')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'MM')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'dd')}/@{variables('SubFolder')}/@{variables('JsonPath')}/@{item().subscriptionId}_@{item().resourceGroup}.json",
                                                    "type": "Expression"
                                                },
                                                "container": {
                                                    "value": "@pipeline().parameters.p_containername",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "If Gateway Error",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get ForeCast Data",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(greater(indexof(activity('Get ForeCast Data').output.errors[0]['Message'], 'GatewayTimeout' ) ,-1), \ngreater(indexof(activity('Get ForeCast Data').output.errors[0]['Message'], 'Too many requests' ) ,-1))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Update ADFErrorLog",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Forecast', ReportingDate='@{activity('Get ForeCast Date Range').output.value[0].BeginDate},@{activity('Get ForeCast Date Range').output.value[0].EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Copy Rest Ouput', ErrorCode= '@{activity('Get ForeCast Data').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Get ForeCast Data').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().resourceGroup}',  ErrorSubscription= '@{item().subscriptionId}', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='Daily'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError_Log",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Forecast', ReportingDate='@{activity('Get ForeCast Date Range').output.value[0].BeginDate},@{activity('Get ForeCast Date Range').output.value[0].EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().resourceGroup}',  ErrorSubscription= '@{item().subscriptionId}', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='Daily'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Wait 3 minutes",
                                                "type": "Wait",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "waitTimeInSeconds": 180
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_retry",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get ForeCast Data_retry",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Forecast', ReportingDate='@{activity('Get ForeCast Data_retry').output.value[0].BeginDate},@{activity('Get ForeCast Data_retry').output.value[0].EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Copy Rest Ouput', ErrorCode= '@{activity('Get ForeCast Data_retry').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Get ForeCast Data_retry').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().resourceGroup}',  ErrorSubscription= '@{item().subscriptionId}', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='Daily'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError_Log_retry",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog_retry",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Forecast', ReportingDate='@{activity('Get ForeCast Data_retry').output.value[0].BeginDate},@{activity('Get ForeCast Data_retry').output.value[0].EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().resourceGroup}',  ErrorSubscription= '@{item().subscriptionId}', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='Daily'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Get ForeCast Data_retry",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Wait 3 minutes",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RestSource",
                                                        "additionalColumns": [
                                                            {
                                                                "name": "SubscriptionID",
                                                                "value": {
                                                                    "value": "@{item().subscriptionId}",
                                                                    "type": "Expression"
                                                                }
                                                            },
                                                            {
                                                                "name": "ResourceGroup",
                                                                "value": {
                                                                    "value": "@{item().resourceGroup}",
                                                                    "type": "Expression"
                                                                }
                                                            }
                                                        ],
                                                        "httpRequestTimeout": "00:01:40",
                                                        "requestInterval": "00.00:00:00.010",
                                                        "requestMethod": "POST",
                                                        "requestBody": {
                                                            "value": "{\n    \"type\": \"AmortizedCost\",\n    \"dataSet\": {\n        \"granularity\": \"Daily\",\n        \"aggregation\": {\n            \"totalCost\": {\n                \"name\": \"Cost\",\n                \"function\": \"Sum\"\n            }\n        },\n        \"sorting\": [\n            {\n                \"direction\": \"ascending\",\n                \"name\": \"UsageDate\"\n            }\n        ]\n    },\n    \"timeframe\": \"Custom\",\n    \"timePeriod\": {\n        \"from\": \"@{activity('Get ForeCast Date Range').output.value[0].BeginDate}\",\n        \"to\": \"@{activity('Get ForeCast Date Range').output.value[0].EndDate}\"\n    },\n    \"includeActualCost\": false,\n    \"includeFreshPartialCost\": false\n}",
                                                            "type": "Expression"
                                                        },
                                                        "additionalHeaders": {
                                                            "Content-type": "application/json"
                                                        },
                                                        "paginationRules": {
                                                            "AbsoluteUrl": "$['nextLink']",
                                                            "supportRFC5988": "true"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "JsonSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "JsonWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "RestResource_BillingData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "p_RelativeURL": {
                                                                "value": "@if(equals(item().resourceGroup,'consolidated'),concat('subscriptions/',item().subscriptionId,'/providers/Microsoft.CostManagement/forecast?api-version=2021-10-01'),concat('subscriptions/',item().subscriptionId,'/resourceGroups/',item().resourceGroup,'/providers/Microsoft.CostManagement/forecast?api-version=2021-10-01'))",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BillingSummary",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "FilePath": {
                                                                "value": "@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'yyyy')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'MM')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'dd')}/@{variables('SubFolder')}/@{variables('JsonPath')}/@{item().subscriptionId}_@{item().resourceGroup}.json",
                                                                "type": "Expression"
                                                            },
                                                            "container": {
                                                                "value": "@pipeline().parameters.p_containername",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Clean up Forecast Folder",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Get ForeCast Date Range",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "FolderValidation",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FilePath": {
                                        "value": "@{pipeline().parameters.p_containername}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'yyyy')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'MM')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'dd')}/@{variables('SubFolder')}",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "Lookup Max Error TimeStamp",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "let _lastretry = toscalar(WaterMark | distinct ForeCast_LastRetry);\nADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - Forecast'\n| summarize MaxErrorTimeStamp = max(ErrorTimestamp)\n| project MaxErrorTimeStamp=iif(isnull(MaxErrorTimeStamp),_lastretry,MaxErrorTimeStamp)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            }
                        }
                    },
                    {
                        "name": "Update WaterMark",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Insert into Forecast",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace WaterMark <|\nWaterMark\n| project BillingData_LastRetry,Reservation_LastRetry, Credit_LastRetry, ReservationDesc_LastRetry,MarketPlace_LastRetry,ForeCast_LastRetry=todatetime('@{activity('Lookup Max Error TimeStamp').output.firstRow.MaxErrorTimeStamp}')",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Create CSV from JSON",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "For Each Sub and RG",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "1.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "JsonToCSV - ForeCast",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "container": {
                                        "value": "'@{pipeline().parameters.p_containername}'",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "'@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'yyyy')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'MM')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'dd')}/@{variables('SubFolder')}'",
                                        "type": "Expression"
                                    },
                                    "filename": "'*'",
                                    "JsonFolder": {
                                        "value": "'@{variables('JsonPath')}'",
                                        "type": "Expression"
                                    },
                                    "CsvFolder": {
                                        "value": "'@{variables('CSVPath')}'",
                                        "type": "Expression"
                                    }
                                },
                                "datasetParameters": {
                                    "ReadJsonFiles": {},
                                    "OutputToCSV": {}
                                },
                                "linkedServiceParameters": {}
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "Copy to Forecast Staging Table",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Create CSV from JSON",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Truncate Staging",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'yyyy')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'MM')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'dd')}/@{variables('SubFolder')}/@{variables('CSVPath')}",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "SubscriptionID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "subscriptionId",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceGroup",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "resourceGroup",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Cost",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "cost",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UsageDate",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "usageDate",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "CSVText",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_containername",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'yyyy')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'MM')}/@{formatDateTime(activity('Get ForeCast Date Range').output.value[0].BeginDate, 'dd')}/@{variables('SubFolder')}/@{variables('CSVPath')}/*",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_Forecast"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Truncate Staging",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace Staging_Forecast <| Staging_Forecast | take 0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Insert into Forecast",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Copy to Forecast Staging Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-append Forecast_History <| \nlet UnDefined = 'undefined'; \nlet consolidated = 'consolidated';\nStaging_Forecast | where resourceGroup <> consolidated | project subscriptionId, resourceGroup, cost=toreal(cost), usageDate=todatetime(usageDate),LogDate=now()\n| union (\nStaging_Forecast | where resourceGroup <> consolidated | extend cost=toreal(cost), usageDate=todatetime(usageDate) | summarize cost=sum(cost) by subscriptionId, usageDate\n| join kind=inner (Staging_Forecast | where resourceGroup == consolidated | project SubID=subscriptionId,SubCost=toreal(cost),UsgDate=todatetime(usageDate)) \non $left.subscriptionId==$right.SubID and $left.usageDate==$right.UsgDate\n| extend resourceGroup = UnDefined\n| project subscriptionId, resourceGroup, cost=SubCost-cost,usageDate,LogDate=now()\n| where cost > 0\n)",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_ForecastMonths": {
                        "type": "string",
                        "defaultValue": "3"
                    },
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    }
                },
                "variables": {
                    "JsonPath": {
                        "type": "String",
                        "defaultValue": "Json"
                    },
                    "CSVPath": {
                        "type": "String",
                        "defaultValue": "Csv"
                    },
                    "SubFolder": {
                        "type": "String",
                        "defaultValue": "Forecast"
                    },
                    "ErrorPercentage": {
                        "type": "String",
                        "defaultValue": "25"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-30T10:06:03Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 1 - API Call - ReservationOrders')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Update ADX Table",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "For Each ReservationOrderID_copy1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 2 - ADX Stage to Prod - ReservationOrders",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_StorageAccountContainer": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "p_BillingDate": {
                                    "value": "@variables('v_ReportingDates')",
                                    "type": "Expression"
                                },
                                "p_SubDirectory": {
                                    "value": "@variables('v_SubDirectory')",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "For Each ReservationOrderID_copy1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get ReservationOrderIDs",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get ReservationOrderIDs').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "Get Reservation Orders_copy1",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 3,
                                        "retryIntervalInSeconds": 60,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET"
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "$['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['type']"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['name']"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['etag']"
                                                    },
                                                    "sink": {
                                                        "name": "etag",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['properties']['displayName']"
                                                    },
                                                    "sink": {
                                                        "name": "displayName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['properties']['requestDateTime']"
                                                    },
                                                    "sink": {
                                                        "name": "requestDateTime",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['properties']['createdDateTime']"
                                                    },
                                                    "sink": {
                                                        "name": "createdDateTime",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['properties']['expiryDate']"
                                                    },
                                                    "sink": {
                                                        "name": "expiryDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['properties']['benefitStartTime']"
                                                    },
                                                    "sink": {
                                                        "name": "benefitStartTime",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['properties']['term']"
                                                    },
                                                    "sink": {
                                                        "name": "term",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['properties']['provisioningState']"
                                                    },
                                                    "sink": {
                                                        "name": "provisioningState",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['properties']['originalQuantity']"
                                                    },
                                                    "sink": {
                                                        "name": "originalQuantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['properties']['billingPlan']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPlan",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_RelativeURL": {
                                                    "value": "/providers/Microsoft.Capacity/reservationOrders/@{item().reservationOrderId}?api-version=2019-04-01",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BillingDataCSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sink_filename": {
                                                    "value": "@{item().reservationOrderId}_ReservationOrders.csv",
                                                    "type": "Expression"
                                                },
                                                "dir_name": {
                                                    "value": "@{variables('v_SubDirectory')}",
                                                    "type": "Expression"
                                                },
                                                "container_name": {
                                                    "value": "@pipeline().parameters.p_containername",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get ReservationOrderIDs",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "ReservationSummary\n| distinct reservationOrderId",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_LookBackInDay": {
                        "type": "string",
                        "defaultValue": "3"
                    },
                    "p_BillingIds": {
                        "type": "array",
                        "defaultValue": [
                            "46132814"
                        ]
                    },
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BeginDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_EndDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_BatchType": {
                        "type": "string",
                        "defaultValue": "Daily"
                    }
                },
                "variables": {
                    "v_KQL": {
                        "type": "String"
                    },
                    "v_ReportingDates": {
                        "type": "Array"
                    },
                    "v_SubDirectory": {
                        "type": "String",
                        "defaultValue": "ReservationOrders"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-02-19T09:48:44Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/BillingAPI_BillingID_Scope')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "ForEach Subscription",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Set List Variable",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('Resource_List')",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 25,
                            "activities": [
                                {
                                    "name": "Copy REST Output",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Token New",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:05:00",
                                            "requestInterval": "00.00:00:02.000",
                                            "requestMethod": "GET",
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@variables('Token')",
                                                    "type": "Expression"
                                                }
                                            },
                                            "paginationRules": {
                                                "AbsoluteUrl": "$['nextLink']"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".csv"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['kind']"
                                                    },
                                                    "sink": {
                                                        "name": "kind",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['name']"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['type']"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingAccountId']"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingAccountName']"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingPeriodStartDate']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingPeriodEndDate']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingProfileId']"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingProfileName']"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountOwnerId']"
                                                    },
                                                    "sink": {
                                                        "name": "accountOwnerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountName']"
                                                    },
                                                    "sink": {
                                                        "name": "accountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['subscriptionId']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['subscriptionName']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['date']"
                                                    },
                                                    "sink": {
                                                        "name": "date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['product']"
                                                    },
                                                    "sink": {
                                                        "name": "product",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['partNumber']"
                                                    },
                                                    "sink": {
                                                        "name": "partNumber",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['meterId']"
                                                    },
                                                    "sink": {
                                                        "name": "meterId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['quantity']"
                                                    },
                                                    "sink": {
                                                        "name": "quantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['effectivePrice']"
                                                    },
                                                    "sink": {
                                                        "name": "effectivePrice",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['cost']"
                                                    },
                                                    "sink": {
                                                        "name": "cost",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['unitPrice']"
                                                    },
                                                    "sink": {
                                                        "name": "unitPrice",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingCurrency']"
                                                    },
                                                    "sink": {
                                                        "name": "billingCurrency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceLocation']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceLocation",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['consumedService']"
                                                    },
                                                    "sink": {
                                                        "name": "consumedService",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceId']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceName']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['invoiceSection']"
                                                    },
                                                    "sink": {
                                                        "name": "invoiceSection",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceGroup']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceGroup",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['offerId']"
                                                    },
                                                    "sink": {
                                                        "name": "offerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['isAzureCreditEligible']"
                                                    },
                                                    "sink": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['publisherType']"
                                                    },
                                                    "sink": {
                                                        "name": "publisherType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['chargeType']"
                                                    },
                                                    "sink": {
                                                        "name": "chargeType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['frequency']"
                                                    },
                                                    "sink": {
                                                        "name": "frequency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['meterDetails']"
                                                    },
                                                    "sink": {
                                                        "name": "meterDetails",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_RelativeURL": {
                                                    "value": "/subscriptions/@{item().SubscriptionGuid}/providers/Microsoft.Consumption/usageDetails?api-version=2019-10-01&$filter=properties/usageStart gt '@{variables('BillingDate')}' and properties/usageEnd lt '@{variables('BillingDate')}'",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BillingDataCSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sink_filename": {
                                                    "value": "@{item().SubscriptionName}_@{item().SubscriptionGuid}_@{variables('BillingDate')}.csv",
                                                    "type": "Expression"
                                                },
                                                "dir_name": {
                                                    "value": "@{formatDateTime(variables('BillingDate'), 'yyyy')}/@{formatDateTime(variables('BillingDate'), 'MM')}/@{formatDateTime(variables('BillingDate'), 'dd')}/Usage",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Wait for 7 seconds",
                                    "type": "Wait",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 7
                                    }
                                },
                                {
                                    "name": "If Gateway Error",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(greater(indexof(activity('Copy REST Output').output.errors[0]['Message'], 'GatewayTimeout' ) ,-1), \ngreater(indexof(activity('Copy REST Output').output.errors[0]['Message'], 'Too many requests' ) ,-1))\n",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Update ADFErrorLog - others",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API', ReportingDate='@{variables('BillingDate')}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Copy Rest Ouput', ErrorCode= '@{activity('Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Copy REST Output').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError_Log",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog - others",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API', ReportingDate='@{variables('BillingDate')}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Wait 7 minutes",
                                                "type": "Wait",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "waitTimeInSeconds": 420
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Retry Copy REST Output",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API', ReportingDate='@{variables('BillingDate')}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Retry Copy Rest Ouput', ErrorCode= '@{activity('Retry Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Retry Copy REST Output').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Retry Copy REST Output",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Set Token_Retry",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RestSource",
                                                        "httpRequestTimeout": "00:15:00",
                                                        "requestInterval": "00.00:00:05.000",
                                                        "requestMethod": "GET",
                                                        "additionalHeaders": {
                                                            "Authorization": {
                                                                "value": "@variables('Token')",
                                                                "type": "Expression"
                                                            }
                                                        },
                                                        "paginationRules": {
                                                            "AbsoluteUrl": "$['nextLink']"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".csv"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "path": "[['kind']"
                                                                },
                                                                "sink": {
                                                                    "name": "kind",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['id']"
                                                                },
                                                                "sink": {
                                                                    "name": "id",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['name']"
                                                                },
                                                                "sink": {
                                                                    "name": "name",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['type']"
                                                                },
                                                                "sink": {
                                                                    "name": "type",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingAccountId']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingAccountId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingAccountName']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingAccountName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingPeriodStartDate']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingPeriodStartDate",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingPeriodEndDate']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingPeriodEndDate",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingProfileId']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingProfileId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingProfileName']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingProfileName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['accountOwnerId']"
                                                                },
                                                                "sink": {
                                                                    "name": "accountOwnerId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['accountName']"
                                                                },
                                                                "sink": {
                                                                    "name": "accountName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['subscriptionId']"
                                                                },
                                                                "sink": {
                                                                    "name": "subscriptionId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['subscriptionName']"
                                                                },
                                                                "sink": {
                                                                    "name": "subscriptionName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['date']"
                                                                },
                                                                "sink": {
                                                                    "name": "date",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['product']"
                                                                },
                                                                "sink": {
                                                                    "name": "product",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['partNumber']"
                                                                },
                                                                "sink": {
                                                                    "name": "partNumber",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['meterId']"
                                                                },
                                                                "sink": {
                                                                    "name": "meterId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['quantity']"
                                                                },
                                                                "sink": {
                                                                    "name": "quantity",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['effectivePrice']"
                                                                },
                                                                "sink": {
                                                                    "name": "effectivePrice",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['cost']"
                                                                },
                                                                "sink": {
                                                                    "name": "cost",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['unitPrice']"
                                                                },
                                                                "sink": {
                                                                    "name": "unitPrice",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingCurrency']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingCurrency",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['resourceLocation']"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceLocation",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['consumedService']"
                                                                },
                                                                "sink": {
                                                                    "name": "consumedService",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['resourceId']"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['resourceName']"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['invoiceSection']"
                                                                },
                                                                "sink": {
                                                                    "name": "invoiceSection",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['resourceGroup']"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceGroup",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['offerId']"
                                                                },
                                                                "sink": {
                                                                    "name": "offerId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['isAzureCreditEligible']"
                                                                },
                                                                "sink": {
                                                                    "name": "isAzureCreditEligible",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['publisherType']"
                                                                },
                                                                "sink": {
                                                                    "name": "publisherType",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['chargeType']"
                                                                },
                                                                "sink": {
                                                                    "name": "chargeType",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['frequency']"
                                                                },
                                                                "sink": {
                                                                    "name": "frequency",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['meterDetails']"
                                                                },
                                                                "sink": {
                                                                    "name": "meterDetails",
                                                                    "type": "String"
                                                                }
                                                            }
                                                        ],
                                                        "collectionReference": "$['value']"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "RestResource_BillingData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "p_RelativeURL": {
                                                                "value": "/subscriptions/@{item().SubscriptionGuid}/providers/Microsoft.Consumption/usageDetails?api-version=2019-10-01&$filter=properties/usageStart gt '@{variables('BillingDate')}' and properties/usageEnd lt '@{variables('BillingDate')}'",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BillingDataCSV",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "sink_filename": {
                                                                "value": "@{item().SubscriptionName}_@{item().SubscriptionGuid}_@{variables('BillingDate')}.csv",
                                                                "type": "Expression"
                                                            },
                                                            "dir_name": {
                                                                "value": "@{formatDateTime(variables('BillingDate'), 'yyyy')}/@{formatDateTime(variables('BillingDate'), 'MM')}/@{formatDateTime(variables('BillingDate'), 'dd')}/Usage",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "GetBearerToken_Retry",
                                                "description": "Use this Web activity to get bearer token",
                                                "type": "WebActivity",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Wait 7 minutes",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "method": "POST",
                                                    "headers": {
                                                        "Content-Type": "application/x-www-form-urlencoded"
                                                    },
                                                    "url": {
                                                        "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                                        "type": "Expression"
                                                    },
                                                    "body": {
                                                        "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{pipeline().parameters.ClientSecret}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Set Token_Retry",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "GetBearerToken_Retry",
                                                        "dependencyConditions": [
                                                            "Completed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "Token",
                                                    "value": {
                                                        "value": "@concat('Bearer ',activity('GetBearerToken_Retry').output.access_token)",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API', ReportingDate='@{variables('BillingDate')}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "GetBearerTokenNew",
                                    "description": "Use this Web activity to get bearer token",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/x-www-form-urlencoded"
                                        },
                                        "url": {
                                            "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{pipeline().parameters.ClientSecret}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Token New",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "GetBearerTokenNew",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Token",
                                        "value": {
                                            "value": "@concat('Bearer ',activity('GetBearerTokenNew').output.access_token)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set List Variable",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Lookup BillingConfig",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Resource_List",
                            "value": {
                                "value": "@activity('Lookup BillingConfig').output.value",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Lookup BillingConfig",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set BillingDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@pipeline().parameters.BillingConfigKQL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "adx_BillingConfig",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Set BillingDate",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "BillingDate",
                            "value": {
                                "value": "@pipeline().parameters.BillingDate",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "ClientID": {
                        "type": "string",
                        "defaultValue": "aa5605bb-2877-483d-b005-e1439ee1f988"
                    },
                    "ClientSecret": {
                        "type": "string",
                        "defaultValue": "7h0wS-92Dhnm.GtDcwLdK.M04ICjazR0_v"
                    },
                    "tenant_id": {
                        "type": "string",
                        "defaultValue": "8a807b9b-02da-47f3-a903-791a42a2285c"
                    },
                    "BillingDate": {
                        "type": "string",
                        "defaultValue": "Default"
                    },
                    "BillingConfigKQL": {
                        "type": "string",
                        "defaultValue": "Default"
                    }
                },
                "variables": {
                    "Resource_List": {
                        "type": "Array"
                    },
                    "Token": {
                        "type": "String"
                    },
                    "x-ms-ratelimit-remaining-subscription-reads": {
                        "type": "String"
                    },
                    "BillingDate": {
                        "type": "String"
                    },
                    "REST_API_ProcessStatus": {
                        "type": "String",
                        "defaultValue": "Running"
                    },
                    "SubscriptionToLoad": {
                        "type": "Array"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:31Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pline VMMetrics Flatten JSON v4')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "dataflow Flatten JSON File",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "dataflowFlattenJSON",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "source_dirname": {
                                        "value": "'@{pipeline().parameters.p_source_dirname}'",
                                        "type": "Expression"
                                    },
                                    "filename": {
                                        "value": "'@{pipeline().parameters.p_filename}'",
                                        "type": "Expression"
                                    },
                                    "sink_dirname": {
                                        "value": "'@{pipeline().parameters.p_sink_dirname}'",
                                        "type": "Expression"
                                    }
                                },
                                "datasetParameters": {
                                    "jsonFile": {
                                        "dirname": {
                                            "value": "@pipeline().parameters.p_source_dirname",
                                            "type": "Expression"
                                        }
                                    },
                                    "sinkCSVFile": {
                                        "dirname": {
                                            "value": "@pipeline().parameters.p_sink_dirname",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_source_dirname": {
                        "type": "string",
                        "defaultValue": "json/2020/07/10"
                    },
                    "p_filename": {
                        "type": "string"
                    },
                    "p_sink_dirname": {
                        "type": "string",
                        "defaultValue": "csv/2020/07/10"
                    }
                },
                "folder": {
                    "name": "VM Metrics"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:31Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 1 - API Call - BillingSummary')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LoopThroughDays",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetProcessDates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetProcessDates').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Get BillingSummary",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "GetAPIKey",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Set Folder Path",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@concat('bearer ',activity('GetAPIKey').output.value)",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingSummary",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "relativeurl": {
                                                    "value": "v3/enrollments/@{item().BillingID}/billingPeriods/@{variables('v_ReportingMonth')}/balancesummary",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BillingSummary",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FilePath": {
                                                    "value": "@{variables('v_SubDirectory')}/Balancesummary/json/@{item().BillingID}.json",
                                                    "type": "Expression"
                                                },
                                                "container": {
                                                    "value": "@pipeline().parameters.p_containername",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "FlattenJson",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [
                                        {
                                            "activity": "Get BillingSummary",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "1.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "dataflowFlattenJson_Credit",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "container": {
                                                    "value": "'@{pipeline().parameters.p_containername}'",
                                                    "type": "Expression"
                                                },
                                                "directory": {
                                                    "value": "'@{variables('v_SubDirectory')}/Balancesummary'",
                                                    "type": "Expression"
                                                },
                                                "filename": {
                                                    "value": "'@{item().BillingID}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "ReadJsonFile": {},
                                                "OutputcsvFile": {
                                                    "Container": {
                                                        "value": "@pipeline().parameters.p_containername",
                                                        "type": "Expression"
                                                    },
                                                    "directory": {
                                                        "value": "@{variables('v_SubDirectory')}/Balancesummary/csv/",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                },
                                {
                                    "name": "GetAPIKey",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {},
                                        "url": {
                                            "value": "@concat(trim(item().KeyVaultURLForAPIKey),'?api-version=7.0')",
                                            "type": "Expression"
                                        },
                                        "authentication": {
                                            "type": "MSI",
                                            "resource": "https://vault.azure.net"
                                        }
                                    }
                                },
                                {
                                    "name": "SetBillingMonth",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SetProcessingDays",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_ReportingMonth",
                                        "value": {
                                            "value": "@{formatDateTime(item().EndDate, 'yyyy')}@{formatDateTime(item().EndDate, 'MM')}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Folder Path",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SetBillingMonth",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_SubDirectory",
                                        "value": {
                                            "value": "@{formatDateTime(item().EndDate, 'yyyy')}/@{formatDateTime(item().EndDate, 'MM')}/@{formatDateTime(item().EndDate, 'dd')}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "If Gateway Error",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get BillingSummary",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(greater(indexof(activity('Get BillingSummary').output.errors[0]['Message'], 'GatewayTimeout' ) ,-1), \ngreater(indexof(activity('Get BillingSummary').output.errors[0]['Message'], 'Too many requests' ) ,-1))\n",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Update ADFErrorLog - others",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - BillingSummary', ReportingDate='@{item().BeginDate},@{item().EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Retry Copy Rest Ouput', ErrorCode= '@{activity('Get BillingSummary').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Get BillingSummary').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= 'item().BillingID',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='@{pipeline().parameters.p_BatchType}'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError_Log",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog - others",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - BillingSummary', ReportingDate='@{item().BeginDate},@{item().EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= 'item().BillingID',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='@{pipeline().parameters.p_BatchType}'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Wait 7 minutes",
                                                "type": "Wait",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "waitTimeInSeconds": 420
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get BillingSummary_Retry",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - BillingSummary', ReportingDate='@{item().BeginDate},@{item().EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Retry Copy Rest Ouput', ErrorCode= '@{activity('Get BillingSummary_Retry').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Get BillingSummary_Retry').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= 'item().BillingID',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='@{pipeline().parameters.p_BatchType}'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - BillingSummary', ReportingDate='@{item().ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Get BillingSummary_Retry",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Wait 7 minutes",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RestSource",
                                                        "httpRequestTimeout": "00:01:40",
                                                        "requestInterval": "00.00:00:00.010",
                                                        "requestMethod": "GET",
                                                        "additionalHeaders": {
                                                            "Authorization": {
                                                                "value": "@concat('bearer ',activity('GetAPIKey').output.value)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "JsonSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "JsonWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "RestResource_BillingSummary",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "relativeurl": {
                                                                "value": "v3/enrollments/@{item().BillingID}/billingPeriods/@{variables('v_ReportingMonth')}/balancesummary",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BillingSummary",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "FilePath": {
                                                                "value": "@{variables('v_SubDirectory')}/Balancesummary/json/@{item().BillingID}.json",
                                                                "type": "Expression"
                                                            },
                                                            "container": {
                                                                "value": "@pipeline().parameters.p_containername",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "FlattenJson_copy",
                                                "type": "ExecuteDataFlow",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get BillingSummary_Retry",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "1.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "dataflow": {
                                                        "referenceName": "dataflowFlattenJson_Credit",
                                                        "type": "DataFlowReference",
                                                        "parameters": {
                                                            "container": {
                                                                "value": "'@{pipeline().parameters.p_containername}'",
                                                                "type": "Expression"
                                                            },
                                                            "directory": {
                                                                "value": "'@{variables('v_SubDirectory')}/Balancesummary'",
                                                                "type": "Expression"
                                                            },
                                                            "filename": {
                                                                "value": "'@{item().BillingID}'",
                                                                "type": "Expression"
                                                            }
                                                        },
                                                        "datasetParameters": {
                                                            "ReadJsonFile": {},
                                                            "OutputcsvFile": {
                                                                "Container": {
                                                                    "value": "@pipeline().parameters.p_containername",
                                                                    "type": "Expression"
                                                                },
                                                                "directory": {
                                                                    "value": "@{variables('v_SubDirectory')}/Balancesummary/csv/",
                                                                    "type": "Expression"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "staging": {},
                                                    "compute": {
                                                        "coreCount": 8,
                                                        "computeType": "General"
                                                    },
                                                    "traceLevel": "Fine"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "SetProcessingDays",
                                    "type": "AppendVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_ReportingDates",
                                        "value": {
                                            "value": "@item().EndDate",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Lookup Max Error TimeStamp",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "let _lastretry = toscalar(WaterMark | distinct Credit_LastRetry);\nADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - BillingSummary'\n| where ErrorMessage !contains 'NotFound'\n| summarize MaxErrorTimeStamp = max(ErrorTimestamp)\n| project MaxErrorTimeStamp=iif(isnull(MaxErrorTimeStamp),_lastretry,MaxErrorTimeStamp)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            }
                        }
                    },
                    {
                        "name": "Update ADX Table",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "LoopThroughDays",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 2 - ADX Stage to Prod - BillingSummary",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_StorageAccountContainer": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "p_BillingDate": {
                                    "value": "@variables('v_ReportingDates')",
                                    "type": "Expression"
                                },
                                "p_SubDirectory": "Balancesummary"
                            }
                        }
                    },
                    {
                        "name": "Update WaterMark",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Update ADX Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace WaterMark <|\nWaterMark\n| project BillingData_LastRetry,Reservation_LastRetry, Credit_LastRetry = todatetime('@{activity('Lookup Max Error TimeStamp').output.firstRow.MaxErrorTimeStamp}'),ReservationDesc_LastRetry,MarketPlace_LastRetry,ForeCast_LastRetry",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "GetProcessDates",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Is Process Date Passed",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@variables('v_KQL')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Is Process Date Passed",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Lookup Max Error TimeStamp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(and(equals(pipeline().parameters.p_BeginDate,'NA'),equals(pipeline().parameters.p_EndDate,'NA')),equals(pipeline().parameters.p_BatchType,'Daily'))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Set KQL ProcessDate not equals NA",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_KQL",
                                        "value": {
                                            "value": "let _batchmode = '@{pipeline().parameters.p_BatchType}';\nlet _startdate = iif('@{pipeline().parameters.p_BeginDate}'=~'NA', startofmonth(now(),-1), todatetime('@{pipeline().parameters.p_BeginDate}'));\nlet _enddate = iif('@{pipeline().parameters.p_EndDate}'=~'NA', endofmonth(now(),-1), todatetime('@{pipeline().parameters.p_EndDate}'));\nlet _lastretry = toscalar(WaterMark | distinct Credit_LastRetry);\nlet BillingIds = materialize(datatable (CommonJoin:int, BillingID:dynamic) [1, dynamic(@{pipeline().parameters.p_BillingIds})] | mv-expand BillingID \n| extend x=parse_json(BillingID) | project CommonJoin, BillingID = tostring(x.BillingID), KeyVaultURLForAPIKey=tostring(x.KeyVaultURLForAPIKey));\nlet NewBatch = materialize(\nBillingIds | extend BillingID=tostring(BillingID), BeginDate = todatetime(_startdate), EndDate = todatetime(_enddate), ReportingDate=range(_startdate, _enddate, 1d)\n| mv-expand ReportingDate\n| extend ReportingDate = todatetime(ReportingDate)\n);\nlet FailedBatch = materialize( ADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - BillingSummary'\n| extend BeginDate=todatetime(split(ReportingDate, ',')[0]), EndDate=todatetime(split(ReportingDate, ',')[1])\n| extend ReportingDate=range(BeginDate, EndDate, 1d)\n| mv-expand ReportingDate\n| project BillingID=ErrorResourceID,BeginDate, EndDate, ReportingDate=todatetime(ReportingDate)\n);\nNewBatch\n| union FailedBatch\n| extend Month=format_datetime(ReportingDate, 'yyyy-MM')\n| summarize BeginDate=min(ReportingDate), EndDate=max(ReportingDate) by BillingID, Month\n| extend BeginDate=startofmonth(BeginDate), EndDate=endofmonth(EndDate)\n| project BillingID, BeginDate=format_datetime(BeginDate, 'yyyy-MM-dd'), EndDate=format_datetime(EndDate, 'yyyy-MM-dd')\n| distinct BillingID, BeginDate, EndDate\n| join kind=inner BillingIds on BillingID\n| project-away BillingID1",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Set KQL ProcessDate equals NA",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_KQL",
                                        "value": {
                                            "value": "let _batchmode = '@{pipeline().parameters.p_BatchType}';\nlet _lookbackdayparameter = now(-@{pipeline().parameters.p_LookBackInDay}d);\nlet _lastretry = toscalar(WaterMark | distinct Credit_LastRetry);\nlet BillingIds = materialize(datatable (CommonJoin:int, BillingID:dynamic) [1, dynamic(@{pipeline().parameters.p_BillingIds})] | mv-expand BillingID \n| extend x=parse_json(BillingID) | project BillingID = tostring(x.BillingID), KeyVaultURLForAPIKey=tostring(x.KeyVaultURLForAPIKey));\nlet NewBatch = materialize(\nBillingIds | extend BillingID=tostring(BillingID), BeginDate = todatetime(_lookbackdayparameter), EndDate = todatetime(now(-1d)), ReportingDate=range(_lookbackdayparameter, now(-1d), 1d)\n| mv-expand ReportingDate\n| extend ReportingDate = todatetime(ReportingDate)\n);\nlet FailedBatch = materialize( ADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - BillingSummary'\n| extend BeginDate=todatetime(split(ReportingDate, ',')[0]), EndDate=todatetime(split(ReportingDate, ',')[1])\n| extend ReportingDate=range(BeginDate, EndDate, 1d)\n| mv-expand ReportingDate\n| project BillingID=ErrorResourceID,BeginDate, EndDate, ReportingDate=todatetime(ReportingDate)\n);\nNewBatch\n| union FailedBatch\n| extend Month=format_datetime(ReportingDate, 'yyyy-MM')\n| summarize BeginDate=min(ReportingDate), EndDate=max(ReportingDate) by BillingID, Month\n| extend BeginDate=startofmonth(BeginDate), EndDate=endofmonth(EndDate)\n| project BillingID, BeginDate=format_datetime(BeginDate, 'yyyy-MM-dd'), EndDate=format_datetime(EndDate, 'yyyy-MM-dd')\n| distinct BillingID, BeginDate, EndDate\n| join kind=inner BillingIds on BillingID\n| project-away BillingID1",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_LookBackInDay": {
                        "type": "string",
                        "defaultValue": "3"
                    },
                    "p_BillingIds": {
                        "type": "array",
                        "defaultValue": [
                            {
                                "BillingID": "46132814",
                                "KeyVaultURLForAPIKey": "https://kv-acrp-dev.vault.azure.net/secrets/APIKey-46132814/997864aa1b904061bd8a229e52b56ea4"
                            }
                        ]
                    },
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BeginDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_EndDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_BatchType": {
                        "type": "string",
                        "defaultValue": "Daily"
                    }
                },
                "variables": {
                    "v_KQL": {
                        "type": "String"
                    },
                    "v_ReportingDates": {
                        "type": "Array"
                    },
                    "v_SubDirectory": {
                        "type": "String"
                    },
                    "v_ReportingMonth": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-02-19T09:48:44Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 1 - API Call - ReservationDescs')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LoopThroughDays",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetProcessDates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetProcessDates').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Get Reservation Descriptions",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "SetprocessDate",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 3,
                                        "retryIntervalInSeconds": 60,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET"
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['name']"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['type']"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['eventDate']"
                                                    },
                                                    "sink": {
                                                        "name": "eventDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['reservationOrderId']"
                                                    },
                                                    "sink": {
                                                        "name": "reservationOrderId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['description']"
                                                    },
                                                    "sink": {
                                                        "name": "description",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['eventType']"
                                                    },
                                                    "sink": {
                                                        "name": "eventType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['quantity']"
                                                    },
                                                    "sink": {
                                                        "name": "quantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['amount']"
                                                    },
                                                    "sink": {
                                                        "name": "amount",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['currency']"
                                                    },
                                                    "sink": {
                                                        "name": "currency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['reservationOrderName']"
                                                    },
                                                    "sink": {
                                                        "name": "reservationOrderName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['purchasingEnrollment']"
                                                    },
                                                    "sink": {
                                                        "name": "purchasingEnrollment",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['armSkuName']"
                                                    },
                                                    "sink": {
                                                        "name": "armSkuName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['term']"
                                                    },
                                                    "sink": {
                                                        "name": "term",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['region']"
                                                    },
                                                    "sink": {
                                                        "name": "region",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['purchasingSubscriptionGuid']"
                                                    },
                                                    "sink": {
                                                        "name": "purchasingSubscriptionGuid",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['purchasingSubscriptionName']"
                                                    },
                                                    "sink": {
                                                        "name": "purchasingSubscriptionName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountName']"
                                                    },
                                                    "sink": {
                                                        "name": "accountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountOwnerEmail']"
                                                    },
                                                    "sink": {
                                                        "name": "accountOwnerEmail",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['departmentName']"
                                                    },
                                                    "sink": {
                                                        "name": "departmentName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['costCenter']"
                                                    },
                                                    "sink": {
                                                        "name": "costCenter",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['currentEnrollment']"
                                                    },
                                                    "sink": {
                                                        "name": "currentEnrollment",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingFrequency']"
                                                    },
                                                    "sink": {
                                                        "name": "billingFrequency",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_RelativeURL": {
                                                    "value": "/providers/Microsoft.Billing/billingAccounts/@{item().BillingID}/providers/Microsoft.Consumption/reservationTransactions?$filter=properties/eventDate+ge+@{item().BeginDate}+AND+properties/eventDate+le+@{item().EndDate}&api-version=2019-10-01",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BillingDataCSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sink_filename": {
                                                    "value": "@{item().BillingID}_ReservationDescription.csv",
                                                    "type": "Expression"
                                                },
                                                "dir_name": {
                                                    "value": "@{formatDateTime(item().EndDate, 'yyyy')}/@{formatDateTime(item().EndDate, 'MM')}/@{formatDateTime(item().EndDate, 'dd')}/@{variables('v_SubDirectory')}",
                                                    "type": "Expression"
                                                },
                                                "container_name": {
                                                    "value": "@pipeline().parameters.p_containername",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Update ADFErrorLog - others",
                                    "type": "AzureDataExplorerCommand",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Reservation Descriptions",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "command": {
                                            "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Resv Desc', ReportingDate='@{item().BeginDate},@{item().EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Retry Copy Rest Ouput', ErrorCode= '@{activity('Get Reservation Descriptions').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Get Reservation Descriptions').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().BillingID}',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}'),BatchMode='@{pipeline().parameters.p_BatchType}'",
                                            "type": "Expression"
                                        },
                                        "commandTimeout": "00:20:00"
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Update ADFErrorLog_SimpleError_Log",
                                    "type": "AzureDataExplorerCommand",
                                    "dependsOn": [
                                        {
                                            "activity": "Update ADFErrorLog - others",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "command": {
                                            "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Resv Desc', ReportingDate=''@{item().BeginDate},@{item().EndDate}'' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().BillingID}',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}'),BatchMode='@{pipeline().parameters.p_BatchType}'",
                                            "type": "Expression"
                                        },
                                        "commandTimeout": "00:20:00"
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "SetprocessDate",
                                    "type": "AppendVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_ReportingDates",
                                        "value": {
                                            "value": "@item().EndDate",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Lookup Max Error TimeStamp",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "let _lastretry = toscalar(WaterMark | distinct ReservationDesc_LastRetry);\nADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - Resv Desc'\n| summarize MaxErrorTimeStamp = max(ErrorTimestamp)\n| project MaxErrorTimeStamp=iif(isnull(MaxErrorTimeStamp),_lastretry,MaxErrorTimeStamp)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            }
                        }
                    },
                    {
                        "name": "Update ADX Table",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "LoopThroughDays",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 2 - ADX Stage to Prod - ReservationDesc",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_StorageAccountContainer": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "p_BillingDate": {
                                    "value": "@variables('v_ReportingDates')",
                                    "type": "Expression"
                                },
                                "p_SubDirectory": {
                                    "value": "@variables('v_SubDirectory')",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Update WaterMark",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Update ADX Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace WaterMark <|\nWaterMark\n| project BillingData_LastRetry,Reservation_LastRetry, Credit_LastRetry,ReservationDesc_LastRetry = todatetime('@{activity('Lookup Max Error TimeStamp').output.firstRow.MaxErrorTimeStamp}'),MarketPlace_LastRetry,ForeCast_LastRetry",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Is Process Date Passed",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Lookup Max Error TimeStamp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(and(equals(pipeline().parameters.p_BeginDate,'NA'),equals(pipeline().parameters.p_EndDate,'NA')),equals(pipeline().parameters.p_BatchType,'Daily'))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Set KQL ProcessDate not equals NA",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_KQL",
                                        "value": {
                                            "value": "let _batchmode = '@{pipeline().parameters.p_BatchType}';\nlet _startdate = iif('@{pipeline().parameters.p_BeginDate}'=~'NA', startofmonth(now(),-1), todatetime('@{pipeline().parameters.p_BeginDate}'));\nlet _enddate = iif('@{pipeline().parameters.p_EndDate}'=~'NA', endofmonth(now(),-1), todatetime('@{pipeline().parameters.p_EndDate}'));\nlet _lastretry = toscalar(WaterMark | distinct ReservationDesc_LastRetry);\nlet BillingIds = materialize(datatable (CommonJoin:int, BillingID:dynamic) [1, dynamic(@{pipeline().parameters.p_BillingIds})] | mv-expand BillingID | extend BillingID=tostring(BillingID));\nlet NewBatch = materialize(\nBillingIds | extend BillingID=tostring(BillingID), BeginDate = todatetime(_startdate), EndDate = todatetime(_enddate), ReportingDate=range(_startdate, _enddate, 1d)\n| mv-expand ReportingDate\n| extend ReportingDate = todatetime(ReportingDate)\n| project-away CommonJoin\n);\nlet FailedBatch = materialize( ADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - Resv Desc'\n| extend BeginDate=todatetime(split(ReportingDate, ',')[0]), EndDate=todatetime(split(ReportingDate, ',')[1])\n| extend ReportingDate=range(BeginDate, EndDate, 1d)\n| mv-expand ReportingDate\n| project BillingID=ErrorResourceID,BeginDate, EndDate, ReportingDate=todatetime(ReportingDate)\n);\nNewBatch\n| union FailedBatch\n| extend Month=format_datetime(ReportingDate, 'yyyy-MM')\n| summarize BeginDate=min(ReportingDate), EndDate=max(ReportingDate) by BillingID, Month\n| extend BeginDate=startofmonth(BeginDate), EndDate=endofmonth(EndDate)\n| project BillingID, BeginDate=format_datetime(BeginDate, 'yyyy-MM-dd'), EndDate=format_datetime(EndDate, 'yyyy-MM-dd')\n| distinct BillingID, BeginDate, EndDate",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Set KQL ProcessDate equals NA",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_KQL",
                                        "value": {
                                            "value": "let _batchmode = '@{pipeline().parameters.p_BatchType}';\nlet _lookbackdayparameter = now(-@{pipeline().parameters.p_LookBackInDay}d);\nlet _lastretry = toscalar(WaterMark | distinct ReservationDesc_LastRetry);\nlet BillingIds = materialize(datatable (CommonJoin:int, BillingID:dynamic) [1, dynamic(@{pipeline().parameters.p_BillingIds})] | mv-expand BillingID | extend BillingID = tostring(BillingID));\nlet NewBatch = materialize(\nBillingIds | extend BillingID=tostring(BillingID), BeginDate = todatetime(_lookbackdayparameter), EndDate = todatetime(now(-1d)), ReportingDate=range(_lookbackdayparameter, now(-1d), 1d)\n| mv-expand ReportingDate\n| extend ReportingDate = todatetime(ReportingDate)\n| project-away CommonJoin\n);\nlet FailedBatch = materialize( ADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - Resv Desc'\n| extend BeginDate=todatetime(split(ReportingDate, ',')[0]), EndDate=todatetime(split(ReportingDate, ',')[1])\n| extend ReportingDate=range(BeginDate, EndDate, 1d)\n| mv-expand ReportingDate\n| project BillingID=ErrorResourceID,BeginDate, EndDate, ReportingDate=todatetime(ReportingDate)\n);\nNewBatch\n| union FailedBatch\n| extend Month=format_datetime(ReportingDate, 'yyyy-MM')\n| summarize BeginDate=min(ReportingDate), EndDate=max(ReportingDate) by BillingID, Month\n| extend BeginDate=startofmonth(BeginDate), EndDate=endofmonth(EndDate)\n| project BillingID, BeginDate=format_datetime(BeginDate, 'yyyy-MM-dd'), EndDate=format_datetime(EndDate, 'yyyy-MM-dd')\n| distinct BillingID, BeginDate, EndDate",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "GetProcessDates",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Is Process Date Passed",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@variables('v_KQL')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_LookBackInDay": {
                        "type": "string",
                        "defaultValue": "3"
                    },
                    "p_BillingIds": {
                        "type": "array",
                        "defaultValue": [
                            "46132814"
                        ]
                    },
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BeginDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_EndDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_BatchType": {
                        "type": "string",
                        "defaultValue": "Daily"
                    }
                },
                "variables": {
                    "v_KQL": {
                        "type": "String"
                    },
                    "v_ReportingDates": {
                        "type": "Array"
                    },
                    "v_SubDirectory": {
                        "type": "String",
                        "defaultValue": "ReservationOrdersDesc"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-02-19T09:48:44Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API - Usage - LoadMonthlyData_BillingID_copy1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetDateRange",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@pipeline().parameters.DaterangeKQL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": {
                                        "value": "ADFErrorLog",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach Date",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Set Token_Initial",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetDateRange').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Copy REST Output",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 10,
                                        "retryIntervalInSeconds": 60,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:10:00",
                                            "requestInterval": "00.00:00:02.000",
                                            "requestMethod": "GET",
                                            "paginationRules": {
                                                "AbsoluteUrl": "$['nextLink']"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".csv"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['kind']"
                                                    },
                                                    "sink": {
                                                        "name": "kind",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['name']"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['type']"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['tags']"
                                                    },
                                                    "sink": {
                                                        "name": "tags",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingAccountId']"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingAccountName']"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingPeriodStartDate']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingPeriodEndDate']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingProfileId']"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingProfileName']"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountOwnerId']"
                                                    },
                                                    "sink": {
                                                        "name": "accountOwnerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountName']"
                                                    },
                                                    "sink": {
                                                        "name": "accountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['subscriptionId']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['subscriptionName']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['date']"
                                                    },
                                                    "sink": {
                                                        "name": "date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['product']"
                                                    },
                                                    "sink": {
                                                        "name": "product",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['partNumber']"
                                                    },
                                                    "sink": {
                                                        "name": "partNumber",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['meterId']"
                                                    },
                                                    "sink": {
                                                        "name": "meterId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['quantity']"
                                                    },
                                                    "sink": {
                                                        "name": "quantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['effectivePrice']"
                                                    },
                                                    "sink": {
                                                        "name": "effectivePrice",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['cost']"
                                                    },
                                                    "sink": {
                                                        "name": "cost",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['unitPrice']"
                                                    },
                                                    "sink": {
                                                        "name": "unitPrice",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingCurrency']"
                                                    },
                                                    "sink": {
                                                        "name": "billingCurrency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceLocation']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceLocation",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['consumedService']"
                                                    },
                                                    "sink": {
                                                        "name": "consumedService",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceId']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceName']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['serviceInfo2']"
                                                    },
                                                    "sink": {
                                                        "name": "serviceInfo2",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['invoiceSection']"
                                                    },
                                                    "sink": {
                                                        "name": "invoiceSection",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceGroup']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceGroup",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['offerId']"
                                                    },
                                                    "sink": {
                                                        "name": "offerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['isAzureCreditEligible']"
                                                    },
                                                    "sink": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['publisherType']"
                                                    },
                                                    "sink": {
                                                        "name": "publisherType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['chargeType']"
                                                    },
                                                    "sink": {
                                                        "name": "chargeType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['frequency']"
                                                    },
                                                    "sink": {
                                                        "name": "frequency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['meterDetails']"
                                                    },
                                                    "sink": {
                                                        "name": "meterDetails",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_RelativeURL": {
                                                    "value": "/providers/Microsoft.Billing/BillingAccounts/@{item().BillingID}/providers/Microsoft.Consumption/usageDetails?api-version=2019-10-01&$expand=meterDetails&$filter=properties/usageStart gt '@{item().ReportingDateStart}' and properties/usageEnd lt '@{item().ReportingDateEnd}'",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "src_BillingDataTSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": {
                                                    "value": "billingdata",
                                                    "type": "Expression"
                                                },
                                                "DirectoryName": {
                                                    "value": "@{formatDateTime(item().ReportingDateEnd, 'yyyy')}/@{formatDateTime(item().ReportingDateEnd, 'MM')}/@{formatDateTime(item().ReportingDateEnd, 'dd')}/UsageByBillingID_Monthly",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@{item().BillingID}_usage.tsv",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Update ADFErrorLog - others",
                                    "type": "AzureDataExplorerCommand",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "command": {
                                            "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Historic', ReportingDate='@{item().ReportingDate},@{item().ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Copy Rest Ouput', ErrorCode= '@{activity('Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Copy REST Output').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().BillingID}',  ErrorSubscription= '@{item().BillingID}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                            "type": "Expression"
                                        },
                                        "commandTimeout": "00:20:00"
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Update ADFErrorLog_SimpleError_Log",
                                    "type": "AzureDataExplorerCommand",
                                    "dependsOn": [
                                        {
                                            "activity": "Update ADFErrorLog - others",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "command": {
                                            "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Historic', ReportingDate='@{item().ReportingDate},@{item().ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().BillingID}',  ErrorSubscription= '@{item().BillingID}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                            "type": "Expression"
                                        },
                                        "commandTimeout": "00:20:00"
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "DataLake to ADX",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 300,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureDataExplorerSink"
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "kind",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "kind",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "id",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "name",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "type",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "tags",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "tags",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingAccountId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingAccountName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingProfileId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingProfileName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "accountOwnerId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "accountOwnerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "accountName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "accountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "subscriptionId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "subscriptionName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "date",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "product",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "product",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "partNumber",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "partNumber",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "meterId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "meterId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "quantity",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "quantity",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "effectivePrice",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "effectivePrice",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "cost",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "cost",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "unitPrice",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "unitPrice",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingCurrency",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingCurrency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceLocation",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceLocation",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "consumedService",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "consumedService",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "serviceInfo2",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "serviceInfo2",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "invoiceSection",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "invoiceSection",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceGroup",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceGroup",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "offerId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "offerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "publisherType",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "publisherType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "chargeType",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "chargeType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "frequency",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "frequency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "meterDetails",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "meterDetails",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "src_BillingDataTSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "billingdata",
                                                "DirectoryName": {
                                                    "value": "@{formatDateTime(item().ReportingDateEnd, 'yyyy')}/@{formatDateTime(item().ReportingDateEnd, 'MM')}/@{formatDateTime(item().ReportingDateEnd, 'dd')}/UsageByBillingID_Monthly",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@{item().BillingID}_usage.tsv",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "adx_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "TableName": "BillingData_Tags_Monthly"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "GetSPNSecret",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@concat(pipeline().parameters.p_SPNSecretURL,'?api-version=7.0')",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Set RefreshToken Flag",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "ForEach Date",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Stop Token Refresh",
                            "value": true
                        }
                    },
                    {
                        "name": "Refresh Token Every 5 Min",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "Set Token_Initial",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@bool(variables('Stop Token Refresh'))",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Set Token",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "GetBearerToken",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Token",
                                        "value": {
                                            "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Wait 5 Min",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 300
                                    }
                                },
                                {
                                    "name": "GetBearerToken",
                                    "description": "Use this Web activity to get bearer token",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Wait 5 Min",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/x-www-form-urlencoded"
                                        },
                                        "url": {
                                            "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{activity('GetSPNSecret').output.value}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "timeout": "7.00:00:00"
                        }
                    },
                    {
                        "name": "Set Token_Initial",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "GetBearerToken_Initial",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Token",
                            "value": {
                                "value": "@concat('Bearer ',activity('GetBearerToken_Initial').output.access_token)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "GetBearerToken_Initial",
                        "description": "Use this Web activity to get bearer token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GetDateRange",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetSPNSecret",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{activity('GetSPNSecret').output.value}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "ClientID": {
                        "type": "string",
                        "defaultValue": "aa5605bb-2877-483d-b005-e1439ee1f988"
                    },
                    "tenant_id": {
                        "type": "string",
                        "defaultValue": "8a807b9b-02da-47f3-a903-791a42a2285c"
                    },
                    "DaterangeKQL": {
                        "type": "string",
                        "defaultValue": "range ReportingDate from datetime(2021-07-01 00:00:00) to datetime(2021-08-31 00:00:00) step 1d  | extend ReportingDateStart= format_datetime(startofmonth(ReportingDate), 'yyyy-MM-dd'), ReportingDateEnd= format_datetime(endofmonth(ReportingDate), 'yyyy-MM-dd') | distinct ReportingDateStart, ReportingDateEnd | extend JoinKey = 1 | join kind=inner ( print BillingID = '78931757', JoinKey = 1 | union (print BillingID = '88673741', JoinKey = 1) ) on JoinKey | project ReportingDateStart, ReportingDateEnd, BillingID"
                    },
                    "p_SPNSecretURL": {
                        "type": "string",
                        "defaultValue": "https://kv-ccop-dv.vault.azure.net/secrets/CostMGMT-SPN-Secret/eafafff824ca4d8c8a8c604579b70ed1"
                    }
                },
                "variables": {
                    "Token": {
                        "type": "String"
                    },
                    "Stop Token Refresh": {
                        "type": "Boolean",
                        "defaultValue": false
                    }
                },
                "folder": {
                    "name": "Billing/HistoricData"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:31Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/BillingData LoadReferenceFiles')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Loads Reference data for Billing Data",
                "activities": [
                    {
                        "name": "ProductMeterCategory_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_ProductMeterCategory",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Product",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Product",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FNGCategory",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "FNGCategory",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostType",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CostType",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsPrePay",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "IsPrePay",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADX_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_ProductMeterCategory",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_ProductMeterCategory",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_ProductMeterCategory"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_ProductMeterCategory",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LOB",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_ProductMeterCategory <|\nStaging_ProductMeterCategory \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ProductMeterCategory",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ProductMeterCategory_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ProductMeterCategory <| Staging_ProductMeterCategory \n| extend Product=tolower(Product),FNGCategory=tolower(FNGCategory),CostType=tolower(CostType),IsPrePay=tobool(IsPrePay)\n| distinct Product, FNGCategory, CostType, IsPrePay",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOBBudget_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_LOBBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "LineOfBusiness",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "LineOfBusiness",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YearMonth",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "YearMonth",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Budget",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Budget",
                                            "type": "Int64",
                                            "physicalType": "long"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADX_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_LOBBudget",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_LOBBudget"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_LOBBudget",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ProductMeterCategory",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_LOBBudget <|\nStaging_LOBBudget \n| where 1==0\n",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOBBudget",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LOBBudget_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace LOBBudget <|\nlet UnDefined = 'undefined';\nStaging_LOBBudget\n| extend Year=split(YearMonth, '-')[0],Month=split(YearMonth, '-')[1]\n| extend YearMonth = strcat(Year,'-', substring(strcat('0',Month), -2, 2))\n| project LineOfBusiness, YearMonth, Budget\n| join kind=leftouter LOB on $left.LineOfBusiness==$right.ID\n| extend LineOfBusiness = iif(isempty(ID),UnDefined,ShortName)\n| project LineOfBusiness, YearMonth, Budget",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationLKP_Data",
                        "type": "Copy",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_ApplicationLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "App ID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Application Name",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ApplicationName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppAbreviation",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppAbreviation",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostCenter",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CostCenter",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ISApplication",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "IsApplication",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AvalibleForCostReporting",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AvailableForCostReporting",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RTO",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "RTO",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RPO",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "RPO",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Revenue",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Revenue",
                                            "type": "Double",
                                            "physicalType": "real"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ITAppOwner",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ITAppOWner",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "HostedInAzure",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "HostedInAzure",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppLOB",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppLOB",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SFTP_CSVText_referencedata",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@pipeline().parameters.p_FileName_ApplicationLKP",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_ApplicationLKP"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_ApplicationLKP",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "LOBBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_ApplicationLKP <|\nStaging_ApplicationLKP \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationLKP",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "ApplicationLKP_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ApplicationLKP <|\n Staging_ApplicationLKP\n| extend rpo_t = toint(split(RPO, ' ')[0]), HostedInAzure_t = tobool(HostedInAzure)\n| extend rpo_c = iif(isnull(rpo_t),toint(0),rpo_t), HostedInAzure_c = iif(isnull(HostedInAzure_t),false,HostedInAzure_t)\n| project AppID, ApplicationName, AppAbreviation, CostCenter, IsApplication = tobool(IsApplication), AvailableForCostReporting = tobool(AvailableForCostReporting),\n RTO=toint(RTO), RPO = rpo_c, Revenue, ITAppOWner, HostedInAzure= HostedInAzure_c, AppLOB",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationBudget_Data",
                        "type": "Copy",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "Staging_ApplicationBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "SubscriptionGuid",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionGuid",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceGroupFQN",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceGroupFQN",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": " AppCode",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppCode",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingMonth",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "BillingMonth",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BudgetAMT",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "BudgetAMT",
                                            "type": "Double",
                                            "physicalType": "real"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Year",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Year",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Month",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Month",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SFTP_CSVText_referencedata",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@pipeline().parameters.p_FileName_ApplicationBudget",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_ApplicationBudget"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Staging_ApplicationBudget",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "ApplicationLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_ApplicationBudget <|\nStaging_ApplicationBudget \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationBudget",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "ApplicationBudget_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ApplicationBudget <|\n Staging_ApplicationBudget\n| extend YearMonth_t = strcat(Year,'-', substring(strcat('0',Month), -2, 2))\n| project SubscriptionGuid=tolower(SubscriptionGuid), SubscriptionName=tolower(SubscriptionName), ResourceGroupFQN=tolower(ResourceGroupFQN), AppCode=tolower(AppCode), AppName=tolower(AppName), BillingMonth = YearMonth_t, BudgetAMT,\nParentHostingSubHostingID=tolower(ParentHostingSubHostingID)",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "HostingLKP_Data",
                        "type": "Copy",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "Staging_HostingLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentHostingID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentHostingServiceName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingServiceName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubHostingServiceID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubHostingServiceID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubHostingServiceName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubHostingServiceName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SFTP_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_HostingLKP",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_HostingLKP"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Staging_HostingLKP",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "ApplicationBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_HostingLKP <|\nStaging_HostingLKP \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "HostingLKP",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "HostingLKP_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace HostingLKP <|\nStaging_HostingLKP\n| extend ParentHostingSubHostingID=toreal(ParentHostingSubHostingID),ParentHostingID=tolong(ParentHostingID),SubHostingServiceID=tolong(SubHostingServiceID),ParentHostingServiceName=tolower(ParentHostingServiceName),SubHostingServiceName=tolower(SubHostingServiceName)\n| project ParentHostingSubHostingID, ParentHostingID, ParentHostingServiceName, SubHostingServiceID, SubHostingServiceName",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Copy ITSMOCostMapping to ADX",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Reset Staging_BillingConfig",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "RGFQN",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceGroupFQN",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscritionGuid",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionGuid",
                                            "type": "Guid",
                                            "physicalType": "guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceGroupName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceGroupName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Environment",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Environment",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "App1",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "App1",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "App2",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "App2",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BudgetCenter",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "BudgetCenter",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BusinesUnit",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "BusinesUnit",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADX_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_ITSMOCostMapping",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_BillingConfig"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Staging_BillingConfig to BillingConfig",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Copy ITSMOCostMapping to ADX",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace BillingConfig <| \nlet UnDefined = 'undefined';\nStaging_BillingConfig\n| extend SubscriptionGuid=toguid(tolower(SubscriptionGuid)),\nResourceGroupFQN=tolower(ResourceGroupFQN),\nSubscriptionName = trim_start(\" \",tolower(replace(@'./.', @'_\\1', SubscriptionName))),\nResourceGroupName=tolower(ResourceGroupName),\nEnvironment=tolower(Environment),\nApp1=tolower(App1),\nApp2=tolower(App2),\nBudgetCenter=tolower(BudgetCenter),\nBusinesUnit=tolower(BusinesUnit)\n| distinct ResourceGroupFQN, SubscriptionName, SubscriptionGuid, ResourceGroupName, Environment, App1, App2, BudgetCenter, BusinesUnit\n| join kind=leftouter LOB on $left.BusinesUnit==$right.FullName\n| extend BusinesUnit = iif(isempty(FullName),UnDefined,ShortName)\n//| join kind=leftouter (LOB | project ID1=ID, FullName1=FullName) on $left.FinanceLOB==$right.ID1\n//| extend FinanceLOB = iif(isempty(ID1),UnDefined,FullName1)\n//| join kind=leftouter (HostingLKP | project ParentHostingSubHostingID=tostring(ParentHostingSubHostingID), SubHostingServiceName) on $left.HostingService==$right.ParentHostingSubHostingID\n//| extend Environment = iif(isempty(ParentHostingSubHostingID), UnDefined, SubHostingServiceName)\n| distinct ResourceGroupFQN, SubscriptionName, SubscriptionGuid, ResourceGroupName, Environment, App1, App2, BudgetCenter, BusinesUnit",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset Staging_BillingConfig",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "HostingLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace Staging_BillingConfig <|\nBillingConfig \n| where 1==0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LoadFlexData_Staging",
                        "type": "Copy",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "Clear Staging_FlexData",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "HttpReadSettings",
                                    "requestMethod": "GET"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "InstanceSizeFlexibilityGroup",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "InstanceSizeFlexibilityGroup",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ArmSkuName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ArmSkuName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Ratio",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Ratio",
                                            "type": "Double",
                                            "physicalType": "real"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "Flex_ISFRatio",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_FlexGroup"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear Staging_FlexData",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "Staging_BillingConfig to BillingConfig",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_FlexGroup<|\nStaging_FlexGroup\n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "FlexData",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "LoadFlexData_Staging",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace FlexGroup <|\nStaging_FlexGroup",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOB_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_LOB",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ShortName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ShortName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FullName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "FullName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADX_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_LOBLookUp",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_LOB"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_LOB",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_LOB <|\nStaging_LOB \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOB",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LOB_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace LOB <| Staging_LOB \n| extend ShortName=tolower(ShortName),FullName=tolower(FullName)\n| project ID, ShortName, FullName",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_Container": {
                        "type": "string",
                        "defaultValue": "referencedata"
                    },
                    "p_FileName_ProductMeterCategory": {
                        "type": "string",
                        "defaultValue": "ProductMeterCategory.xlsx"
                    },
                    "p_WorkSheetName_ProductMeterCategory": {
                        "type": "string",
                        "defaultValue": "ProductMeterCategory"
                    },
                    "p_FileName_ApplicationLKP": {
                        "type": "string",
                        "defaultValue": "ApplicationLKP.csv"
                    },
                    "p_FileName_ApplicationBudget": {
                        "type": "string",
                        "defaultValue": "ApplicationBudget.csv"
                    },
                    "p_FileName_CostMapping": {
                        "type": "string",
                        "defaultValue": "ITSMOCostMapping.xlsx"
                    },
                    "p_FileName_FlexData": {
                        "type": "string",
                        "defaultValue": "ISFRatio.csv"
                    },
                    "p_WorkSheetName_HostingLKP": {
                        "type": "string",
                        "defaultValue": "HostingLKP"
                    },
                    "p_WorkSheetName_LOBLookUp": {
                        "type": "string",
                        "defaultValue": "LOBLookUp"
                    },
                    "p_WorkSheetName_ITSMOCostMapping": {
                        "type": "string",
                        "defaultValue": "ITSMOCostMapping"
                    },
                    "p_WorkSheetName_LOBBudget": {
                        "type": "string",
                        "defaultValue": "LOBBudget"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-21T12:47:27Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API - Usage - LoadMonthlyData_SplitDaily_BillingID')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetDateRange",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@pipeline().parameters.DaterangeKQL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": {
                                        "value": "ADFErrorLog",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach Date",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetDateRange",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetSPNSecret",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetDateRange').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Copy REST Output",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Token",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 10,
                                        "retryIntervalInSeconds": 60,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:10:00",
                                            "requestInterval": "00.00:00:02.000",
                                            "requestMethod": "GET",
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@variables('Token')",
                                                    "type": "Expression"
                                                }
                                            },
                                            "paginationRules": {
                                                "AbsoluteUrl": "$['nextLink']"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".csv"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['kind']"
                                                    },
                                                    "sink": {
                                                        "name": "kind",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['name']"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['type']"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['tags']"
                                                    },
                                                    "sink": {
                                                        "name": "tags",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingAccountId']"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingAccountName']"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingPeriodStartDate']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingPeriodEndDate']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingProfileId']"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingProfileName']"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountOwnerId']"
                                                    },
                                                    "sink": {
                                                        "name": "accountOwnerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountName']"
                                                    },
                                                    "sink": {
                                                        "name": "accountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['subscriptionId']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['subscriptionName']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['date']"
                                                    },
                                                    "sink": {
                                                        "name": "date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['product']"
                                                    },
                                                    "sink": {
                                                        "name": "product",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['partNumber']"
                                                    },
                                                    "sink": {
                                                        "name": "partNumber",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['meterId']"
                                                    },
                                                    "sink": {
                                                        "name": "meterId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['quantity']"
                                                    },
                                                    "sink": {
                                                        "name": "quantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['effectivePrice']"
                                                    },
                                                    "sink": {
                                                        "name": "effectivePrice",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['cost']"
                                                    },
                                                    "sink": {
                                                        "name": "cost",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['unitPrice']"
                                                    },
                                                    "sink": {
                                                        "name": "unitPrice",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingCurrency']"
                                                    },
                                                    "sink": {
                                                        "name": "billingCurrency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceLocation']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceLocation",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['consumedService']"
                                                    },
                                                    "sink": {
                                                        "name": "consumedService",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceId']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceName']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['serviceInfo2']"
                                                    },
                                                    "sink": {
                                                        "name": "serviceInfo2",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['invoiceSection']"
                                                    },
                                                    "sink": {
                                                        "name": "invoiceSection",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceGroup']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceGroup",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['offerId']"
                                                    },
                                                    "sink": {
                                                        "name": "offerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['isAzureCreditEligible']"
                                                    },
                                                    "sink": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['publisherType']"
                                                    },
                                                    "sink": {
                                                        "name": "publisherType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['chargeType']"
                                                    },
                                                    "sink": {
                                                        "name": "chargeType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['frequency']"
                                                    },
                                                    "sink": {
                                                        "name": "frequency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['meterDetails']"
                                                    },
                                                    "sink": {
                                                        "name": "meterDetails",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_RelativeURL": {
                                                    "value": "/providers/Microsoft.Billing/BillingAccounts/@{pipeline().parameters.p_billingId}/providers/Microsoft.Consumption/usageDetails?api-version=2019-10-01&$expand=meterDetails&$filter=properties/usageStart gt '@{item().ReportingDate}' and properties/usageEnd lt '@{item().ReportingDate}'",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "src_BillingDataTSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": {
                                                    "value": "billingdata",
                                                    "type": "Expression"
                                                },
                                                "DirectoryName": {
                                                    "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/UsageByBillingID",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@{pipeline().parameters.p_billingId}_usage.tsv",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "GetBearerToken",
                                    "description": "Use this Web activity to get bearer token",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/x-www-form-urlencoded"
                                        },
                                        "url": {
                                            "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{activity('GetSPNSecret').output.value}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Token",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "GetBearerToken",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Token",
                                        "value": {
                                            "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Update ADFErrorLog - others",
                                    "type": "AzureDataExplorerCommand",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "command": {
                                            "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Historic', ReportingDate='@{item().ReportingDate},@{item().ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Copy Rest Ouput', ErrorCode= '@{activity('Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Copy REST Output').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{pipeline().parameters.p_billingId}',  ErrorSubscription= '@{pipeline().parameters.p_billingId}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                            "type": "Expression"
                                        },
                                        "commandTimeout": "00:20:00"
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Update ADFErrorLog_SimpleError_Log",
                                    "type": "AzureDataExplorerCommand",
                                    "dependsOn": [
                                        {
                                            "activity": "Update ADFErrorLog - others",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "command": {
                                            "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Historic', ReportingDate='@{item().ReportingDate},@{item().ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{pipeline().parameters.p_billingId}',  ErrorSubscription= '@{pipeline().parameters.p_billingId}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                            "type": "Expression"
                                        },
                                        "commandTimeout": "00:20:00"
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "DataLake to ADX",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 300,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/UsageByBillingID",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureDataExplorerSink"
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "kind",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "kind",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "id",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "name",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "type",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "tags",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "tags",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingAccountId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingAccountName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingProfileId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingProfileName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "accountOwnerId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "accountOwnerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "accountName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "accountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "subscriptionId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "subscriptionName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "date",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "product",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "product",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "partNumber",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "partNumber",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "meterId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "meterId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "quantity",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "quantity",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "effectivePrice",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "effectivePrice",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "cost",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "cost",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "unitPrice",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "unitPrice",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingCurrency",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingCurrency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceLocation",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceLocation",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "consumedService",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "consumedService",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "serviceInfo2",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "serviceInfo2",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "invoiceSection",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "invoiceSection",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceGroup",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceGroup",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "offerId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "offerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "publisherType",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "publisherType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "chargeType",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "chargeType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "frequency",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "frequency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "meterDetails",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "meterDetails",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "src_BillingDataTSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "billingdata",
                                                "DirectoryName": {
                                                    "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/UsageByBillingID",
                                                    "type": "Expression"
                                                },
                                                "FileName": "*"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "adx_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "TableName": "BillingData_Tags"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "GetSPNSecret",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@concat(pipeline().parameters.p_SPNSecretURL,'?api-version=7.0')",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "ClientID": {
                        "type": "string",
                        "defaultValue": "aa5605bb-2877-483d-b005-e1439ee1f988"
                    },
                    "tenant_id": {
                        "type": "string",
                        "defaultValue": "8a807b9b-02da-47f3-a903-791a42a2285c"
                    },
                    "DaterangeKQL": {
                        "type": "string",
                        "defaultValue": "range ReportingDate from ago(5000d) to datetime(2021-07-01 00:00:00) step 1d | extend ReportingDate=todatetime(format_datetime(ReportingDate, 'yyyy-MM-dd')) | where tostring(ReportingDate) contains '2021'"
                    },
                    "p_SPNSecretURL": {
                        "type": "string",
                        "defaultValue": "https://kv-ccop-dv.vault.azure.net/secrets/CostMGMT-SPN-Secret/eafafff824ca4d8c8a8c604579b70ed1"
                    },
                    "p_billingId": {
                        "type": "string",
                        "defaultValue": "78931757"
                    }
                },
                "variables": {
                    "Token": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Billing/HistoricData"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:31Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 1 - API Call - Reservation Usage')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Loop Through Days",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Clear Folder Contents",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get Date and BillingID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Date and BillingID').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Copy REST Output",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:05:00",
                                            "requestInterval": "00.00:00:02.000",
                                            "requestMethod": "GET",
                                            "paginationRules": {
                                                "AbsoluteUrl": "$['nextLink']"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".csv"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['name']"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['type']"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['reservationOrderId']"
                                                    },
                                                    "sink": {
                                                        "name": "reservationOrderId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['reservationId']"
                                                    },
                                                    "sink": {
                                                        "name": "reservationId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['skuName']"
                                                    },
                                                    "sink": {
                                                        "name": "skuName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['kind']"
                                                    },
                                                    "sink": {
                                                        "name": "kind",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['reservedHours']"
                                                    },
                                                    "sink": {
                                                        "name": "reservedHours",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['usageDate']"
                                                    },
                                                    "sink": {
                                                        "name": "usageDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['usedHours']"
                                                    },
                                                    "sink": {
                                                        "name": "usedHours",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['minUtilizationPercentage']"
                                                    },
                                                    "sink": {
                                                        "name": "minUtilizationPercentage",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['avgUtilizationPercentage']"
                                                    },
                                                    "sink": {
                                                        "name": "avgUtilizationPercentage",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['maxUtilizationPercentage']"
                                                    },
                                                    "sink": {
                                                        "name": "maxUtilizationPercentage",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['purchasedQuantity']"
                                                    },
                                                    "sink": {
                                                        "name": "purchasedQuantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['remainingQuantity']"
                                                    },
                                                    "sink": {
                                                        "name": "remainingQuantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['totalReservedQuantity']"
                                                    },
                                                    "sink": {
                                                        "name": "totalReservedQuantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['usedQuantity']"
                                                    },
                                                    "sink": {
                                                        "name": "usedQuantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['utilizedPercentage']"
                                                    },
                                                    "sink": {
                                                        "name": "utilizedPercentage",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_RelativeURL": {
                                                    "value": "/providers/Microsoft.Billing/billingAccounts/@{item().BillingID}/providers/Microsoft.Consumption/reservationSummaries?grain=daily&$filter=properties/usageDate ge @{item().BeginDate} AND properties/usageDate le @{item().EndDate}&api-version=2019-10-01",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BillingDataCSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sink_filename": {
                                                    "value": "@{guid()}_@{item().BillingID}_@{item().BeginDate}_@{item().EndDate}.csv",
                                                    "type": "Expression"
                                                },
                                                "dir_name": {
                                                    "value": "@variables('v_ReservationTempFolderName')",
                                                    "type": "Expression"
                                                },
                                                "container_name": {
                                                    "value": "@pipeline().parameters.p_containername",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Wait for 7 seconds",
                                    "type": "Wait",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 7
                                    }
                                },
                                {
                                    "name": "If Gateway Error",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(greater(indexof(activity('Copy REST Output').output.errors[0]['Message'], 'GatewayTimeout' ) ,-1), \ngreater(indexof(activity('Copy REST Output').output.errors[0]['Message'], 'Too many requests' ) ,-1))\n",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Update ADFErrorLog - others",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Reservation', ReportingDate='@{item().BeginDate},@{item().EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Copy Rest Ouput', ErrorCode= '@{activity('Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Copy REST Output').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().BillingID}',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='@{pipeline().parameters.p_BatchType}'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError_Log",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog - others",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Reservation', ReportingDate='@{item().BeginDate},@{item().EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().BillingID}',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='@{pipeline().parameters.p_BatchType}'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Wait 7 minutes",
                                                "type": "Wait",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "waitTimeInSeconds": 420
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Retry Copy REST Output",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Reservation', ReportingDate='@{item().BeginDate},@{item().EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Retry Copy REST Output', ErrorCode= '@{activity('Retry Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Retry Copy REST Output').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().BillingID}',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='@{pipeline().parameters.p_BatchType}'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Reservation', ReportingDate='@{item().BeginDate},@{item().EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().BillingID}',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='@{pipeline().parameters.p_BatchType}'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Retry Copy REST Output",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Wait 7 minutes",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RestSource",
                                                        "httpRequestTimeout": "00:05:00",
                                                        "requestInterval": "00.00:00:02.000",
                                                        "requestMethod": "GET",
                                                        "paginationRules": {
                                                            "AbsoluteUrl": "$['nextLink']"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".csv"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "path": "[['id']"
                                                                },
                                                                "sink": {
                                                                    "name": "id",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['name']"
                                                                },
                                                                "sink": {
                                                                    "name": "name",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['type']"
                                                                },
                                                                "sink": {
                                                                    "name": "type",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['reservationOrderId']"
                                                                },
                                                                "sink": {
                                                                    "name": "reservationOrderId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['reservationId']"
                                                                },
                                                                "sink": {
                                                                    "name": "reservationId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['skuName']"
                                                                },
                                                                "sink": {
                                                                    "name": "skuName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['kind']"
                                                                },
                                                                "sink": {
                                                                    "name": "kind",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['reservedHours']"
                                                                },
                                                                "sink": {
                                                                    "name": "reservedHours",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['usageDate']"
                                                                },
                                                                "sink": {
                                                                    "name": "usageDate",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['usedHours']"
                                                                },
                                                                "sink": {
                                                                    "name": "usedHours",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['minUtilizationPercentage']"
                                                                },
                                                                "sink": {
                                                                    "name": "minUtilizationPercentage",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['avgUtilizationPercentage']"
                                                                },
                                                                "sink": {
                                                                    "name": "avgUtilizationPercentage",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['maxUtilizationPercentage']"
                                                                },
                                                                "sink": {
                                                                    "name": "maxUtilizationPercentage",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['purchasedQuantity']"
                                                                },
                                                                "sink": {
                                                                    "name": "purchasedQuantity",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['remainingQuantity']"
                                                                },
                                                                "sink": {
                                                                    "name": "remainingQuantity",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['totalReservedQuantity']"
                                                                },
                                                                "sink": {
                                                                    "name": "totalReservedQuantity",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['usedQuantity']"
                                                                },
                                                                "sink": {
                                                                    "name": "usedQuantity",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['utilizedPercentage']"
                                                                },
                                                                "sink": {
                                                                    "name": "utilizedPercentage",
                                                                    "type": "String"
                                                                }
                                                            }
                                                        ],
                                                        "collectionReference": "$['value']"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "RestResource_BillingData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "p_RelativeURL": {
                                                                "value": "/providers/Microsoft.Billing/billingAccounts/@{item().BillingID}/providers/Microsoft.Consumption/reservationSummaries?grain=daily&$filter=properties/usageDate ge @{item().BeginDate} AND properties/usageDate le @{item().EndDate}&api-version=2019-10-01",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BillingDataCSV",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "sink_filename": {
                                                                "value": "@{guid()}_@{item().BillingID}_@{item().BeginDate}_@{item().EndDate}.csv",
                                                                "type": "Expression"
                                                            },
                                                            "dir_name": {
                                                                "value": "@variables('v_ReservationTempFolderName')",
                                                                "type": "Expression"
                                                            },
                                                            "container_name": {
                                                                "value": "@pipeline().parameters.p_containername",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "ReportingDates_Update2",
                                                "type": "AppendVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Retry Copy REST Output",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "v_ReportingDates",
                                                    "value": {
                                                        "value": "@{item().BeginDate},@{item().EndDate}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ReportingDates_Update1",
                                    "type": "AppendVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Wait for 7 seconds",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_ReportingDates",
                                        "value": {
                                            "value": "@{item().BeginDate},@{item().EndDate}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Update ADX Table",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Split Downloaded Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 2 - ADX Stage to Prod - Reservation Usage",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_BillingDate": {
                                    "value": "@activity('File Dates').output.value",
                                    "type": "Expression"
                                },
                                "p_SubDirectory": {
                                    "value": "@variables('v_ReservationFolderName')",
                                    "type": "Expression"
                                },
                                "p_containername": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "p_BatchType": {
                                    "value": "@pipeline().parameters.p_BatchType",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Lookup Max Error TimeStamp",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "let _lastretry = toscalar(WaterMark | distinct Reservation_LastRetry);\nADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - Reservation'\n| summarize MaxErrorTimeStamp = max(ErrorTimestamp)\n| project MaxErrorTimeStamp=iif(isnull(MaxErrorTimeStamp),_lastretry,MaxErrorTimeStamp)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            }
                        }
                    },
                    {
                        "name": "Update WaterMark",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Update ADX Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace WaterMark <|\nWaterMark\n| project BillingData_LastRetry,Reservation_LastRetry = todatetime('@{activity('Lookup Max Error TimeStamp').output.firstRow.MaxErrorTimeStamp}'), Credit_LastRetry, ReservationDesc_LastRetry,MarketPlace_LastRetry,ForeCast_LastRetry",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Is Process Date Passed",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Lookup Max Error TimeStamp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(and(equals(pipeline().parameters.p_BeginDate,'NA'),equals(pipeline().parameters.p_EndDate,'NA')),equals(pipeline().parameters.p_BatchType,'Daily'))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Set KQL ProcessDate not equals NA",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_KQL",
                                        "value": {
                                            "value": "let _batchmode = '@{pipeline().parameters.p_BatchType}';\nlet _startdate = iif('@{pipeline().parameters.p_BeginDate}'=~'NA', startofmonth(now(),-1), todatetime('@{pipeline().parameters.p_BeginDate}'));\nlet _enddate = iif('@{pipeline().parameters.p_EndDate}'=~'NA', endofmonth(now(),-1), todatetime('@{pipeline().parameters.p_EndDate}'));\nlet _lastretry = toscalar(WaterMark | distinct Reservation_LastRetry);\nlet BillingIds = materialize(datatable (CommonJoin:int, BillingID:dynamic) [1, dynamic(@{pipeline().parameters.p_BillingIds})] | mv-expand BillingID | extend BillingID=tostring(BillingID));\nlet NewBatch = materialize(\nBillingIds | extend BillingID=tostring(BillingID), BeginDate = todatetime(_startdate), EndDate = todatetime(_enddate), ReportingDate=range(_startdate, _enddate, 1d)\n| mv-expand ReportingDate\n| extend ReportingDate = todatetime(ReportingDate)\n| project-away CommonJoin\n);\nlet FailedBatch = materialize( ADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - Reservation'\n| extend BeginDate=todatetime(split(ReportingDate, ',')[0]), EndDate=todatetime(split(ReportingDate, ',')[1])\n| extend ReportingDate=range(BeginDate, EndDate, 1d)\n| mv-expand ReportingDate\n| project BillingID=ErrorResourceID,BeginDate, EndDate, ReportingDate=todatetime(ReportingDate)\n);\nNewBatch\n| union FailedBatch\n| extend Month=format_datetime(ReportingDate, 'yyyy-MM')\n| summarize BeginDate=min(ReportingDate), EndDate=max(ReportingDate) by BillingID, Month\n| project BillingID, BeginDate=format_datetime(BeginDate, 'yyyy-MM-dd'), EndDate=format_datetime(EndDate, 'yyyy-MM-dd')\n| distinct BillingID, BeginDate, EndDate",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Set KQL ProcessDate equals NA",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_KQL",
                                        "value": {
                                            "value": "let _batchmode = '@{pipeline().parameters.p_BatchType}';\nlet _lookbackdayparameter = now(-@{pipeline().parameters.p_LookBackInDay}d);\nlet _lastretry = toscalar(WaterMark | distinct Reservation_LastRetry);\nlet BillingIds = materialize(datatable (CommonJoin:int, BillingID:dynamic) [1, dynamic(@{pipeline().parameters.p_BillingIds})] | mv-expand BillingID | extend BillingID = tostring(BillingID));\nlet NewBatch = materialize(\nBillingIds | extend BillingID=tostring(BillingID), BeginDate = todatetime(_lookbackdayparameter), EndDate = todatetime(now(-1d)), ReportingDate=range(_lookbackdayparameter, now(-1d), 1d)\n| mv-expand ReportingDate\n| extend ReportingDate = todatetime(ReportingDate)\n| project-away CommonJoin\n);\nlet FailedBatch = materialize( ADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - Reservation'\n| extend BeginDate=todatetime(split(ReportingDate, ',')[0]), EndDate=todatetime(split(ReportingDate, ',')[1])\n| extend ReportingDate=range(BeginDate, EndDate, 1d)\n| mv-expand ReportingDate\n| project BillingID=ErrorResourceID,BeginDate, EndDate, ReportingDate=todatetime(ReportingDate)\n);\nNewBatch\n| union FailedBatch\n| extend Month=format_datetime(ReportingDate, 'yyyy-MM')\n| summarize BeginDate=min(ReportingDate), EndDate=max(ReportingDate) by BillingID, Month\n| project BillingID, BeginDate=format_datetime(BeginDate, 'yyyy-MM-dd'), EndDate=format_datetime(EndDate, 'yyyy-MM-dd')\n| distinct BillingID, BeginDate, EndDate",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Temp Folder Stats",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "FolderValidation",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FilePath": {
                                        "value": "@{pipeline().parameters.p_containername}/@{variables('v_ReservationTempFolderName')}",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists",
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "Clear Folder Contents",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get Temp Folder Stats",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@activity('Get Temp Folder Stats').output.exists",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Delete Folder",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "FolderValidation",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FilePath": {
                                                    "value": "@{pipeline().parameters.p_containername}/@{variables('v_ReservationTempFolderName')}",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Date and BillingID",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Is Process Date Passed",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@variables('v_KQL')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": {
                                        "value": "ADFErrorLog",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Split Downloaded Files",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Clean Up Reservation Data Folders",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API - SplitFiles - Reservation",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "container": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "sourcefilename": {
                                    "value": "@{variables('v_ReservationTempFolderName')}/*",
                                    "type": "Expression"
                                },
                                "subfolder": {
                                    "value": "@variables('v_ReservationFolderName')",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "File Dates",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Loop Through Days",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "let ReportingDates = materialize(datatable (ReportingDates:dynamic) [dynamic(@{variables('v_ReportingDates')})] | mv-expand ReportingDates | extend ReportingDates=tostring(ReportingDates));\nReportingDates\n| extend ReportingDate=range(todatetime(split(ReportingDates, ',')[0]), todatetime(split(ReportingDates, ',')[1]), 1d)\n| mv-expand ReportingDate\n| project ReportingDate = format_datetime(todatetime(ReportingDate), 'yyyy-MM-dd')\n| distinct ReportingDate",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Clean Up Reservation Data Folders",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "File Dates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('File Dates').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Delete Folder Contents",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "FolderValidation",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FilePath": {
                                                    "value": "@{pipeline().parameters.p_containername}/@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{variables('v_ReservationFolderName')}",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_LookBackInDay": {
                        "type": "string",
                        "defaultValue": "3"
                    },
                    "p_BillingIds": {
                        "type": "array",
                        "defaultValue": [
                            "46132814"
                        ]
                    },
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BeginDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_EndDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_BatchType": {
                        "type": "string",
                        "defaultValue": "Daily"
                    }
                },
                "variables": {
                    "v_KQL": {
                        "type": "String"
                    },
                    "v_ReportingDates": {
                        "type": "Array"
                    },
                    "v_ReservationTempFolderName": {
                        "type": "String",
                        "defaultValue": "ReservationUtilizationTemp"
                    },
                    "v_ReservationFolderName": {
                        "type": "String",
                        "defaultValue": "Reservation"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-02-19T09:48:44Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API - Usage Monthly Load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "For Each BillingID and Month",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Date and BillingID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Date and BillingID').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Copy REST Output",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 10,
                                        "retryIntervalInSeconds": 60,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:10:00",
                                            "requestInterval": "00.00:00:02.000",
                                            "requestMethod": "GET",
                                            "paginationRules": {
                                                "AbsoluteUrl": "$['nextLink']"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".csv"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['kind']"
                                                    },
                                                    "sink": {
                                                        "name": "kind",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['name']"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['type']"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['tags']"
                                                    },
                                                    "sink": {
                                                        "name": "tags",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingAccountId']"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingAccountName']"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingPeriodStartDate']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingPeriodEndDate']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingProfileId']"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingProfileName']"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountOwnerId']"
                                                    },
                                                    "sink": {
                                                        "name": "accountOwnerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountName']"
                                                    },
                                                    "sink": {
                                                        "name": "accountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['subscriptionId']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['subscriptionName']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['date']"
                                                    },
                                                    "sink": {
                                                        "name": "date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['product']"
                                                    },
                                                    "sink": {
                                                        "name": "product",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['partNumber']"
                                                    },
                                                    "sink": {
                                                        "name": "partNumber",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['meterId']"
                                                    },
                                                    "sink": {
                                                        "name": "meterId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['quantity']"
                                                    },
                                                    "sink": {
                                                        "name": "quantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['effectivePrice']"
                                                    },
                                                    "sink": {
                                                        "name": "effectivePrice",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['cost']"
                                                    },
                                                    "sink": {
                                                        "name": "cost",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['unitPrice']"
                                                    },
                                                    "sink": {
                                                        "name": "unitPrice",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingCurrency']"
                                                    },
                                                    "sink": {
                                                        "name": "billingCurrency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceLocation']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceLocation",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['consumedService']"
                                                    },
                                                    "sink": {
                                                        "name": "consumedService",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceId']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceName']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['serviceInfo2']"
                                                    },
                                                    "sink": {
                                                        "name": "serviceInfo2",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['invoiceSection']"
                                                    },
                                                    "sink": {
                                                        "name": "invoiceSection",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceGroup']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceGroup",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['offerId']"
                                                    },
                                                    "sink": {
                                                        "name": "offerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['isAzureCreditEligible']"
                                                    },
                                                    "sink": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['publisherType']"
                                                    },
                                                    "sink": {
                                                        "name": "publisherType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['chargeType']"
                                                    },
                                                    "sink": {
                                                        "name": "chargeType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['frequency']"
                                                    },
                                                    "sink": {
                                                        "name": "frequency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['meterDetails']"
                                                    },
                                                    "sink": {
                                                        "name": "meterDetails",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_RelativeURL": {
                                                    "value": "/providers/Microsoft.Billing/BillingAccounts/@{Item().BillingId}/providers/Microsoft.Consumption/usageDetails?api-version=2019-10-01&$expand=meterDetails&$filter=properties/usageStart gt '@{item().BeginDate}' and properties/usageEnd lt '@{item().EndDate}'",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "src_BillingDataTSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": {
                                                    "value": "billingdata",
                                                    "type": "Expression"
                                                },
                                                "DirectoryName": {
                                                    "value": "@{formatDateTime(item().EndDate, 'yyyy')}/@{formatDateTime(item().EndDate, 'MM')}/@{formatDateTime(item().EndDate, 'dd')}/UsageByBillingID_Monthly",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@{item().BillingId}_usage.tsv",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "UpdateDate",
                                    "type": "AppendVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_LastDayOfMonth",
                                        "value": {
                                            "value": "@item().EndDate",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Date and BillingID",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "let _startdate = iif('@{pipeline().parameters.p_BeginDate}'=~'NA', startofmonth(now(),-1), todatetime('@{pipeline().parameters.p_BeginDate}'));\nlet _enddate = iif('@{pipeline().parameters.p_BeginDate}'=~'NA', endofmonth(now(),-1), todatetime('@{pipeline().parameters.p_EndDate}'));\nlet BillingIds = materialize(datatable (CommonJoin:int, BillingID:dynamic) [1, dynamic(@{pipeline().parameters.BillingIds})]\n| mv-expand BillingID);\nrange ReportingDate from _startdate to _enddate step 1d\n| extend CommonJoin=toint(1),BeginDate=format_datetime(startofmonth(ReportingDate), 'yyyy-MM-dd'), EndDate=format_datetime(endofmonth(ReportingDate), 'yyyy-MM-dd')\n| distinct BeginDate, EndDate, CommonJoin\n| join kind=inner BillingIds on CommonJoin\n| project BeginDate, EndDate, BillingID",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": {
                                        "value": "ADFErrorLog",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "From Staging Table to Production",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Update UsageDataLog",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace BillingData <|\nBillingData\n| where billingMonth !in (\n    (Staging_BillingData | project billingMonth = format_datetime(todatetime(['date']), 'yyyy-MM') | distinct billingMonth)\n)\n| union \n(\nStaging_BillingData \n| project\n['kind'] = tolower(['kind']),\n['id']=tolower(['id']),\nname=tolower(name),\n['type']=tolower(['type']),\ntags=tolower(tags),\nbillingAccountId=tolower(billingAccountId),\nbillingAccountName=tolower(billingAccountName),\nbillingPeriodStartDate,\nbillingPeriodEndDate,\nbillingProfileId=tolower(billingProfileId),\nbillingProfileName=tolower(billingProfileName),\naccountOwnerId=tolower(accountOwnerId),\naccountName=tolower(accountName),\nsubscriptionId=tolower(subscriptionId),\nsubscriptionName=tolower(subscriptionName),\n['date']=['date'],\nproduct=tolower(product),\npartNumber=tolower(partNumber),\nmeterId=tolower(meterId),\nquantity,\neffectivePrice,\ncost,\nunitPrice,\nbillingCurrency=tolower(billingCurrency),\nresourceLocation=tolower(resourceLocation),\nconsumedService=tolower(consumedService),\nresourceId=tolower(resourceId),\nresourceName=tolower(resourceName),\nserviceInfo2=tolower(serviceInfo2),\ninvoiceSection=tolower(invoiceSection),\nresourceGroup=tolower(resourceGroup),\nofferId=tolower(offerId),\nisAzureCreditEligible=tolower(isAzureCreditEligible),\npublisherType=tolower(publisherType),\nchargeType=tolower(chargeType),\nfrequency=tolower(frequency),\nmeterDetails=tolower(meterDetails),\nRGFQN = strcat('/subscriptions/', tolower(subscriptionId), '/resourceGroups/', tolower(resourceGroup )),\nbillingDate = todatetime(format_datetime(todatetime(['date']), 'yyyy-MM-dd')),\nbillingMonth = format_datetime(todatetime(['date']), 'yyyy-MM')\n)",
                                "type": "Expression"
                            },
                            "commandTimeout": "01:00:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset Staging Table",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "For Each BillingID and Month",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace  Staging_BillingData <|\nStaging_BillingData\n| take 0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Loop Through Days",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Reset Staging Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('v_LastDayOfMonth')",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "DataLake to ADX",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 300,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{formatDateTime(item(), 'yyyy')}/@{formatDateTime(item(), 'MM')}/@{formatDateTime(item(), 'dd')}/UsageByBillingID_Monthly",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureDataExplorerSink"
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "kind",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "kind",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "id",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "name",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "type",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "tags",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "tags",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingAccountId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingAccountName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingProfileId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingProfileName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "accountOwnerId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "accountOwnerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "accountName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "accountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "subscriptionId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "subscriptionName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "date",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "product",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "product",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "partNumber",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "partNumber",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "meterId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "meterId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "quantity",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "quantity",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "effectivePrice",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "effectivePrice",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "cost",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "cost",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "unitPrice",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "unitPrice",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingCurrency",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingCurrency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceLocation",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceLocation",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "consumedService",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "consumedService",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "serviceInfo2",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "serviceInfo2",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "invoiceSection",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "invoiceSection",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceGroup",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceGroup",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "offerId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "offerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "publisherType",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "publisherType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "chargeType",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "chargeType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "frequency",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "frequency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "meterDetails",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "meterDetails",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "src_BillingDataTSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": "billingdata",
                                                "DirectoryName": {
                                                    "value": "@{formatDateTime(item(), 'yyyy')}/@{formatDateTime(item(), 'MM')}/@{formatDateTime(item(), 'dd')}/UsageByBillingID_Monthly",
                                                    "type": "Expression"
                                                },
                                                "FileName": "*"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "adx_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "TableName": "Staging_BillingData"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "Update UsageDataLog",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Loop Through Days",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-append usageDataLog <| \nStaging_BillingData\n| summarize usageCost=sum(cost) by billingAccountId, subscriptionId, subscriptionName,billingDate = format_datetime(todatetime(['date']), 'yyyy-MM-dd'), frequency = 'Monthly', logdate=now()",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "RefreshPBI",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "From Staging Table to Production",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "RefershPBITable",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_BeginDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_EndDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "BillingIds": {
                        "type": "array",
                        "defaultValue": [
                            "88673741"
                        ]
                    }
                },
                "variables": {
                    "v_LastDayOfMonth": {
                        "type": "Array"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:32Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 1 - API Call - MarketPlace')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LoopThroughDays",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetProcessDates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetProcessDates').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Get BillingSummary",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "GetAPIKey",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Set Folder Path",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@concat('bearer ',activity('GetAPIKey').output.value)",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "$['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['subscriptionGuid']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionGuid",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['subscriptionName']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['meterId']"
                                                    },
                                                    "sink": {
                                                        "name": "meterId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['usageStartDate']"
                                                    },
                                                    "sink": {
                                                        "name": "usageStartDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['usageEndDate']"
                                                    },
                                                    "sink": {
                                                        "name": "usageEndDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['offerName']"
                                                    },
                                                    "sink": {
                                                        "name": "offerName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['resourceGroup']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceGroup",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['instanceId']"
                                                    },
                                                    "sink": {
                                                        "name": "instanceId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['additionalInfo']"
                                                    },
                                                    "sink": {
                                                        "name": "additionalInfo",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['tags']"
                                                    },
                                                    "sink": {
                                                        "name": "tags",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['orderNumber']"
                                                    },
                                                    "sink": {
                                                        "name": "orderNumber",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['unitOfMeasure']"
                                                    },
                                                    "sink": {
                                                        "name": "unitOfMeasure",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['costCenter']"
                                                    },
                                                    "sink": {
                                                        "name": "costCenter",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['accountId']"
                                                    },
                                                    "sink": {
                                                        "name": "accountId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['accountName']"
                                                    },
                                                    "sink": {
                                                        "name": "accountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['accountOwnerId']"
                                                    },
                                                    "sink": {
                                                        "name": "accountOwnerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['departmentId']"
                                                    },
                                                    "sink": {
                                                        "name": "departmentId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['departmentName']"
                                                    },
                                                    "sink": {
                                                        "name": "departmentName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['publisherName']"
                                                    },
                                                    "sink": {
                                                        "name": "publisherName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['planName']"
                                                    },
                                                    "sink": {
                                                        "name": "planName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['consumedQuantity']"
                                                    },
                                                    "sink": {
                                                        "name": "consumedQuantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['resourceRate']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceRate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['extendedCost']"
                                                    },
                                                    "sink": {
                                                        "name": "extendedCost",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['isRecurringCharge']"
                                                    },
                                                    "sink": {
                                                        "name": "isRecurringCharge",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingSummary",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "relativeurl": {
                                                    "value": "v3/enrollments/@{item().BillingID}/billingPeriods/@{variables('v_ReportingMonth')}/marketplacecharges",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "src_BillingDataTSV_Marketplace",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": {
                                                    "value": "@pipeline().parameters.p_containername",
                                                    "type": "Expression"
                                                },
                                                "DirectoryName": {
                                                    "value": "@{variables('v_SubDirectory')}/MarketPlace",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@{item().BillingID}.tsv",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "GetAPIKey",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {},
                                        "url": {
                                            "value": "@concat(trim(item().KeyVaultURLForAPIKey),'?api-version=7.0')",
                                            "type": "Expression"
                                        },
                                        "authentication": {
                                            "type": "MSI",
                                            "resource": "https://vault.azure.net"
                                        }
                                    }
                                },
                                {
                                    "name": "SetBillingMonth",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SetProcessingDays",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_ReportingMonth",
                                        "value": {
                                            "value": "@{formatDateTime(item().EndDate, 'yyyy')}@{formatDateTime(item().EndDate, 'MM')}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Folder Path",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SetBillingMonth",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_SubDirectory",
                                        "value": {
                                            "value": "@{formatDateTime(item().EndDate, 'yyyy')}/@{formatDateTime(item().EndDate, 'MM')}/@{formatDateTime(item().EndDate, 'dd')}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "If Gateway Error",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get BillingSummary",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(greater(indexof(activity('Get BillingSummary').output.errors[0]['Message'], 'GatewayTimeout' ) ,-1), \ngreater(indexof(activity('Get BillingSummary').output.errors[0]['Message'], 'Too many requests' ) ,-1))\n",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Update ADFErrorLog - others",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - MarketPlace', ReportingDate='@{item().BeginDate},@{item().EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Retry Copy Rest Ouput', ErrorCode= '@{activity('Get BillingSummary').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Get BillingSummary').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= 'item().BillingID',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='@{pipeline().parameters.p_BatchType}'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError_Log",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog - others",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - MarketPlace', ReportingDate='@{item().BeginDate},@{item().EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= 'item().BillingID',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='@{pipeline().parameters.p_BatchType}'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Wait 7 minutes",
                                                "type": "Wait",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "waitTimeInSeconds": 420
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get BillingSummary_Retry",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - MarketPlace', ReportingDate='@{item().BeginDate},@{item().EndDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Retry Copy Rest Ouput', ErrorCode= '@{activity('Get BillingSummary_Retry').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Get BillingSummary_Retry').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= 'item().BillingID',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}'), BatchMode='@{pipeline().parameters.p_BatchType}'",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - MarketPlace', ReportingDate='@{item().ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '',  ErrorSubscription= '', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Get BillingSummary_Retry",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Wait 7 minutes",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RestSource",
                                                        "httpRequestTimeout": "00:01:40",
                                                        "requestInterval": "00.00:00:00.010",
                                                        "requestMethod": "GET",
                                                        "additionalHeaders": {
                                                            "Authorization": {
                                                                "value": "@concat('bearer ',activity('GetAPIKey').output.value)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "path": "$['id']"
                                                                },
                                                                "sink": {
                                                                    "name": "id",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['subscriptionGuid']"
                                                                },
                                                                "sink": {
                                                                    "name": "subscriptionGuid",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['subscriptionName']"
                                                                },
                                                                "sink": {
                                                                    "name": "subscriptionName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['meterId']"
                                                                },
                                                                "sink": {
                                                                    "name": "meterId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['usageStartDate']"
                                                                },
                                                                "sink": {
                                                                    "name": "usageStartDate",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['usageEndDate']"
                                                                },
                                                                "sink": {
                                                                    "name": "usageEndDate",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['offerName']"
                                                                },
                                                                "sink": {
                                                                    "name": "offerName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['resourceGroup']"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceGroup",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['instanceId']"
                                                                },
                                                                "sink": {
                                                                    "name": "instanceId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['additionalInfo']"
                                                                },
                                                                "sink": {
                                                                    "name": "additionalInfo",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['tags']"
                                                                },
                                                                "sink": {
                                                                    "name": "tags",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['orderNumber']"
                                                                },
                                                                "sink": {
                                                                    "name": "orderNumber",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['unitOfMeasure']"
                                                                },
                                                                "sink": {
                                                                    "name": "unitOfMeasure",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['costCenter']"
                                                                },
                                                                "sink": {
                                                                    "name": "costCenter",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['accountId']"
                                                                },
                                                                "sink": {
                                                                    "name": "accountId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['accountName']"
                                                                },
                                                                "sink": {
                                                                    "name": "accountName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['accountOwnerId']"
                                                                },
                                                                "sink": {
                                                                    "name": "accountOwnerId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['departmentId']"
                                                                },
                                                                "sink": {
                                                                    "name": "departmentId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['departmentName']"
                                                                },
                                                                "sink": {
                                                                    "name": "departmentName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['publisherName']"
                                                                },
                                                                "sink": {
                                                                    "name": "publisherName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['planName']"
                                                                },
                                                                "sink": {
                                                                    "name": "planName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['consumedQuantity']"
                                                                },
                                                                "sink": {
                                                                    "name": "consumedQuantity",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['resourceRate']"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceRate",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['extendedCost']"
                                                                },
                                                                "sink": {
                                                                    "name": "extendedCost",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "$['isRecurringCharge']"
                                                                },
                                                                "sink": {
                                                                    "name": "isRecurringCharge",
                                                                    "type": "String"
                                                                }
                                                            }
                                                        ],
                                                        "mapComplexValuesToString": true
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "RestResource_BillingSummary",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "relativeurl": {
                                                                "value": "v3/enrollments/@{item().BillingID}/billingPeriods/@{variables('v_ReportingMonth')}/marketplacecharges",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "src_BillingDataTSV_Marketplace",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ContainerName": {
                                                                "value": "@pipeline().parameters.p_containername",
                                                                "type": "Expression"
                                                            },
                                                            "DirectoryName": {
                                                                "value": "@{variables('v_SubDirectory')}/MarketPlace",
                                                                "type": "Expression"
                                                            },
                                                            "FileName": {
                                                                "value": "@{item().BillingID}.tsv",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "SetProcessingDays",
                                    "type": "AppendVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_ReportingDates",
                                        "value": {
                                            "value": "@item().EndDate",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Lookup Max Error TimeStamp",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "let _lastretry = toscalar(WaterMark | distinct MarketPlace_LastRetry);\nADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - MarketPlace'\n| where ErrorMessage !contains 'NotFound'\n| summarize MaxErrorTimeStamp = max(ErrorTimestamp)\n| project MaxErrorTimeStamp=iif(isnull(MaxErrorTimeStamp),_lastretry,MaxErrorTimeStamp)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            }
                        }
                    },
                    {
                        "name": "GetProcessDates",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Is Process Date Passed",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@variables('v_KQL')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Is Process Date Passed",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Lookup Max Error TimeStamp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(and(equals(pipeline().parameters.p_BeginDate,'NA'),equals(pipeline().parameters.p_EndDate,'NA')),equals(pipeline().parameters.p_BatchType,'Daily'))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Set KQL ProcessDate not equals NA",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_KQL",
                                        "value": {
                                            "value": "let _batchmode = '@{pipeline().parameters.p_BatchType}';\nlet _startdate = iif('@{pipeline().parameters.p_BeginDate}'=~'NA', startofmonth(now(),-1), todatetime('@{pipeline().parameters.p_BeginDate}'));\nlet _enddate = iif('@{pipeline().parameters.p_EndDate}'=~'NA', endofmonth(now(),-1), todatetime('@{pipeline().parameters.p_EndDate}'));\nlet _lastretry = toscalar(WaterMark | distinct MarketPlace_LastRetry);\nlet BillingIds = materialize(datatable (CommonJoin:int, BillingID:dynamic) [1, dynamic(@{pipeline().parameters.p_BillingIds})] | mv-expand BillingID \n| extend x=parse_json(BillingID) | project CommonJoin, BillingID = tostring(x.BillingID), KeyVaultURLForAPIKey=tostring(x.KeyVaultURLForAPIKey));\nlet NewBatch = materialize(\nBillingIds | extend BillingID=tostring(BillingID), BeginDate = todatetime(_startdate), EndDate = todatetime(_enddate), ReportingDate=range(_startdate, _enddate, 1d)\n| mv-expand ReportingDate\n| extend ReportingDate = todatetime(ReportingDate)\n);\nlet FailedBatch = materialize( ADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - MarketPlace'\n| extend BeginDate=todatetime(split(ReportingDate, ',')[0]), EndDate=todatetime(split(ReportingDate, ',')[1])\n| extend ReportingDate=range(BeginDate, EndDate, 1d)\n| mv-expand ReportingDate\n| project BillingID=ErrorResourceID,BeginDate, EndDate, ReportingDate=todatetime(ReportingDate)\n);\nNewBatch\n| union FailedBatch\n| extend Month=format_datetime(ReportingDate, 'yyyy-MM')\n| summarize BeginDate=min(ReportingDate), EndDate=max(ReportingDate) by BillingID, Month\n| extend BeginDate=startofmonth(BeginDate), EndDate=endofmonth(EndDate)\n| project BillingID, BeginDate=format_datetime(BeginDate, 'yyyy-MM-dd'), EndDate=format_datetime(EndDate, 'yyyy-MM-dd')\n| distinct BillingID, BeginDate, EndDate\n| join kind=inner BillingIds on BillingID\n| project-away BillingID1",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Set KQL ProcessDate equals NA",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_KQL",
                                        "value": {
                                            "value": "let _batchmode = '@{pipeline().parameters.p_BatchType}';\nlet _lookbackdayparameter = now(-@{pipeline().parameters.p_LookBackInDay}d);\nlet _lastretry = toscalar(WaterMark | distinct Credit_LastRetry);\nlet BillingIds = materialize(datatable (CommonJoin:int, BillingID:dynamic) [1, dynamic(@{pipeline().parameters.p_BillingIds})] | mv-expand BillingID \n| extend x=parse_json(BillingID) | project BillingID = tostring(x.BillingID), KeyVaultURLForAPIKey=tostring(x.KeyVaultURLForAPIKey));\nlet NewBatch = materialize(\nBillingIds | extend BillingID=tostring(BillingID), BeginDate = todatetime(_lookbackdayparameter), EndDate = todatetime(now(-1d)), ReportingDate=range(_lookbackdayparameter, now(-1d), 1d)\n| mv-expand ReportingDate\n| extend ReportingDate = todatetime(ReportingDate)\n);\nlet FailedBatch = materialize( ADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - MarketPlace'\n| extend BeginDate=todatetime(split(ReportingDate, ',')[0]), EndDate=todatetime(split(ReportingDate, ',')[1])\n| extend ReportingDate=range(BeginDate, EndDate, 1d)\n| mv-expand ReportingDate\n| project BillingID=ErrorResourceID,BeginDate, EndDate, ReportingDate=todatetime(ReportingDate)\n);\nNewBatch\n| union FailedBatch\n| extend Month=format_datetime(ReportingDate, 'yyyy-MM')\n| summarize BeginDate=min(ReportingDate), EndDate=max(ReportingDate) by BillingID, Month\n| extend BeginDate=startofmonth(BeginDate), EndDate=endofmonth(EndDate)\n| project BillingID, BeginDate=format_datetime(BeginDate, 'yyyy-MM-dd'), EndDate=format_datetime(EndDate, 'yyyy-MM-dd')\n| distinct BillingID, BeginDate, EndDate\n| join kind=inner BillingIds on BillingID\n| project-away BillingID1",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Update ADX Table",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "LoopThroughDays",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 2 - ADX Stage to Prod - MarketPlace",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_StorageAccountContainer": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "p_BillingDate": {
                                    "value": "@variables('v_ReportingDates')",
                                    "type": "Expression"
                                },
                                "p_SubDirectory": "MarketPlace"
                            }
                        }
                    },
                    {
                        "name": "Update WaterMark",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Update ADX Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace WaterMark <|\nWaterMark\n| project BillingData_LastRetry,Reservation_LastRetry, Credit_LastRetry,ReservationDesc_LastRetry,MarketPlace_LastRetry = todatetime('@{activity('Lookup Max Error TimeStamp').output.firstRow.MaxErrorTimeStamp}'),ForeCast_LastRetry",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_LookBackInDay": {
                        "type": "string",
                        "defaultValue": "3"
                    },
                    "p_BillingIds": {
                        "type": "array",
                        "defaultValue": [
                            {
                                "BillingID": "46132814",
                                "KeyVaultURLForAPIKey": "https://kv-acrp-dev.vault.azure.net/secrets/APIKey-46132814/997864aa1b904061bd8a229e52b56ea4"
                            }
                        ]
                    },
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BeginDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_EndDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_BatchType": {
                        "type": "string",
                        "defaultValue": "Daily"
                    }
                },
                "variables": {
                    "v_KQL": {
                        "type": "String"
                    },
                    "v_ReportingDates": {
                        "type": "Array"
                    },
                    "v_SubDirectory": {
                        "type": "String"
                    },
                    "v_ReportingMonth": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-02-19T09:48:44Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API - Usage - LoadMonthlyData_SplitDaily')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetDateRange",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set Parent Directory",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@pipeline().parameters.DaterangeKQL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": {
                                        "value": "ADFErrorLog",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Set ReportingDate",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "GetDateRange",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "v_DateRange",
                            "value": {
                                "value": "@activity('GetDateRange').output.value",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEach Subscription",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Set ReportingDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('v_DateRange')",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "Copy REST Output",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Token",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:05:00",
                                            "requestInterval": "00.00:00:02.000",
                                            "requestMethod": "GET",
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@variables('Token')",
                                                    "type": "Expression"
                                                }
                                            },
                                            "paginationRules": {
                                                "AbsoluteUrl": "$['nextLink']"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".csv"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['kind']"
                                                    },
                                                    "sink": {
                                                        "name": "kind",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['name']"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['type']"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingAccountId']"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingAccountName']"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingPeriodStartDate']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingPeriodEndDate']"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingProfileId']"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingProfileName']"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountOwnerId']"
                                                    },
                                                    "sink": {
                                                        "name": "accountOwnerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['accountName']"
                                                    },
                                                    "sink": {
                                                        "name": "accountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['subscriptionId']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['subscriptionName']"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['date']"
                                                    },
                                                    "sink": {
                                                        "name": "date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['product']"
                                                    },
                                                    "sink": {
                                                        "name": "product",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['partNumber']"
                                                    },
                                                    "sink": {
                                                        "name": "partNumber",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['meterId']"
                                                    },
                                                    "sink": {
                                                        "name": "meterId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['quantity']"
                                                    },
                                                    "sink": {
                                                        "name": "quantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['effectivePrice']"
                                                    },
                                                    "sink": {
                                                        "name": "effectivePrice",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['cost']"
                                                    },
                                                    "sink": {
                                                        "name": "cost",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['unitPrice']"
                                                    },
                                                    "sink": {
                                                        "name": "unitPrice",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['billingCurrency']"
                                                    },
                                                    "sink": {
                                                        "name": "billingCurrency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceLocation']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceLocation",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['consumedService']"
                                                    },
                                                    "sink": {
                                                        "name": "consumedService",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceId']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceName']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['invoiceSection']"
                                                    },
                                                    "sink": {
                                                        "name": "invoiceSection",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['resourceGroup']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceGroup",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['offerId']"
                                                    },
                                                    "sink": {
                                                        "name": "offerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['isAzureCreditEligible']"
                                                    },
                                                    "sink": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['publisherType']"
                                                    },
                                                    "sink": {
                                                        "name": "publisherType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['chargeType']"
                                                    },
                                                    "sink": {
                                                        "name": "chargeType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['frequency']"
                                                    },
                                                    "sink": {
                                                        "name": "frequency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['meterDetails']"
                                                    },
                                                    "sink": {
                                                        "name": "meterDetails",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_RelativeURL": {
                                                    "value": "/subscriptions/@{item().SubscriptionGuid}/providers/Microsoft.Consumption/usageDetails?api-version=2019-10-01&$filter=properties/usageStart gt '@{item().Min_ReportingDate}' and properties/usageEnd lt '@{item().Max_ReportingDate}'",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BillingDataCSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sink_filename": {
                                                    "value": "@{item().SubscriptionName}_@{item().SubscriptionGuid}_@{item().Filekey}.csv",
                                                    "type": "Expression"
                                                },
                                                "dir_name": {
                                                    "value": "@{formatDateTime(item().Filekey, 'yyyy')}/@{formatDateTime(item().Filekey, 'MM')}/@{formatDateTime(item().Filekey, 'dd')}/Usage",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Wait for 7 seconds",
                                    "type": "Wait",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 7
                                    }
                                },
                                {
                                    "name": "If Gateway Error",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(greater(indexof(activity('Copy REST Output').output.errors[0]['Message'], 'GatewayTimeout' ) ,-1), \ngreater(indexof(activity('Copy REST Output').output.errors[0]['Message'], 'Too many requests' ) ,-1))\n",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Update ADFErrorLog - others",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Historic', ReportingDate='@{item().Min_ReportingDate},@{item().Max_ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Copy Rest Ouput', ErrorCode= '@{activity('Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Copy REST Output').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError_Log",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog - others",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Historic', ReportingDate='@{item().Min_ReportingDate},@{item().Max_ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Wait 7 minutes",
                                                "type": "Wait",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "waitTimeInSeconds": 420
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Retry Copy REST Output",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Historic', ReportingDate='@{item().Min_ReportingDate},@{item().Max_ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Retry Copy Rest Ouput', ErrorCode= '@{activity('Retry Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Retry Copy REST Output').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Historic', ReportingDate='@{item().Min_ReportingDate},@{item().Max_ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Retry Copy REST Output",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Set Token_copy1",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RestSource",
                                                        "httpRequestTimeout": "00:05:00",
                                                        "requestInterval": "00.00:00:02.000",
                                                        "requestMethod": "GET",
                                                        "additionalHeaders": {
                                                            "Authorization": {
                                                                "value": "@variables('Token')",
                                                                "type": "Expression"
                                                            }
                                                        },
                                                        "paginationRules": {
                                                            "AbsoluteUrl": "$['nextLink']"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".csv"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "path": "[['kind']"
                                                                },
                                                                "sink": {
                                                                    "name": "kind",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['id']"
                                                                },
                                                                "sink": {
                                                                    "name": "id",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['name']"
                                                                },
                                                                "sink": {
                                                                    "name": "name",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['type']"
                                                                },
                                                                "sink": {
                                                                    "name": "type",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingAccountId']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingAccountId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingAccountName']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingAccountName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingPeriodStartDate']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingPeriodStartDate",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingPeriodEndDate']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingPeriodEndDate",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingProfileId']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingProfileId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingProfileName']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingProfileName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['accountOwnerId']"
                                                                },
                                                                "sink": {
                                                                    "name": "accountOwnerId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['accountName']"
                                                                },
                                                                "sink": {
                                                                    "name": "accountName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['subscriptionId']"
                                                                },
                                                                "sink": {
                                                                    "name": "subscriptionId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['subscriptionName']"
                                                                },
                                                                "sink": {
                                                                    "name": "subscriptionName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['date']"
                                                                },
                                                                "sink": {
                                                                    "name": "date",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['product']"
                                                                },
                                                                "sink": {
                                                                    "name": "product",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['partNumber']"
                                                                },
                                                                "sink": {
                                                                    "name": "partNumber",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['meterId']"
                                                                },
                                                                "sink": {
                                                                    "name": "meterId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['quantity']"
                                                                },
                                                                "sink": {
                                                                    "name": "quantity",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['effectivePrice']"
                                                                },
                                                                "sink": {
                                                                    "name": "effectivePrice",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['cost']"
                                                                },
                                                                "sink": {
                                                                    "name": "cost",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['unitPrice']"
                                                                },
                                                                "sink": {
                                                                    "name": "unitPrice",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['billingCurrency']"
                                                                },
                                                                "sink": {
                                                                    "name": "billingCurrency",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['resourceLocation']"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceLocation",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['consumedService']"
                                                                },
                                                                "sink": {
                                                                    "name": "consumedService",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['resourceId']"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['resourceName']"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['invoiceSection']"
                                                                },
                                                                "sink": {
                                                                    "name": "invoiceSection",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['resourceGroup']"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceGroup",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['offerId']"
                                                                },
                                                                "sink": {
                                                                    "name": "offerId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['isAzureCreditEligible']"
                                                                },
                                                                "sink": {
                                                                    "name": "isAzureCreditEligible",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['publisherType']"
                                                                },
                                                                "sink": {
                                                                    "name": "publisherType",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['chargeType']"
                                                                },
                                                                "sink": {
                                                                    "name": "chargeType",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['frequency']"
                                                                },
                                                                "sink": {
                                                                    "name": "frequency",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['meterDetails']"
                                                                },
                                                                "sink": {
                                                                    "name": "meterDetails",
                                                                    "type": "String"
                                                                }
                                                            }
                                                        ],
                                                        "collectionReference": "$['value']"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "RestResource_BillingData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "p_RelativeURL": {
                                                                "value": "/subscriptions/@{item().SubscriptionGuid}/providers/Microsoft.Consumption/usageDetails?api-version=2019-10-01&$filter=properties/usageStart gt '@{item().Min_ReportingDate}' and properties/usageEnd lt '@{item().Max_ReportingDate}'",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BillingDataCSV",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "sink_filename": {
                                                                "value": "@{item().SubscriptionName}_@{item().SubscriptionGuid}_@{item().Filekey}.csv",
                                                                "type": "Expression"
                                                            },
                                                            "dir_name": {
                                                                "value": "@{formatDateTime(item().Filekey, 'yyyy')}/@{formatDateTime(item().Filekey, 'MM')}/@{formatDateTime(item().Filekey, 'dd')}/Usage",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "GetBearerToken_copy1",
                                                "description": "Use this Web activity to get bearer token",
                                                "type": "WebActivity",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Wait 7 minutes",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "method": "POST",
                                                    "headers": {
                                                        "Content-Type": "application/x-www-form-urlencoded"
                                                    },
                                                    "url": {
                                                        "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                                        "type": "Expression"
                                                    },
                                                    "body": {
                                                        "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{activity('GetSPNSecret').output.value}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Set Token_copy1",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "GetBearerToken_copy1",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "Token",
                                                    "value": {
                                                        "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "GetBearerToken",
                                    "description": "Use this Web activity to get bearer token",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSPNSecret",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/x-www-form-urlencoded"
                                        },
                                        "url": {
                                            "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{activity('GetSPNSecret').output.value}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Token",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "GetBearerToken",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Token",
                                        "value": {
                                            "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "GetSPNSecret",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {},
                                        "url": {
                                            "value": "@concat(pipeline().parameters.p_SPNSecretURL,'?api-version=7.0')",
                                            "type": "Expression"
                                        },
                                        "authentication": {
                                            "type": "MSI",
                                            "resource": "https://vault.azure.net"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set Parent Directory",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "RunDate",
                            "value": {
                                "value": "@replace(replace(concat('HistoricData-Usage-',formatDateTime(utcnow())),':','-'),'.','-')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "LoadToADX",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ForEach Subscription",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Usage-InitialLoad",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_StorageAccountContainer": "billingdata",
                                "p_month_or_date": {
                                    "value": "@pipeline().parameters.p_adx_month_date",
                                    "type": "Expression"
                                },
                                "p_SubDirectory": "Usage"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "ClientID": {
                        "type": "string",
                        "defaultValue": "aa5605bb-2877-483d-b005-e1439ee1f988"
                    },
                    "tenant_id": {
                        "type": "string",
                        "defaultValue": "8a807b9b-02da-47f3-a903-791a42a2285c"
                    },
                    "DaterangeKQL": {
                        "type": "string",
                        "defaultValue": "ADFErrorLog | where ErrorTimestamp > todatetime('2021-07-29 03:26:48')  | join kind=inner (BillingConfig  | extend subscription=tostring(SubscriptionGuid))  on $left.ErrorSubscription==$right.subscription  | extend Min_ReportingDate=tostring(split(ReportingDate, ',')[0]), Max_ReportingDate=tostring(split(ReportingDate, ',')[1])  | distinct Min_ReportingDate,Max_ReportingDate,  SubscriptionName, SubscriptionGuid | extend FileKey = format_datetime(todatetime(Min_ReportingDate), 'yyyy-MM-dd')"
                    },
                    "p_SPNSecretURL": {
                        "type": "string",
                        "defaultValue": "https://kv-ccop-dv.vault.azure.net/secrets/CostMGMT-SPN-Secret/eafafff824ca4d8c8a8c604579b70ed1"
                    },
                    "p_adx_month_date": {
                        "type": "string"
                    }
                },
                "variables": {
                    "v_DateRange": {
                        "type": "Array"
                    },
                    "REST_API_ProcessStatus": {
                        "type": "String"
                    },
                    "Token": {
                        "type": "String"
                    },
                    "RunDate": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Billing/HistoricData"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:32Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 3 - ADX Stage to Prod - Usage')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Loop Through Days",
                        "type": "ForEach",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.p_BillingDate",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Get Folder Stats",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "FolderValidation",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FilePath": {
                                                    "value": "@{pipeline().parameters.p_containername}/@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "exists",
                                            "childItems"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "BinaryReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "IsFolderValid",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Folder Stats",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(activity('Get Folder Stats').output.exists,true),greater(length(activity('Get Folder Stats').output.childItems),0))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "DataLake to ADX",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Reset Staging Table",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 1,
                                                    "retryIntervalInSeconds": 300,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true,
                                                            "wildcardFolderPath": {
                                                                "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                                "type": "Expression"
                                                            },
                                                            "wildcardFileName": "*",
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "AzureDataExplorerSink"
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "kind",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "kind",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "id",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "id",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "name",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "name",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "type",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "type",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "tags",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "tags",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "billingAccountId",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "billingAccountId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "billingAccountName",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "billingAccountName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "billingPeriodStartDate",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "billingPeriodStartDate",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "billingPeriodEndDate",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "billingPeriodEndDate",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "billingProfileId",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "billingProfileId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "billingProfileName",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "billingProfileName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "accountOwnerId",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "accountOwnerId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "accountName",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "accountName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "subscriptionId",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "subscriptionId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "subscriptionName",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "subscriptionName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "date",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "date",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "product",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "product",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "partNumber",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "partNumber",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "meterId",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "meterId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "quantity",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "quantity",
                                                                    "type": "Double"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "effectivePrice",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "effectivePrice",
                                                                    "type": "Double"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "cost",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "cost",
                                                                    "type": "Double"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "unitPrice",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "unitPrice",
                                                                    "type": "Double"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "billingCurrency",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "billingCurrency",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "resourceLocation",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceLocation",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "consumedService",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "consumedService",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "resourceId",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "resourceName",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "serviceInfo2",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "serviceInfo2",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "invoiceSection",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "invoiceSection",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "resourceGroup",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceGroup",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "offerId",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "offerId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "isAzureCreditEligible",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "isAzureCreditEligible",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "publisherType",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "publisherType",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "chargeType",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "chargeType",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "frequency",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "frequency",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "meterDetails",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "meterDetails",
                                                                    "type": "String"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "src_BillingDataTSV",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ContainerName": {
                                                                "value": "@pipeline().parameters.p_containername",
                                                                "type": "Expression"
                                                            },
                                                            "DirectoryName": {
                                                                "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                                "type": "Expression"
                                                            },
                                                            "FileName": "*"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "adx_BillingData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "TableName": "Staging_BillingData"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Reset Staging Table",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 1,
                                                    "retryIntervalInSeconds": 300,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": ".set-or-replace  Staging_BillingData <|\nStaging_BillingData\n| take 0",
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Drop Extent and Load to Prod",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [
                                                    {
                                                        "activity": "DataLake to ADX",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "Billing API Sub 4 - ADX Stage to Prod - Usage",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "p_BillingDate": {
                                                            "value": "@item().ReportingDate",
                                                            "type": "Expression"
                                                        },
                                                        "p_SubDirectory": {
                                                            "value": "@pipeline().parameters.p_SubDirectory",
                                                            "type": "Expression"
                                                        },
                                                        "p_containername": {
                                                            "value": "@pipeline().parameters.p_containername",
                                                            "type": "Expression"
                                                        },
                                                        "p_BatchType": {
                                                            "value": "@pipeline().parameters.p_BatchType",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_BillingDate": {
                        "type": "array"
                    },
                    "p_SubDirectory": {
                        "type": "string"
                    },
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BatchType": {
                        "type": "string"
                    }
                },
                "variables": {
                    "kql": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:32Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pline Flatten VM Metrics JSON v4')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "dataflow Flatten Json",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "dataflowFlattenJSON",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "source_dirname": {
                                        "value": "'@{pipeline().parameters.source_dirname}'",
                                        "type": "Expression"
                                    },
                                    "filename": {
                                        "value": "'@{pipeline().parameters.sink_filename}'",
                                        "type": "Expression"
                                    },
                                    "sink_dirname": {
                                        "value": "'@{pipeline().parameters.sink_dirname}'",
                                        "type": "Expression"
                                    }
                                },
                                "datasetParameters": {
                                    "jsonFile": {
                                        "dirname": {
                                            "value": "@pipeline().parameters.source_dirname",
                                            "type": "Expression"
                                        }
                                    },
                                    "sinkCSVFile": {
                                        "dirname": {
                                            "value": "@pipeline().parameters.sink_dirname",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "source_dirname": {
                        "type": "string",
                        "defaultValue": "json/2020/07/19"
                    },
                    "sink_dirname": {
                        "type": "string",
                        "defaultValue": "csv/2020/07/19"
                    },
                    "sink_filename": {
                        "type": "string",
                        "defaultValue": "vmmetrics_2020_07_19.csv"
                    }
                },
                "folder": {
                    "name": "VM Metrics"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:32Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/BillingData LoadReferenceFiles_Backup')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Loads Reference data for Billing Data",
                "activities": [
                    {
                        "name": "ProductMeterCategory_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_ProductMeterCategory",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Product",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Product",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FNFCategory",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "FNFCategory",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CCOP Approved",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CCOPApproved",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostType",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CostType",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsPrePay",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "IsPrePay",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SFTP_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_ProductMeterCategory",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_ProductMeterCategory",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_ProductMeterCategory"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_ProductMeterCategory",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LOB",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_ProductMeterCategory <|\nStaging_ProductMeterCategory \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ProductMeterCategory",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ProductMeterCategory_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ProductMeterCategory <| Staging_ProductMeterCategory \n| extend Product=tolower(Product),FNFCategory=tolower(FNFCategory),CCOPApproved=tobool(CCOPApproved),CostType=tolower(CostType),IsPrePay=tobool(IsPrePay)\n| distinct Product, FNFCategory, CCOPApproved, CostType, IsPrePay",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOBBudget_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_LOBBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "LineOfBusiness",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "LineOfBusiness",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YearMonth",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "YearMonth",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Budget",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Budget",
                                            "type": "Int64",
                                            "physicalType": "long"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SFTP_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_LOBBudget",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_LOBBudget"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_LOBBudget",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ProductMeterCategory",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_LOBBudget <|\nStaging_LOBBudget \n| where 1==0\n",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOBBudget",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LOBBudget_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace LOBBudget <|\nlet UnDefined = 'undefined';\nStaging_LOBBudget\n| extend Year=split(YearMonth, '-')[0],Month=split(YearMonth, '-')[1]\n| extend YearMonth = strcat(Year,'-', substring(strcat('0',Month), -2, 2))\n| project LineOfBusiness, YearMonth, Budget\n| join kind=leftouter LOB on $left.LineOfBusiness==$right.ID\n| extend LineOfBusiness = iif(isempty(ID),UnDefined,ShortName)\n| project LineOfBusiness, YearMonth, Budget",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationLKP_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_ApplicationLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "App ID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Application Name",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ApplicationName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppAbreviation",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppAbreviation",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostCenter",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CostCenter",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ISApplication",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "IsApplication",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AvalibleForCostReporting",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AvailableForCostReporting",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RTO",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "RTO",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RPO",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "RPO",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Revenue",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Revenue",
                                            "type": "Double",
                                            "physicalType": "real"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ITAppOwner",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ITAppOWner",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "HostedInAzure",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "HostedInAzure",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppLOB",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppLOB",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SFTP_CSVText_referencedata",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@pipeline().parameters.p_FileName_ApplicationLKP",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_ApplicationLKP"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_ApplicationLKP",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LOBBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_ApplicationLKP <|\nStaging_ApplicationLKP \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationLKP",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ApplicationLKP_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ApplicationLKP <|\n Staging_ApplicationLKP\n| extend rpo_t = toint(split(RPO, ' ')[0]), HostedInAzure_t = tobool(HostedInAzure)\n| extend rpo_c = iif(isnull(rpo_t),toint(0),rpo_t), HostedInAzure_c = iif(isnull(HostedInAzure_t),false,HostedInAzure_t)\n| project AppID, ApplicationName, AppAbreviation, CostCenter, IsApplication = tobool(IsApplication), AvailableForCostReporting = tobool(AvailableForCostReporting),\n RTO=toint(RTO), RPO = rpo_c, Revenue, ITAppOWner, HostedInAzure= HostedInAzure_c, AppLOB",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationBudget_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Staging_ApplicationBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "SubscriptionGuid",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionGuid",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceGroupFQN",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceGroupFQN",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": " AppCode",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppCode",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingMonth",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "BillingMonth",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BudgetAMT",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "BudgetAMT",
                                            "type": "Double",
                                            "physicalType": "real"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Year",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Year",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Month",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Month",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SFTP_CSVText_referencedata",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@pipeline().parameters.p_FileName_ApplicationBudget",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_ApplicationBudget"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Staging_ApplicationBudget",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ApplicationLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_ApplicationBudget <|\nStaging_ApplicationBudget \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationBudget",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ApplicationBudget_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ApplicationBudget <|\n Staging_ApplicationBudget\n| extend YearMonth_t = strcat(Year,'-', substring(strcat('0',Month), -2, 2))\n| project SubscriptionGuid=tolower(SubscriptionGuid), SubscriptionName=tolower(SubscriptionName), ResourceGroupFQN=tolower(ResourceGroupFQN), AppCode=tolower(AppCode), AppName=tolower(AppName), BillingMonth = YearMonth_t, BudgetAMT,\nParentHostingSubHostingID=tolower(ParentHostingSubHostingID)",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "HostingLKP_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Staging_HostingLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentHostingID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentHostingServiceName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingServiceName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubHostingServiceID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubHostingServiceID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubHostingServiceName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubHostingServiceName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SFTP_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_HostingLKP",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_HostingLKP"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Staging_HostingLKP",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ApplicationBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_HostingLKP <|\nStaging_HostingLKP \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "HostingLKP",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "HostingLKP_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace HostingLKP <|\nStaging_HostingLKP\n| extend ParentHostingSubHostingID=toreal(ParentHostingSubHostingID),ParentHostingID=tolong(ParentHostingID),SubHostingServiceID=tolong(SubHostingServiceID),ParentHostingServiceName=tolower(ParentHostingServiceName),SubHostingServiceName=tolower(SubHostingServiceName)\n| project ParentHostingSubHostingID, ParentHostingID, ParentHostingServiceName, SubHostingServiceID, SubHostingServiceName",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Copy ITSMOCostMapping to ADX",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Reset Staging_BillingConfig",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "RGFQN",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceGroupFQN",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscritionGuid",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionGuid",
                                            "type": "Guid",
                                            "physicalType": "guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceGroupName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceGroupName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "HostingService",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "HostingService",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppCode1",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppCode1",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostCenter",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CostCenter",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LineOfBusiness",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "LineOfBusiness",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MigrationStatus",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "MigrationStatus",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CoreSubscription",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CoreSubscription",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PrevFISSpend",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "PrevFISSpend",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsApplication",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "IsApplication",
                                            "type": "Boolean",
                                            "physicalType": "bool"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FinanceLOB",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "FinanceLOB",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SFTP_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_ITSMOCostMapping",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_BillingConfig"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Staging_BillingConfig to BillingConfig",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Copy ITSMOCostMapping to ADX",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace BillingConfig <| \nlet UnDefined = 'undefined';\nStaging_BillingConfig\n| extend SubscriptionGuid=toguid(tolower(SubscriptionGuid)),\nResourceGroupFQN=tolower(ResourceGroupFQN),\nSubscriptionName = trim_start(\" \",tolower(replace(@'./.', @'_\\1', SubscriptionName))),\nResourceGroupName=tolower(ResourceGroupName),\nHostingService=tolower(HostingService),\nAppCode1=tolower(AppCode1),\nAppName=tolower(AppName),\nCostCenter=tolower(CostCenter),\nLineOfBusiness=tolower(LineOfBusiness),\nMigrationStatus=tolower(MigrationStatus),\nCoreSubscription=tolower(CoreSubscription),\nPrevFISSpend=tolower(PrevFISSpend),\nIsApplication=iff(isempty(IsApplication) or isnull(IsApplication), false, IsApplication)\n| distinct ResourceGroupFQN, SubscriptionName, SubscriptionGuid, ResourceGroupName, HostingService, AppCode1, AppName, CostCenter, LineOfBusiness, MigrationStatus, CoreSubscription, PrevFISSpend, IsApplication,FinanceLOB\n| join kind=leftouter LOB on $left.LineOfBusiness==$right.ID\n| extend LineOfBusiness = iif(isempty(ID),UnDefined,ShortName)\n| join kind=leftouter (LOB | project ID1=ID, FullName1=FullName) on $left.FinanceLOB==$right.ID1\n| extend FinanceLOB = iif(isempty(ID1),UnDefined,FullName1)\n| join kind=leftouter (HostingLKP | project ParentHostingSubHostingID=tostring(ParentHostingSubHostingID), SubHostingServiceName) on $left.HostingService==$right.ParentHostingSubHostingID\n| extend HostingService = iif(isempty(ParentHostingSubHostingID), UnDefined, SubHostingServiceName)\n| distinct ResourceGroupFQN, SubscriptionName, SubscriptionGuid, ResourceGroupName, HostingService, AppCode1, AppName, CostCenter, LineOfBusiness, MigrationStatus, CoreSubscription, PrevFISSpend, IsApplication,FinanceLOB",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset Staging_BillingConfig",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "HostingLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace Staging_BillingConfig <|\nBillingConfig \n| where 1==0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LoadFlexData_Staging",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear Staging_FlexData",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "HttpReadSettings",
                                    "requestMethod": "GET"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "InstanceSizeFlexibilityGroup",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "InstanceSizeFlexibilityGroup",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ArmSkuName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ArmSkuName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Ratio",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Ratio",
                                            "type": "Double",
                                            "physicalType": "real"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "Flex_ISFRatio",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_FlexGroup"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear Staging_FlexData",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Staging_BillingConfig to BillingConfig",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_FlexGroup<|\nStaging_FlexGroup\n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "FlexData",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LoadFlexData_Staging",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace FlexGroup <|\nStaging_FlexGroup",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOB_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_LOB",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ShortName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ShortName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FullName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "FullName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SFTP_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_LOBLookUp",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_LOB"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_LOB",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_LOB <|\nStaging_LOB \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOB",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LOB_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace LOB <| Staging_LOB \n| extend ShortName=tolower(ShortName),FullName=tolower(FullName)\n| project ID, ShortName, FullName",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_Container": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data/referencedata"
                    },
                    "p_FileName_ProductMeterCategory": {
                        "type": "string",
                        "defaultValue": "ProductMeterCategory.xlsx"
                    },
                    "p_WorkSheetName_ProductMeterCategory": {
                        "type": "string",
                        "defaultValue": "ProductMeterCategory"
                    },
                    "p_FileName_ApplicationLKP": {
                        "type": "string",
                        "defaultValue": "ApplicationLKP.csv"
                    },
                    "p_FileName_ApplicationBudget": {
                        "type": "string",
                        "defaultValue": "ApplicationBudget.csv"
                    },
                    "p_FileName_CostMapping": {
                        "type": "string",
                        "defaultValue": "ITSMOCostMapping_Dev.xlsx"
                    },
                    "p_FileName_FlexData": {
                        "type": "string",
                        "defaultValue": "ISFRatio.csv"
                    },
                    "p_WorkSheetName_HostingLKP": {
                        "type": "string",
                        "defaultValue": "HostingLKP"
                    },
                    "p_WorkSheetName_LOBLookUp": {
                        "type": "string",
                        "defaultValue": "LOBLookUp"
                    },
                    "p_WorkSheetName_ITSMOCostMapping": {
                        "type": "string",
                        "defaultValue": "ITSMOCostMapping"
                    },
                    "p_WorkSheetName_LOBBudget": {
                        "type": "string",
                        "defaultValue": "LOBBudget"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-02-21T17:05:11Z"
            },
            "dependsOn": []
        }
    ]
}