{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "fng-dtf-acrp-dev"
        },
        "Billing API - Monthly_properties_Billing API_parameters_p_LookBackInDay": {
            "type": "string",
            "defaultValue": "3"
        },
        "Billing API - Monthly_properties_Billing API_parameters_p_BillingIds": {
            "type": "array",
            "defaultValue": [
                {
                    "BillingID": "46132814",
                    "KeyVaultURLForAPIKey": "https://kv-acrp-dev.vault.azure.net/secrets/APIKey-46132814/997864aa1b904061bd8a229e52b56ea4"
                }
            ]
        },
        "Billing API - Monthly_properties_Billing API_parameters_p_containername": {
            "type": "string",
            "defaultValue": "azure-cost-metric-data"
        },
        "Billing API - Monthly_properties_Billing API_parameters_p_BeginDate": {
            "type": "string",
            "defaultValue": "NA"
        },
        "Billing API - Monthly_properties_Billing API_parameters_p_EndDate": {
            "type": "string",
            "defaultValue": "NA"
        },
        "Billing API - Monthly_properties_Billing API_parameters_p_BatchType": {
            "type": "string",
            "defaultValue": "Batch"
        },
        "Billing API - Daily_properties_Billing API_parameters_p_LookBackInDay": {
            "type": "string",
            "defaultValue": "3"
        },
        "Billing API - Daily_properties_Billing API_parameters_p_BillingIds": {
            "type": "array",
            "defaultValue": [
                {
                    "BillingID": "46132814",
                    "KeyVaultURLForAPIKey": "https://kv-acrp-dev.vault.azure.net/secrets/APIKey-46132814/997864aa1b904061bd8a229e52b56ea4"
                }
            ]
        },
        "Billing API - Daily_properties_Billing API_parameters_p_containername": {
            "type": "string",
            "defaultValue": "azure-cost-metric-data"
        },
        "Billing API - Daily_properties_Billing API_parameters_p_BeginDate": {
            "type": "string",
            "defaultValue": "NA"
        },
        "Billing API - Daily_properties_Billing API_parameters_p_EndDate": {
            "type": "string",
            "defaultValue": "NA"
        },
        "Billing API - Daily_properties_Billing API_parameters_p_BatchType": {
            "type": "string",
            "defaultValue": "Daily"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/BillingData LoadReferenceFiles_Backup_03212023')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Loads Reference data for Billing Data",
                "activities": [
                    {
                        "name": "ProductMeterCategory_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_ProductMeterCategory",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Product",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Product",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FNGCategory",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "FNGCategory",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostType",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CostType",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsPrePay",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "IsPrePay",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADX_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_ProductMeterCategory",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_ProductMeterCategory",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_ProductMeterCategory"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_ProductMeterCategory",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LOB",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_ProductMeterCategory <|\nStaging_ProductMeterCategory \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ProductMeterCategory",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ProductMeterCategory_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ProductMeterCategory <| Staging_ProductMeterCategory \n| extend Product=tolower(Product),FNGCategory=tolower(FNGCategory),CostType=tolower(CostType),IsPrePay=tobool(IsPrePay)\n| distinct Product, FNGCategory, CostType, IsPrePay",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOBBudget_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_LOBBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "LineOfBusiness",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "LineOfBusiness",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YearMonth",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "YearMonth",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Budget",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Budget",
                                            "type": "Int64",
                                            "physicalType": "long"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADX_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_LOBBudget",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_LOBBudget"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_LOBBudget",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ProductMeterCategory",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_LOBBudget <|\nStaging_LOBBudget \n| where 1==0\n",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOBBudget",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LOBBudget_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace LOBBudget <|\nlet UnDefined = 'undefined';\nStaging_LOBBudget\n| extend Year=split(YearMonth, '-')[0],Month=split(YearMonth, '-')[1]\n| extend YearMonth = strcat(Year,'-', substring(strcat('0',Month), -2, 2))\n| project LineOfBusiness, YearMonth, Budget\n| join kind=leftouter LOB on $left.LineOfBusiness==$right.ID\n| extend LineOfBusiness = iif(isempty(ID),UnDefined,ShortName)\n| project LineOfBusiness, YearMonth, Budget",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationLKP_Data",
                        "type": "Copy",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_ApplicationLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "App ID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Application Name",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ApplicationName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppAbreviation",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppAbreviation",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostCenter",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CostCenter",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ISApplication",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "IsApplication",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AvalibleForCostReporting",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AvailableForCostReporting",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RTO",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "RTO",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RPO",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "RPO",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Revenue",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Revenue",
                                            "type": "Double",
                                            "physicalType": "real"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ITAppOwner",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ITAppOWner",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "HostedInAzure",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "HostedInAzure",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppLOB",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppLOB",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SFTP_CSVText_referencedata",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@pipeline().parameters.p_FileName_ApplicationLKP",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_ApplicationLKP"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_ApplicationLKP",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "LOBBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_ApplicationLKP <|\nStaging_ApplicationLKP \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationLKP",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "ApplicationLKP_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ApplicationLKP <|\n Staging_ApplicationLKP\n| extend rpo_t = toint(split(RPO, ' ')[0]), HostedInAzure_t = tobool(HostedInAzure)\n| extend rpo_c = iif(isnull(rpo_t),toint(0),rpo_t), HostedInAzure_c = iif(isnull(HostedInAzure_t),false,HostedInAzure_t)\n| project AppID, ApplicationName, AppAbreviation, CostCenter, IsApplication = tobool(IsApplication), AvailableForCostReporting = tobool(AvailableForCostReporting),\n RTO=toint(RTO), RPO = rpo_c, Revenue, ITAppOWner, HostedInAzure= HostedInAzure_c, AppLOB",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationBudget_Data",
                        "type": "Copy",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "Staging_ApplicationBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "SubscriptionGuid",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionGuid",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceGroupFQN",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceGroupFQN",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": " AppCode",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppCode",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingMonth",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "BillingMonth",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BudgetAMT",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "BudgetAMT",
                                            "type": "Double",
                                            "physicalType": "real"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Year",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Year",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Month",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Month",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SFTP_CSVText_referencedata",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@pipeline().parameters.p_FileName_ApplicationBudget",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_ApplicationBudget"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Staging_ApplicationBudget",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "ApplicationLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_ApplicationBudget <|\nStaging_ApplicationBudget \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationBudget",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "ApplicationBudget_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ApplicationBudget <|\n Staging_ApplicationBudget\n| extend YearMonth_t = strcat(Year,'-', substring(strcat('0',Month), -2, 2))\n| project SubscriptionGuid=tolower(SubscriptionGuid), SubscriptionName=tolower(SubscriptionName), ResourceGroupFQN=tolower(ResourceGroupFQN), AppCode=tolower(AppCode), AppName=tolower(AppName), BillingMonth = YearMonth_t, BudgetAMT,\nParentHostingSubHostingID=tolower(ParentHostingSubHostingID)",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "HostingLKP_Data",
                        "type": "Copy",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "Staging_HostingLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentHostingID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentHostingServiceName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingServiceName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubHostingServiceID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubHostingServiceID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubHostingServiceName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubHostingServiceName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SFTP_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_HostingLKP",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_HostingLKP"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Staging_HostingLKP",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "ApplicationBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_HostingLKP <|\nStaging_HostingLKP \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "HostingLKP",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "HostingLKP_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace HostingLKP <|\nStaging_HostingLKP\n| extend ParentHostingSubHostingID=toreal(ParentHostingSubHostingID),ParentHostingID=tolong(ParentHostingID),SubHostingServiceID=tolong(SubHostingServiceID),ParentHostingServiceName=tolower(ParentHostingServiceName),SubHostingServiceName=tolower(SubHostingServiceName)\n| project ParentHostingSubHostingID, ParentHostingID, ParentHostingServiceName, SubHostingServiceID, SubHostingServiceName",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Copy ITSMOCostMapping to ADX",
                        "type": "Copy",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "Reset Staging_BillingConfig",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "RGFQN",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceGroupFQN",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscritionGuid",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionGuid",
                                            "type": "Guid",
                                            "physicalType": "guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceGroupName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceGroupName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "HostingService",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "HostingService",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppCode1",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppCode1",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostCenter",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CostCenter",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LineOfBusiness",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "LineOfBusiness",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MigrationStatus",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "MigrationStatus",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CoreSubscription",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CoreSubscription",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PrevFISSpend",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "PrevFISSpend",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsApplication",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "IsApplication",
                                            "type": "Boolean",
                                            "physicalType": "bool"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FinanceLOB",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "FinanceLOB",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SFTP_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_ITSMOCostMapping",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_BillingConfig"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Staging_BillingConfig to BillingConfig",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "Copy ITSMOCostMapping to ADX",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace BillingConfig <| \nlet UnDefined = 'undefined';\nStaging_BillingConfig\n| extend SubscriptionGuid=toguid(tolower(SubscriptionGuid)),\nResourceGroupFQN=tolower(ResourceGroupFQN),\nSubscriptionName = trim_start(\" \",tolower(replace(@'./.', @'_\\1', SubscriptionName))),\nResourceGroupName=tolower(ResourceGroupName),\nHostingService=tolower(HostingService),\nAppCode1=tolower(AppCode1),\nAppName=tolower(AppName),\nCostCenter=tolower(CostCenter),\nLineOfBusiness=tolower(LineOfBusiness),\nMigrationStatus=tolower(MigrationStatus),\nCoreSubscription=tolower(CoreSubscription),\nPrevFISSpend=tolower(PrevFISSpend),\nIsApplication=iff(isempty(IsApplication) or isnull(IsApplication), false, IsApplication)\n| distinct ResourceGroupFQN, SubscriptionName, SubscriptionGuid, ResourceGroupName, HostingService, AppCode1, AppName, CostCenter, LineOfBusiness, MigrationStatus, CoreSubscription, PrevFISSpend, IsApplication,FinanceLOB\n| join kind=leftouter LOB on $left.LineOfBusiness==$right.ID\n| extend LineOfBusiness = iif(isempty(ID),UnDefined,ShortName)\n| join kind=leftouter (LOB | project ID1=ID, FullName1=FullName) on $left.FinanceLOB==$right.ID1\n| extend FinanceLOB = iif(isempty(ID1),UnDefined,FullName1)\n| join kind=leftouter (HostingLKP | project ParentHostingSubHostingID=tostring(ParentHostingSubHostingID), SubHostingServiceName) on $left.HostingService==$right.ParentHostingSubHostingID\n| extend HostingService = iif(isempty(ParentHostingSubHostingID), UnDefined, SubHostingServiceName)\n| distinct ResourceGroupFQN, SubscriptionName, SubscriptionGuid, ResourceGroupName, HostingService, AppCode1, AppName, CostCenter, LineOfBusiness, MigrationStatus, CoreSubscription, PrevFISSpend, IsApplication,FinanceLOB",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset Staging_BillingConfig",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "HostingLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace Staging_BillingConfig <|\nBillingConfig \n| where 1==0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LoadFlexData_Staging",
                        "type": "Copy",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "Clear Staging_FlexData",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "HttpReadSettings",
                                    "requestMethod": "GET"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "InstanceSizeFlexibilityGroup",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "InstanceSizeFlexibilityGroup",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ArmSkuName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ArmSkuName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Ratio",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Ratio",
                                            "type": "Double",
                                            "physicalType": "real"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "Flex_ISFRatio",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_FlexGroup"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear Staging_FlexData",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "Staging_BillingConfig to BillingConfig",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_FlexGroup<|\nStaging_FlexGroup\n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "FlexData",
                        "type": "AzureDataExplorerCommand",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "LoadFlexData_Staging",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace FlexGroup <|\nStaging_FlexGroup",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOB_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_LOB",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ShortName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ShortName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FullName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "FullName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADX_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_LOBLookUp",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_LOB"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_LOB",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_LOB <|\nStaging_LOB \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOB",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LOB_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace LOB <| Staging_LOB \n| extend ShortName=tolower(ShortName),FullName=tolower(FullName)\n| project ID, ShortName, FullName",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_Container": {
                        "type": "string",
                        "defaultValue": "referencedata"
                    },
                    "p_FileName_ProductMeterCategory": {
                        "type": "string",
                        "defaultValue": "ProductMeterCategory.xlsx"
                    },
                    "p_WorkSheetName_ProductMeterCategory": {
                        "type": "string",
                        "defaultValue": "ProductMeterCategory"
                    },
                    "p_FileName_ApplicationLKP": {
                        "type": "string",
                        "defaultValue": "ApplicationLKP.csv"
                    },
                    "p_FileName_ApplicationBudget": {
                        "type": "string",
                        "defaultValue": "ApplicationBudget.csv"
                    },
                    "p_FileName_CostMapping": {
                        "type": "string",
                        "defaultValue": "ITSMOCostMapping.xlsx"
                    },
                    "p_FileName_FlexData": {
                        "type": "string",
                        "defaultValue": "ISFRatio.csv"
                    },
                    "p_WorkSheetName_HostingLKP": {
                        "type": "string",
                        "defaultValue": "HostingLKP"
                    },
                    "p_WorkSheetName_LOBLookUp": {
                        "type": "string",
                        "defaultValue": "LOBLookUp"
                    },
                    "p_WorkSheetName_ITSMOCostMapping": {
                        "type": "string",
                        "defaultValue": "ITSMOCostMapping"
                    },
                    "p_WorkSheetName_LOBBudget": {
                        "type": "string",
                        "defaultValue": "LOBBudget"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-21T12:47:27Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Forecast Initial Load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Loop Through Days",
                        "type": "ForEach",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.p_BillingDate",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Get Folder Stats",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "FolderValidation",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FilePath": {
                                                    "value": "@{pipeline().parameters.p_containername}/@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{variables('SubFolder')}/@{variables('CSVPath')}",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "exists",
                                            "childItems"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "BinaryReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "IsFolderValid",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Folder Stats",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(activity('Get Folder Stats').output.exists,true),greater(length(activity('Get Folder Stats').output.childItems),0))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Copy to Forecast Staging Table",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Truncate Staging",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true,
                                                            "wildcardFolderPath": {
                                                                "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{variables('SubFolder')}/@{variables('CSVPath')}/",
                                                                "type": "Expression"
                                                            },
                                                            "wildcardFileName": "*",
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "AzureDataExplorerSink"
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "SubscriptionID",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "subscriptionId",
                                                                    "type": "String",
                                                                    "physicalType": "string"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ResourceGroup",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceGroup",
                                                                    "type": "String",
                                                                    "physicalType": "string"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Cost",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "cost",
                                                                    "type": "String",
                                                                    "physicalType": "string"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "UsageDate",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "usageDate",
                                                                    "type": "String",
                                                                    "physicalType": "string"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "CSVText",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Container": {
                                                                "value": "@pipeline().parameters.p_containername",
                                                                "type": "Expression"
                                                            },
                                                            "directory": {
                                                                "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{variables('SubFolder')}/@{variables('CSVPath')}/*",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ADX_Generic",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "TableName": "Staging_Forecast"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Truncate Staging",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": ".set-or-replace Staging_Forecast <| Staging_Forecast | take 0",
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Insert into Forecast",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy to Forecast Staging Table",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append Forecast_History <| Staging_Forecast | project subscriptionId, resourceGroup, cost=toreal(cost), usageDate=todatetime(usageDate),LogDate=todatetime('@{item().ReportingDate}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Forecast Daily Load",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Loop Through Days",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 1 - API Call - Forecast",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BillingDate": {
                        "type": "array"
                    }
                },
                "variables": {
                    "CSVPath": {
                        "type": "String",
                        "defaultValue": "Csv"
                    },
                    "SubFolder": {
                        "type": "String",
                        "defaultValue": "Forecast"
                    }
                },
                "folder": {
                    "name": "Initial Setup"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:33Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 1 - Usage Orchestrator')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "For Each BillingID",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Date and BillingID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Clear Folder Contents",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Date and BillingID').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Execute Billing API",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Billing API Sub 2 - API Call - Usage",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "p_BillingId": {
                                                "value": "@item().BillingID",
                                                "type": "Expression"
                                            },
                                            "p_BeginDate": {
                                                "value": "@item().BeginDate",
                                                "type": "Expression"
                                            },
                                            "p_EndDate": {
                                                "value": "@item().EndDate",
                                                "type": "Expression"
                                            },
                                            "p_containername": {
                                                "value": "@pipeline().parameters.p_containername",
                                                "type": "Expression"
                                            },
                                            "p_BatchType": {
                                                "value": "@pipeline().parameters.p_BatchType",
                                                "type": "Expression"
                                            },
                                            "p_UsageTempFolderName": {
                                                "value": "@variables('v_UsageTempFolderName')",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "ReportingDates",
                                    "type": "AppendVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Execute Billing API",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_ReportingDates",
                                        "value": {
                                            "value": "@{item().BeginDate},@{item().EndDate}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Update WaterMark",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Insert into BillingData",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace WaterMark <|\nWaterMark\n| project BillingData_LastRetry=todatetime('@{activity('Lookup Max Error TimeStamp').output.firstRow.MaxErrorTimeStamp}'),Reservation_LastRetry, Credit_LastRetry, ReservationDesc_LastRetry,MarketPlace_LastRetry,ForeCast_LastRetry",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Insert into BillingData",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Split Downloaded Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 3 - ADX Stage to Prod - Usage",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_BillingDate": {
                                    "value": "@activity('File Dates').output.value",
                                    "type": "Expression"
                                },
                                "p_SubDirectory": {
                                    "value": "@variables('v_UsageFolderName')",
                                    "type": "Expression"
                                },
                                "p_containername": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "p_BatchType": {
                                    "value": "@pipeline().parameters.p_BatchType",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Is Process Date Passed",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Lookup Max Error TimeStamp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(and(equals(pipeline().parameters.p_BeginDate,'NA'),equals(pipeline().parameters.p_EndDate,'NA')),equals(pipeline().parameters.p_BatchType,'Daily'))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Set KQL ProcessDate not equals NA",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_KQL",
                                        "value": {
                                            "value": "let _batchmode = '@{pipeline().parameters.p_BatchType}';\nlet _startdate = iif('@{pipeline().parameters.p_BeginDate}'=~'NA', startofmonth(now(),-1), todatetime('@{pipeline().parameters.p_BeginDate}'));\nlet _enddate = iif('@{pipeline().parameters.p_EndDate}'=~'NA', endofmonth(now(),-1), todatetime('@{pipeline().parameters.p_EndDate}'));\nlet _lastretry = toscalar(WaterMark | distinct BillingData_LastRetry);\nlet BillingIds = materialize(datatable (CommonJoin:int, BillingID:dynamic) [1, dynamic(@{pipeline().parameters.p_BillingIds})] | mv-expand BillingID | extend BillingID=tostring(BillingID));\nlet NewBatch = materialize(\nBillingIds | extend BillingID=tostring(BillingID), BeginDate = todatetime(_startdate), EndDate = todatetime(_enddate), ReportingDate=range(_startdate, _enddate, 1d)\n| mv-expand ReportingDate\n| extend ReportingDate = todatetime(ReportingDate)\n| project-away CommonJoin\n);\nlet FailedBatch = materialize( ADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - UsageByBillingID'\n| extend BeginDate=todatetime(split(ReportingDate, ',')[0]), EndDate=todatetime(split(ReportingDate, ',')[1])\n| extend ReportingDate=range(BeginDate, EndDate, 1d)\n| mv-expand ReportingDate\n| project BillingID=ErrorResourceID,BeginDate, EndDate, ReportingDate=todatetime(ReportingDate)\n);\nNewBatch\n| union FailedBatch\n| extend Month=format_datetime(ReportingDate, 'yyyy-MM')\n| summarize BeginDate=min(ReportingDate), EndDate=max(ReportingDate) by BillingID, Month\n| project BillingID, BeginDate=format_datetime(BeginDate, 'yyyy-MM-dd'), EndDate=format_datetime(EndDate, 'yyyy-MM-dd')\n| distinct BillingID, BeginDate, EndDate",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Set KQL ProcessDate equals NA",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_KQL",
                                        "value": {
                                            "value": "let _batchmode = '@{pipeline().parameters.p_BatchType}';\nlet _lookbackdayparameter = now(-@{pipeline().parameters.p_LookBackInDay}d);\nlet _lastretry = toscalar(WaterMark | distinct BillingData_LastRetry);\nlet BillingIds = materialize(datatable (CommonJoin:int, BillingID:dynamic) [1, dynamic(@{pipeline().parameters.p_BillingIds})] | mv-expand BillingID | extend BillingID = tostring(BillingID));\nlet NewBatch = materialize(\nBillingIds | extend BillingID=tostring(BillingID), BeginDate = todatetime(_lookbackdayparameter), EndDate = todatetime(now(-1d)), ReportingDate=range(_lookbackdayparameter, now(-1d), 1d)\n| mv-expand ReportingDate\n| extend ReportingDate = todatetime(ReportingDate)\n| project-away CommonJoin\n);\nlet FailedBatch = materialize( ADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - UsageByBillingID'\n| extend BeginDate=todatetime(split(ReportingDate, ',')[0]), EndDate=todatetime(split(ReportingDate, ',')[1])\n| extend ReportingDate=range(BeginDate, EndDate, 1d)\n| mv-expand ReportingDate\n| project BillingID=ErrorResourceID,BeginDate, EndDate, ReportingDate=todatetime(ReportingDate)\n);\nNewBatch\n| union FailedBatch\n| extend Month=format_datetime(ReportingDate, 'yyyy-MM')\n| summarize BeginDate=min(ReportingDate), EndDate=max(ReportingDate) by BillingID, Month\n| project BillingID, BeginDate=format_datetime(BeginDate, 'yyyy-MM-dd'), EndDate=format_datetime(EndDate, 'yyyy-MM-dd')\n| distinct BillingID, BeginDate, EndDate",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Date and BillingID",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Is Process Date Passed",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@variables('v_KQL')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": {
                                        "value": "ADFErrorLog",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Lookup Max Error TimeStamp",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "let _lastretry = toscalar(WaterMark | distinct BillingData_LastRetry);\nADFErrorLog\n| where ErrorTimestamp > _lastretry\n| where APIName  == 'Billing API - UsageByBillingID'\n| summarize MaxErrorTimeStamp = max(ErrorTimestamp)\n| project MaxErrorTimeStamp=iif(isnull(MaxErrorTimeStamp),_lastretry,MaxErrorTimeStamp)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get Temp Folder Stats",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "FolderValidation",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FilePath": {
                                        "value": "@{pipeline().parameters.p_containername}/@{variables('v_UsageTempFolderName')}",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists",
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "Clear Folder Contents",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get Temp Folder Stats",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@activity('Get Temp Folder Stats').output.exists",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Delete Folder",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "FolderValidation",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FilePath": {
                                                    "value": "@{pipeline().parameters.p_containername}/@{variables('v_UsageTempFolderName')}",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Split Downloaded Files",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Clean Up Usage Data Folders",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API - Split Files - Usage",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "container": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "sourcefilename": {
                                    "value": "@{variables('v_UsageTempFolderName')}/*",
                                    "type": "Expression"
                                },
                                "UsageFolderName": {
                                    "value": "@variables('v_UsageFolderName')",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "File Dates",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "For Each BillingID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "let ReportingDates = materialize(datatable (ReportingDates:dynamic) [dynamic(@{variables('v_ReportingDates')})] | mv-expand ReportingDates | extend ReportingDates=tostring(ReportingDates));\nReportingDates\n| extend ReportingDate=range(todatetime(split(ReportingDates, ',')[0]), todatetime(split(ReportingDates, ',')[1]), 1d)\n| mv-expand ReportingDate\n| project ReportingDate = format_datetime(todatetime(ReportingDate), 'yyyy-MM-dd')\n| distinct ReportingDate",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Clean Up Usage Data Folders",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "File Dates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('File Dates').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Delete Folder Contents",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "FolderValidation",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FilePath": {
                                                    "value": "@{pipeline().parameters.p_containername}/@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{variables('v_UsageFolderName')}",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_LookBackInDay": {
                        "type": "string",
                        "defaultValue": "3"
                    },
                    "p_BillingIds": {
                        "type": "array",
                        "defaultValue": [
                            "46132814"
                        ]
                    },
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BeginDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_EndDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_BatchType": {
                        "type": "string",
                        "defaultValue": "Daily"
                    }
                },
                "variables": {
                    "v_KQL": {
                        "type": "String"
                    },
                    "v_ReportingDates": {
                        "type": "Array"
                    },
                    "v_UsageTempFolderName": {
                        "type": "String",
                        "defaultValue": "UsageDataTemp"
                    },
                    "v_UsageFolderName": {
                        "type": "String",
                        "defaultValue": "UsageByBillingID"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-02-19T09:48:44Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pline VM Metrics Batch Load  v4')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetBearerToken",
                        "description": "Use this Web activity to get bearer token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Set List Variable",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{pipeline().parameters.ClientSecret}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEach Resource",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Set Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('Resource_List')",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 50,
                            "activities": [
                                {
                                    "name": "Execute Pipeline VMMetrics Read API",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pipeline VMMetrics Batch Read API CopyActivity v4",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Token": {
                                                "value": "@variables('Token')",
                                                "type": "Expression"
                                            },
                                            "resourceId": {
                                                "value": "@item()",
                                                "type": "Expression"
                                            },
                                            "VMMetricsDate": {
                                                "value": "@variables('VMMetricsDate')",
                                                "type": "Expression"
                                            },
                                            "dirname": {
                                                "value": "@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}/@{formatDateTime(variables('VMMetricsDate'), 'MM')}",
                                                "type": "Expression"
                                            },
                                            "filename": {
                                                "value": "@concat(split(item() , '/')[2], \n'_' ,\nsplit(item(), '/')[4], '_',\nsplit(item(), '/')[8], '.json')",
                                                "type": "Expression"
                                            },
                                            "subscriptionId": {
                                                "value": "@split(replace(item(), '/', '_'), '_')[2]",
                                                "type": "Expression"
                                            },
                                            "startofmonthDate": {
                                                "value": "@pipeline().parameters.startofmonthDate",
                                                "type": "Expression"
                                            },
                                            "endofmonthDate": {
                                                "value": "@pipeline().parameters.endofMonthDate",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set List Variable",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Lookup Config",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Resource_List",
                            "value": {
                                "value": "@split( json(string(activity('Lookup Config').output.value[0])).resourceId  ,',')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set Token",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "GetBearerToken",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Token",
                            "value": {
                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Lookup Config",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set VMMetricsDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@pipeline().parameters.VMMetricsConfigKQL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": true
                            },
                            "dataset": {
                                "referenceName": "adx_BillingConfig",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Re-Acquire Token",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "Set Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@bool(equals(variables('REST_API_ProcessStatus'),'Completed'))",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Wait 15 minutes",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 900
                                    }
                                },
                                {
                                    "name": "GetBearerTokenNew",
                                    "description": "Use this Web activity to get bearer token",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Wait 15 minutes",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/x-www-form-urlencoded"
                                        },
                                        "url": {
                                            "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{pipeline().parameters.ClientSecret}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Token New",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "GetBearerTokenNew",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Token",
                                        "value": {
                                            "value": "@concat('Bearer ',activity('GetBearerTokenNew').output.access_token)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "timeout": "7.00:00:00"
                        }
                    },
                    {
                        "name": "Set Process Status",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "ForEach Resource",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "REST_API_ProcessStatus",
                            "value": "Completed"
                        }
                    },
                    {
                        "name": "Set VMMetricsDate",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Execute API VM List",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "VMMetricsDate",
                            "value": {
                                "value": "@pipeline().parameters.startofmonthDate",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "If Virtual Machine List is not Empty",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "ForEach Resource",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater( length(variables('Resource_List') ), 0 )",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Flatten JSON and Convert to CSV",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pline Flatten VM Metrics JSON v4",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "source_dirname": {
                                                "value": "json/@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}/@{formatDateTime(variables('VMMetricsDate'), 'MM')}",
                                                "type": "Expression"
                                            },
                                            "sink_dirname": {
                                                "value": "csv/@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}/@{formatDateTime(variables('VMMetricsDate'), 'MM')}",
                                                "type": "Expression"
                                            },
                                            "sink_filename": {
                                                "value": "vmmetrics_@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}_@{formatDateTime(variables('VMMetricsDate'), 'MM')}.csv",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "CSV to ADX",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Flatten JSON and Convert to CSV",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pline VMMetrics ADLSG2 to ADX v4",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "p_StorageAccountContainer": "metricsdata",
                                            "p_StorageAccountDirectory": {
                                                "value": "csv/@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}/@{formatDateTime(variables('VMMetricsDate'), 'MM')}",
                                                "type": "Expression"
                                            },
                                            "p_VMMetricsDate": {
                                                "value": "@variables('VMMetricsDate')",
                                                "type": "Expression"
                                            },
                                            "p_Dest_Staging_TableName": "Staging_VMMetrics",
                                            "p_Dest_Production_TableName": "VMMetrics"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Execute API VM List",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pipeline API VMs List v4",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "ClientID": {
                        "type": "string",
                        "defaultValue": "aa5605bb-2877-483d-b005-e1439ee1f988"
                    },
                    "ClientSecret": {
                        "type": "string"
                    },
                    "tenant_id": {
                        "type": "string",
                        "defaultValue": "8a807b9b-02da-47f3-a903-791a42a2285c"
                    },
                    "startofmonthDate": {
                        "type": "string"
                    },
                    "endofMonthDate": {
                        "type": "string"
                    },
                    "VMMetricsConfigKQL": {
                        "type": "string",
                        "defaultValue": "let BillingData_vmlist = view() {BillingData | where billingDate  >= ago(90d) | where product startswith \"Virtual Machine\" | where consumedService == 'Microsoft.Compute' | distinct resourceId}; let API_vmlist = view() {APIVMList| project-rename resourceId=['id'] | distinct  resourceId };  union withsource= TableName BillingData_vmlist(), API_vmlist  | distinct  resourceId  | summarize resourceId=make_list(resourceId) | project  resourceId=strcat_array(todynamic(resourceId), \",\")"
                    }
                },
                "variables": {
                    "Resource_List": {
                        "type": "Array"
                    },
                    "Token": {
                        "type": "String"
                    },
                    "x-ms-ratelimit-remaining-subscription-reads": {
                        "type": "String"
                    },
                    "REST_API_ProcessStatus": {
                        "type": "String",
                        "defaultValue": "Running"
                    },
                    "VMMetricsDate": {
                        "type": "String"
                    },
                    "resourceId": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "VM Metrics"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:34Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pline VM Metrics Sub Main  v4 modified')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetBearerToken",
                        "description": "Use this Web activity to get bearer token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Set List Variable",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{pipeline().parameters.ClientSecret}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEach Resource",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Set Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('Resource_List')",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 50,
                            "activities": [
                                {
                                    "name": "Execute Pipeline VMMetrics Read API",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pipeline VMMetrics Read API CopyActivity v4",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Token": {
                                                "value": "@variables('Token')",
                                                "type": "Expression"
                                            },
                                            "resourceId": {
                                                "value": "@item()",
                                                "type": "Expression"
                                            },
                                            "VMMetricsDate": {
                                                "value": "@pipeline().parameters.VMMetricsDate",
                                                "type": "Expression"
                                            },
                                            "dirname": {
                                                "value": "@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}/@{formatDateTime(variables('VMMetricsDate'), 'MM')}/@{formatDateTime(variables('VMMetricsDate'), 'dd')}",
                                                "type": "Expression"
                                            },
                                            "filename": {
                                                "value": "@concat(split(item() , '/')[2], \n'_' ,\nsplit(item(), '/')[4], '_',\nsplit(item(), '/')[8], '.json')",
                                                "type": "Expression"
                                            },
                                            "subscriptionId": {
                                                "value": "@split(replace(item(), '/', '_'), '_')[2]",
                                                "type": "Expression"
                                            },
                                            "startofmonthDate": {
                                                "value": "@variables('VMMetricsDate')",
                                                "type": "Expression"
                                            },
                                            "endofmonthDate": {
                                                "value": "@variables('VMMetricsDate')",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set List Variable",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Lookup Config",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Resource_List",
                            "value": {
                                "value": "@split( json(string(activity('Lookup Config').output.value[0])).resourceId  ,',')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set Token",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "GetBearerToken",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Token",
                            "value": {
                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Lookup Config",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set VMMetricsDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@pipeline().parameters.VMMetricsConfigKQL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": true
                            },
                            "dataset": {
                                "referenceName": "adx_BillingConfig",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Re-Acquire Token",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "Set Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@bool(equals(variables('REST_API_ProcessStatus'),'Completed'))",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Wait 15 minutes",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 900
                                    }
                                },
                                {
                                    "name": "GetBearerTokenNew",
                                    "description": "Use this Web activity to get bearer token",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Wait 15 minutes",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/x-www-form-urlencoded"
                                        },
                                        "url": {
                                            "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{pipeline().parameters.ClientSecret}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Token New",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "GetBearerTokenNew",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Token",
                                        "value": {
                                            "value": "@concat('Bearer ',activity('GetBearerTokenNew').output.access_token)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "timeout": "7.00:00:00"
                        }
                    },
                    {
                        "name": "Set Process Status",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "ForEach Resource",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "REST_API_ProcessStatus",
                            "value": "Completed"
                        }
                    },
                    {
                        "name": "Set VMMetricsDate",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "VMMetricsDate",
                            "value": {
                                "value": "@pipeline().parameters.VMMetricsDate",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "If Virtual Machine List is not Empty",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "ForEach Resource",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater( length(variables('Resource_List') ), 0 )",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Flatten JSON and Convert to CSV",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pline Flatten VM Metrics JSON v4",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "source_dirname": {
                                                "value": "json/@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}/@{formatDateTime(variables('VMMetricsDate'), 'MM')}/@{formatDateTime(variables('VMMetricsDate'), 'dd')}",
                                                "type": "Expression"
                                            },
                                            "sink_dirname": {
                                                "value": "csv/@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}/@{formatDateTime(variables('VMMetricsDate'), 'MM')}/@{formatDateTime(variables('VMMetricsDate'), 'dd')}",
                                                "type": "Expression"
                                            },
                                            "sink_filename": {
                                                "value": "vmmetrics_@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}_@{formatDateTime(variables('VMMetricsDate'), 'MM')}_@{formatDateTime(variables('VMMetricsDate'), 'dd')}.csv",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "CSV to ADX",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Flatten JSON and Convert to CSV",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pline VMMetrics ADLSG2 to ADX v4",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "p_StorageAccountContainer": "metricsdata",
                                            "p_StorageAccountDirectory": {
                                                "value": "csv/@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}/@{formatDateTime(variables('VMMetricsDate'), 'MM')}/@{formatDateTime(variables('VMMetricsDate'), 'dd')}",
                                                "type": "Expression"
                                            },
                                            "p_VMMetricsDate": {
                                                "value": "@variables('VMMetricsDate')",
                                                "type": "Expression"
                                            },
                                            "p_Dest_Staging_TableName": "Staging_VMMetrics",
                                            "p_Dest_Production_TableName": "VMMetrics"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "ClientID": {
                        "type": "string",
                        "defaultValue": "aa5605bb-2877-483d-b005-e1439ee1f988"
                    },
                    "ClientSecret": {
                        "type": "string"
                    },
                    "tenant_id": {
                        "type": "string",
                        "defaultValue": "8a807b9b-02da-47f3-a903-791a42a2285c"
                    },
                    "VMMetricsDate": {
                        "type": "string"
                    },
                    "VMMetricsConfigKQL": {
                        "type": "string",
                        "defaultValue": "let BillingData_vmlist = view() {BillingData | where billingDate  >= ago(90d) | where product startswith \"Virtual Machine\" | where consumedService == 'Microsoft.Compute' | distinct resourceId}; let API_vmlist = view() {APIVMList| project-rename resourceId=['id'] | distinct  resourceId }; union withsource= TableName BillingData_vmlist(), API_vmlist  | distinct  resourceId | summarize resourceId=make_list(resourceId) | project  resourceId=strcat_array(todynamic(resourceId), \",\")"
                    }
                },
                "variables": {
                    "Resource_List": {
                        "type": "Array"
                    },
                    "Token": {
                        "type": "String"
                    },
                    "x-ms-ratelimit-remaining-subscription-reads": {
                        "type": "String"
                    },
                    "REST_API_ProcessStatus": {
                        "type": "String",
                        "defaultValue": "Running"
                    },
                    "VMMetricsDate": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "VM Metrics"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:34Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pline VM Metrics Sub Main  v4')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetBearerToken",
                        "description": "Use this Web activity to get bearer token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Set List Variable",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{pipeline().parameters.ClientSecret}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEach Resource",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Set Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('Resource_List')",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 50,
                            "activities": [
                                {
                                    "name": "Execute Pipeline VMMetrics Read API",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pipeline VMMetrics Read API CopyActivity v4",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Token": {
                                                "value": "@variables('Token')",
                                                "type": "Expression"
                                            },
                                            "resourceId": {
                                                "value": "@item()",
                                                "type": "Expression"
                                            },
                                            "VMMetricsDate": {
                                                "value": "@pipeline().parameters.VMMetricsDate",
                                                "type": "Expression"
                                            },
                                            "dirname": {
                                                "value": "@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}/@{formatDateTime(variables('VMMetricsDate'), 'MM')}/@{formatDateTime(variables('VMMetricsDate'), 'dd')}",
                                                "type": "Expression"
                                            },
                                            "filename": {
                                                "value": "@concat(split(item() , '/')[2], \n'_' ,\nsplit(item(), '/')[4], '_',\nsplit(item(), '/')[8], '.json')",
                                                "type": "Expression"
                                            },
                                            "subscriptionId": {
                                                "value": "@split(replace(item(), '/', '_'), '_')[2]",
                                                "type": "Expression"
                                            },
                                            "startofmonthDate": {
                                                "value": "@variables('VMMetricsDate')",
                                                "type": "Expression"
                                            },
                                            "endofmonthDate": {
                                                "value": "@variables('VMMetricsDate')",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set List Variable",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Lookup Config",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Resource_List",
                            "value": {
                                "value": "@split( json(string(activity('Lookup Config').output.value[0])).resourceId  ,',')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set Token",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "GetBearerToken",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Token",
                            "value": {
                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Lookup Config",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set VMMetricsDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@pipeline().parameters.VMMetricsConfigKQL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": true
                            },
                            "dataset": {
                                "referenceName": "adx_BillingConfig",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Re-Acquire Token",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "Set Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@bool(equals(variables('REST_API_ProcessStatus'),'Completed'))",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Wait 15 minutes",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 900
                                    }
                                },
                                {
                                    "name": "GetBearerTokenNew",
                                    "description": "Use this Web activity to get bearer token",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Wait 15 minutes",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/x-www-form-urlencoded"
                                        },
                                        "url": {
                                            "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{pipeline().parameters.ClientSecret}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Token New",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "GetBearerTokenNew",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Token",
                                        "value": {
                                            "value": "@concat('Bearer ',activity('GetBearerTokenNew').output.access_token)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "timeout": "7.00:00:00"
                        }
                    },
                    {
                        "name": "Set Process Status",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "ForEach Resource",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "REST_API_ProcessStatus",
                            "value": "Completed"
                        }
                    },
                    {
                        "name": "Set VMMetricsDate",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Execute API VM List",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "VMMetricsDate",
                            "value": {
                                "value": "@pipeline().parameters.VMMetricsDate",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "If Virtual Machine List is not Empty",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "ForEach Resource",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater( length(variables('Resource_List') ), 0 )",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Flatten JSON and Convert to CSV",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pline Flatten VM Metrics JSON v4",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "source_dirname": {
                                                "value": "json/@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}/@{formatDateTime(variables('VMMetricsDate'), 'MM')}/@{formatDateTime(variables('VMMetricsDate'), 'dd')}",
                                                "type": "Expression"
                                            },
                                            "sink_dirname": {
                                                "value": "csv/@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}/@{formatDateTime(variables('VMMetricsDate'), 'MM')}/@{formatDateTime(variables('VMMetricsDate'), 'dd')}",
                                                "type": "Expression"
                                            },
                                            "sink_filename": {
                                                "value": "vmmetrics_@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}_@{formatDateTime(variables('VMMetricsDate'), 'MM')}_@{formatDateTime(variables('VMMetricsDate'), 'dd')}.csv",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "CSV to ADX",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Flatten JSON and Convert to CSV",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pline VMMetrics ADLSG2 to ADX v4",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "p_StorageAccountContainer": "metricsdata",
                                            "p_StorageAccountDirectory": {
                                                "value": "csv/@{formatDateTime(variables('VMMetricsDate'), 'yyyy')}/@{formatDateTime(variables('VMMetricsDate'), 'MM')}/@{formatDateTime(variables('VMMetricsDate'), 'dd')}",
                                                "type": "Expression"
                                            },
                                            "p_VMMetricsDate": {
                                                "value": "@variables('VMMetricsDate')",
                                                "type": "Expression"
                                            },
                                            "p_Dest_Staging_TableName": "Staging_VMMetrics",
                                            "p_Dest_Production_TableName": "VMMetrics"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Execute API VM List",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pipeline API VMs List v4",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "ClientID": {
                        "type": "string",
                        "defaultValue": "aa5605bb-2877-483d-b005-e1439ee1f988"
                    },
                    "ClientSecret": {
                        "type": "string"
                    },
                    "tenant_id": {
                        "type": "string",
                        "defaultValue": "8a807b9b-02da-47f3-a903-791a42a2285c"
                    },
                    "VMMetricsDate": {
                        "type": "string"
                    },
                    "VMMetricsConfigKQL": {
                        "type": "string",
                        "defaultValue": "let BillingData_vmlist = view() {BillingData | where billingDate  >= ago(90d) | where product startswith \"Virtual Machine\" | where consumedService == 'Microsoft.Compute' | distinct resourceId}; let API_vmlist = view() {APIVMList| project-rename resourceId=['id'] | distinct  resourceId }; union withsource= TableName BillingData_vmlist(), API_vmlist  | distinct  resourceId | summarize resourceId=make_list(resourceId) | project  resourceId=strcat_array(todynamic(resourceId), \",\")"
                    }
                },
                "variables": {
                    "Resource_List": {
                        "type": "Array"
                    },
                    "Token": {
                        "type": "String"
                    },
                    "x-ms-ratelimit-remaining-subscription-reads": {
                        "type": "String"
                    },
                    "REST_API_ProcessStatus": {
                        "type": "String",
                        "defaultValue": "Running"
                    },
                    "VMMetricsDate": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "VM Metrics"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:34Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Forecast Initial Load_1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Truncate Forecast_History",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Prepare Dates for Data Copy into Prod",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace Forecast_History <| Forecast_History | take 0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Prepare Dates for Data Copy into Prod",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "range ReportingDate from datetime(@{pipeline().parameters.BeginDate}) to datetime(@{pipeline().parameters.EndDate}) step 1d | extend ReportingDate = format_datetime(ReportingDate,'yyyy-MM-dd')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Execute Pipeline1",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Truncate Forecast_History",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Forecast Initial Load",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_containername": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "p_BillingDate": {
                                    "value": "@activity('Prepare Dates for Data Copy into Prod').output.value",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "BeginDate": {
                        "type": "string"
                    },
                    "EndDate": {
                        "type": "string"
                    }
                },
                "variables": {
                    "CSVPath": {
                        "type": "String",
                        "defaultValue": "Csv"
                    },
                    "SubFolder": {
                        "type": "String",
                        "defaultValue": "Forecast"
                    }
                },
                "folder": {
                    "name": "Initial Setup"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:34Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Forecast Initial Load')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Setup DataLake and ADX')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Create Tables",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".create tables\nApplicationBudget(SubscriptionGuid:string,SubscriptionName:string,ResourceGroupFQN:string,AppCode:string,AppName:string,BillingMonth:string,BudgetAMT:real,ParentHostingSubHostingID:string),\nApplicationLKP(AppID:string,ApplicationName:string,AppAbreviation:string,CostCenter:string,IsApplication:bool,AvailableForCostReporting:bool,RTO:int,RPO:int,Revenue:real,ITAppOWner:string,HostedInAzure:bool,AppLOB:string),\nHostingLKP(ParentHostingSubHostingID:real,ParentHostingID:long,ParentHostingServiceName:string,SubHostingServiceID:long,SubHostingServiceName:string),\nLOBBudget(LineOfBusiness:string,YearMonth:string,Budget:long),\nStaging_ApplicationBudget(SubscriptionGuid:string,SubscriptionName:string,ResourceGroupFQN:string,AppCode:string,AppName:string,BillingMonth:string,BudgetAMT:real,Year:string,Month:string,ParentHostingSubHostingID:string),\nStaging_ApplicationLKP(AppID:string,ApplicationName:string,AppAbreviation:string,CostCenter:string,IsApplication:string,AvailableForCostReporting:string,RTO:string,RPO:string,Revenue:real,ITAppOWner:string,HostedInAzure:string,AppLOB:string),\nStaging_HostingLKP(ParentHostingSubHostingID:string,ParentHostingID:string,ParentHostingServiceName:string,SubHostingServiceID:string,SubHostingServiceName:string),\nStaging_ReservationSummary(['id']:string,name:string,['type']:string,reservationOrderId:string,reservationId:string,skuName:string,['kind']:string,reservedHours:real,usageDate:string,usedHours:real,minUtilizationPercentage:real,avgUtilizationPercentage:real,maxUtilizationPercentage:real,purchasedQuantity:real,remainingQuantity:real,totalReservedQuantity:real,usedQuantity:real,utilizedPercentage:real),\nReservationSummary(['id']:string,name:string,['type']:string,reservationOrderId:string,reservationId:string,skuName:string,['kind']:string,reservedHours:real,usageDate:datetime,UsageMonth:string,usedHours:real,minUtilizationPercentage:real,avgUtilizationPercentage:real,maxUtilizationPercentage:real,purchasedQuantity:real,remainingQuantity:real,totalReservedQuantity:real,usedQuantity:real,utilizedPercentage:real),\nStaging_BillingSummary(name:string,value:real,['id']:string,billingPeriodId:string,currencyCode:string,beginningBalance:real,endingBalance:real,newPurchases:real,adjustments:real,utilized:real,serviceOverage:real,chargesBilledSeparately:real,totalOverage:real,totalUsage:real,azureMarketplaceServiceCharges:real,billingPeriodStart:datetime,billingPeriodEnd:datetime,balanceDeduct:real),\nBillingSummary(billingId:string,billingPeriod:string,currencyCode:string,beginningBalance:real,endingBalance:real,newPurchases:real,adjustments:real,utilized:real,serviceOverage:real,chargesBilledSeparately:real,totalOverage:real,totalUsage:real,azureMarketplaceServiceCharges:real,adjustmentType:string,adjustmentvalue:real,billingPeriodStart:datetime,billingPeriodEnd:datetime,balanceDeduct:real),\nStaging_FlexGroup(InstanceSizeFlexibilityGroup:string,ArmSkuName:string,Ratio:real),\nFlexGroup(InstanceSizeFlexibilityGroup:string,ArmSkuName:string,Ratio:real),\nStaging_ReservationDescription(['id']:string,name:string,['type']:string,eventDate:string,reservationOrderId:string,description:string,eventType:string,quantity:real,amount:real,currency:string,reservationorderName:string,purchasingEnrollment:string,armSkuName:string,term:string,region:string,purchasingSubscriptionGuid:string,purchasingSubscriptionName:string,accountName:string,accountOwnerEmail:string,departmentName:string,costCenter:string,currentEnrollment:string,billingFrequency:string),\nReservationDescription(['id']:string,name:string,['type']:string,eventDate:datetime,reservationOrderId:string,description:string,eventType:string,quantity:real,amount:real,currency:string,reservationorderName:string,purchasingEnrollment:string,armSkuName:string,term:string,region:string,purchasingSubscriptionGuid:string,purchasingSubscriptionName:string,accountName:string,accountOwnerEmail:string,departmentName:string,costCenter:string,currentEnrollment:string,billingFrequency:string),\nusageDataLog(billingAccountId:string,subscriptionId:string,subscriptionName:string,billingDate:string,frequency:string,logdate:datetime,usageCost:real),\nStaging_BillingData(['kind']:string,['id']:string,name:string,['type']:string,['tags']:string,billingAccountId:string,billingAccountName:string,billingPeriodStartDate:string,billingPeriodEndDate:string,billingProfileId:string,billingProfileName:string,accountOwnerId:string,accountName:string,subscriptionId:string,subscriptionName:string,['date']:string,product:string,partNumber:string,meterId:string,quantity:real,effectivePrice:real,cost:real,unitPrice:real,billingCurrency:string,resourceLocation:string,consumedService:string,resourceId:string,resourceName:string,serviceInfo2:string,invoiceSection:string,resourceGroup:string,offerId:string,isAzureCreditEligible:string,publisherType:string,chargeType:string,frequency:string,meterDetails:string),\nADFErrorLog(APIName:string,ReportingDate:string,ProcessDateTime:datetime,ProcessName:string,PipelineName:string,PipelineRunID:string,ActivityType:string,ActivityName:string,ErrorCode:string,ErrorMessage:string,ErrorCategory:string,ErrorResourceID:string,ErrorSubscription:string,ErrorTimestamp:datetime,BatchMode:string),\nProductDetail(Product:string,partNumber:string,NonReserved:bool,MeterCategory:string,FNFCategory:string,CostType:string,ProdID:long),\nBillingData(['kind']:string,['id']:string,name:string,['type']:string,['tags']:string,billingAccountId:string,billingAccountName:string,billingPeriodStartDate:string,billingPeriodEndDate:string,billingProfileId:string,billingProfileName:string,accountOwnerId:string,accountName:string,subscriptionId:string,subscriptionName:string,['date']:string,product:string,partNumber:string,meterId:string,quantity:real,effectivePrice:real,cost:real,unitPrice:real,billingCurrency:string,resourceLocation:string,consumedService:string,resourceId:string,resourceName:string,serviceInfo2:string,invoiceSection:string,resourceGroup:string,offerId:string,isAzureCreditEligible:string,publisherType:string,chargeType:string,frequency:string,meterDetails:string,RGFQN:string,billingDate:datetime,billingMonth:string),\nStaging_MarketPlace(usageStartDate:string,usageEndDate:string,subscriptionGuid:string,resourceGroup:string,instanceId:string,offerName:string,orderNumber:string,publisherName:string,planName:string,consumedQuantity:real,resourceRate:real,extendedCost:real,isRecurringCharge:string),\nMarketPlace(usageStartDate:string,usageEndDate:string,subscriptionGuid:string,resourceGroup:string,instanceId:string,offerName:string,orderNumber:string,publisherName:string,planName:string,consumedQuantity:real,resourceRate:real,extendedCost:real,isRecurringCharge:string,billingMonth:string),\nBilling_PBI(Region:string,BillingDate:datetime,PK_Subscription:string,resourceName:string,publisherType:string,chargeType:string,reservationId:string,ProdID:long,TotalCost:real,Quantity:real,effectivePrice:real),\nStaging_Forecast(subscriptionId:string,resourceGroup:string,cost:string,usageDate:string),\nWaterMark(BillingData_LastRetry:datetime,Reservation_LastRetry:datetime,Credit_LastRetry:datetime,ReservationDesc_LastRetry:datetime,MarketPlace_LastRetry:datetime,ForeCast_LastRetry:datetime),\nForecast_History(subscriptionId:string,resourceGroup:string,cost:real,usageDate:datetime,LogDate:datetime),\nStaging_LOB(ID:string,ShortName:string,FullName:string),\nLOB(ID:string,ShortName:string,FullName:string),\nStaging_LOBBudget(LineOfBusiness:string,YearMonth:string,Budget:long),\nBillingConfig(ResourceGroupFQN:string,SubscriptionName:string,SubscriptionGuid:guid,ResourceGroupName:string,HostingService:string,AppCode1:string,AppName:string,CostCenter:string,LineOfBusiness:string,MigrationStatus:string,CoreSubscription:string,PrevFISSpend:string,IsApplication:bool,FinanceLOB:string),\nStaging_BillingConfig(ResourceGroupFQN:string,SubscriptionName:string,SubscriptionGuid:guid,ResourceGroupName:string,HostingService:string,AppCode1:string,AppName:string,CostCenter:string,LineOfBusiness:string,MigrationStatus:string,CoreSubscription:string,PrevFISSpend:string,IsApplication:bool,FinanceLOB:string),\nProductMeterCategory(Product:string,FNFCategory:string,CCOPApproved:bool,CostType:string,IsPrePay:bool),\nStaging_ProductMeterCategory(Product:string,FNFCategory:string,CCOPApproved:string,CostType:string,IsPrePay:string),\nBillingConfig_Extended(Environment:string,AppCode:string,AppName:string,LineOfBusiness:string,IsApplication:bool,PK_Subscription:string,resourceGroup:string,subscriptionId:string,subscriptionName:string,billingAccountId:string,billingAccountName:string,accountName:string,accountOwnerId:string,Source:string,LOB_ShortName:string,financelob:string)",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Copy billingdata From Dev",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "BillingData",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SourceContainer": {
                                    "value": "@pipeline().parameters.SourceContainer",
                                    "type": "Expression"
                                },
                                "DestinationContainer": {
                                    "value": "@pipeline().parameters.DestinationContainer",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Prepare Dates for Data Copy into Prod",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Load Reference Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "range ReportingDate from datetime(@{pipeline().parameters.BeginDate}) to datetime(@{pipeline().parameters.EndDate}) step 1d | extend ReportingDate = format_datetime(ReportingDate,'yyyy-MM-dd')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Insert Usage Data",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Prepare Dates for Data Copy into Prod",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 3 - ADX Stage to Prod - Usage",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_BillingDate": {
                                    "value": "@activity('Prepare Dates for Data Copy into Prod').output.value",
                                    "type": "Expression"
                                },
                                "p_SubDirectory": "UsageByBillingID",
                                "p_containername": "azure-cost-metric-data",
                                "p_BatchType": "Batch"
                            }
                        }
                    },
                    {
                        "name": "Insert Reservation usage",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Insert Usage Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 2 - ADX Stage to Prod - Reservation Usage",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_BillingDate": {
                                    "value": "@activity('Prepare Dates for Data Copy into Prod').output.value",
                                    "type": "Expression"
                                },
                                "p_SubDirectory": "Reservation",
                                "p_containername": "azure-cost-metric-data",
                                "p_BatchType": "Batch"
                            }
                        }
                    },
                    {
                        "name": "Insert Reservation Description",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Convert Dates To Array",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Insert Forecast",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 2 - ADX Stage to Prod - ReservationDesc",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_StorageAccountContainer": "azure-cost-metric-data",
                                "p_BillingDate": {
                                    "value": "@variables('LastDateOfMonth')",
                                    "type": "Expression"
                                },
                                "p_SubDirectory": "ReservationOrdersDesc"
                            }
                        }
                    },
                    {
                        "name": "Prepare Monthly Dates for Data Copy",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Wait For Previous Activity",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "range ReportingDate from datetime(@{pipeline().parameters.BeginDate}) to datetime(@{pipeline().parameters.EndDate}) step 1d\n| extend ReportingDate = format_datetime(endofmonth(ReportingDate),'yyyy-MM-dd')\n| distinct ReportingDate",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Convert Dates To Array",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Prepare Monthly Dates for Data Copy",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Prepare Monthly Dates for Data Copy').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Append variable1",
                                    "type": "AppendVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "LastDateOfMonth",
                                        "value": {
                                            "value": "@item().ReportingDate",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Insert Billing Summary",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Insert Reservation Description",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 2 - ADX Stage to Prod - BillingSummary",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_StorageAccountContainer": "azure-cost-metric-data",
                                "p_BillingDate": {
                                    "value": "@variables('LastDateOfMonth')",
                                    "type": "Expression"
                                },
                                "p_SubDirectory": "Balancesummary"
                            }
                        }
                    },
                    {
                        "name": "Refersh PBI Tables",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Insert MarketPlace",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "RefershPBITable",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Reference Data",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Wait For Previous Activity",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "BillingData LoadReferenceFiles",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Load Seed Data",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Create Tables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace WaterMark <| \nprint BillingData_LastRetry=todatetime('1900-01-01 00:00:00'),Reservation_LastRetry=todatetime('1900-01-01 00:00:00'),Credit_LastRetry=todatetime('1900-01-01 00:00:00'),ReservationDesc_LastRetry=todatetime('1900-01-01 00:00:00'),MarketPlace_LastRetry=todatetime('1900-01-01 00:00:00'),ForeCast_LastRetry=todatetime('1900-01-01 00:00:00')",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Insert MarketPlace",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Insert Billing Summary",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 2 - ADX Stage to Prod - MarketPlace",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_StorageAccountContainer": "azure-cost-metric-data",
                                "p_BillingDate": {
                                    "value": "@variables('LastDateOfMonth')",
                                    "type": "Expression"
                                },
                                "p_SubDirectory": "MarketPlace"
                            }
                        }
                    },
                    {
                        "name": "Insert Forecast",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Insert Reservation usage",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Forecast Initial Load",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_containername": "azure-cost-metric-data",
                                "p_BillingDate": {
                                    "value": "@activity('Prepare Dates for Data Copy into Prod').output.value",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Wait For Previous Activity",
                        "type": "Wait",
                        "dependsOn": [
                            {
                                "activity": "Copy billingdata From Dev",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Load Seed Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": 10
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "BeginDate": {
                        "type": "string",
                        "defaultValue": "2020-01-01"
                    },
                    "EndDate": {
                        "type": "string",
                        "defaultValue": "2022-01-31"
                    },
                    "SourceContainer": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "DestinationContainer": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    }
                },
                "variables": {
                    "LastDateOfMonth": {
                        "type": "Array"
                    }
                },
                "folder": {
                    "name": "Initial Setup"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:34Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Forecast Initial Load')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Reference Data",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "BillingData LoadReferenceFiles",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Reservation Usage",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Usage Detail",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 1 - API Call - Reservation Usage",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_LookBackInDay": {
                                    "value": "@pipeline().parameters.p_LookBackInDay",
                                    "type": "Expression"
                                },
                                "p_BillingIds": {
                                    "value": "@variables('v_BillingIds')",
                                    "type": "Expression"
                                },
                                "p_containername": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "p_BeginDate": {
                                    "value": "@pipeline().parameters.p_BeginDate",
                                    "type": "Expression"
                                },
                                "p_EndDate": {
                                    "value": "@pipeline().parameters.p_EndDate",
                                    "type": "Expression"
                                },
                                "p_BatchType": {
                                    "value": "@pipeline().parameters.p_BatchType",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Usage Detail",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Load Reference Data",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "Parse p_BillingIds",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 1 - Usage Orchestrator",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_LookBackInDay": {
                                    "value": "@pipeline().parameters.p_LookBackInDay",
                                    "type": "Expression"
                                },
                                "p_BillingIds": {
                                    "value": "@variables('v_BillingIds')",
                                    "type": "Expression"
                                },
                                "p_containername": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "p_BeginDate": {
                                    "value": "@pipeline().parameters.p_BeginDate",
                                    "type": "Expression"
                                },
                                "p_EndDate": {
                                    "value": "@pipeline().parameters.p_EndDate",
                                    "type": "Expression"
                                },
                                "p_BatchType": {
                                    "value": "@pipeline().parameters.p_BatchType",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Refresh PBI Schema",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ReservationOrders",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "RefershPBITable",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Billing Summary",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Reservation Description",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 1 - API Call - BillingSummary",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_LookBackInDay": {
                                    "value": "@pipeline().parameters.p_LookBackInDay",
                                    "type": "Expression"
                                },
                                "p_BillingIds": {
                                    "value": "@pipeline().parameters.p_BillingIds",
                                    "type": "Expression"
                                },
                                "p_containername": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "p_BeginDate": {
                                    "value": "@pipeline().parameters.p_BeginDate",
                                    "type": "Expression"
                                },
                                "p_EndDate": {
                                    "value": "@pipeline().parameters.p_EndDate",
                                    "type": "Expression"
                                },
                                "p_BatchType": {
                                    "value": "@pipeline().parameters.p_BatchType",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Reservation Description",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Reservation Usage",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 1 - API Call - ReservationDescs",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_LookBackInDay": {
                                    "value": "@pipeline().parameters.p_LookBackInDay",
                                    "type": "Expression"
                                },
                                "p_BillingIds": {
                                    "value": "@variables('v_BillingIds')",
                                    "type": "Expression"
                                },
                                "p_containername": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "p_BeginDate": {
                                    "value": "@pipeline().parameters.p_BeginDate",
                                    "type": "Expression"
                                },
                                "p_EndDate": {
                                    "value": "@pipeline().parameters.p_EndDate",
                                    "type": "Expression"
                                },
                                "p_BatchType": {
                                    "value": "@pipeline().parameters.p_BatchType",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Parse p_BillingIds",
                        "type": "ForEach",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.p_BillingIds",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Append v_BillingIds",
                                    "type": "AppendVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "v_BillingIds",
                                        "value": {
                                            "value": "@item().BillingID",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "MarketPlace",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Billing Summary",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 1 - API Call - MarketPlace",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_LookBackInDay": {
                                    "value": "@pipeline().parameters.p_LookBackInDay",
                                    "type": "Expression"
                                },
                                "p_BillingIds": {
                                    "value": "@pipeline().parameters.p_BillingIds",
                                    "type": "Expression"
                                },
                                "p_containername": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "p_BeginDate": {
                                    "value": "@pipeline().parameters.p_BeginDate",
                                    "type": "Expression"
                                },
                                "p_EndDate": {
                                    "value": "@pipeline().parameters.p_EndDate",
                                    "type": "Expression"
                                },
                                "p_BatchType": {
                                    "value": "@pipeline().parameters.p_BatchType",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Forecast",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "MarketPlace",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 1 - API Call - Forecast",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_ForecastMonths": {
                                    "value": "@pipeline().parameters.p_ForecastMonths",
                                    "type": "Expression"
                                },
                                "p_containername": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ReservationOrders",
                        "type": "ExecutePipeline",
                        "state": "Inactive",
                        "onInactiveMarkAs": "Succeeded",
                        "dependsOn": [
                            {
                                "activity": "Forecast",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Billing API Sub 1 - API Call - ReservationOrders",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "p_LookBackInDay": {
                                    "value": "@pipeline().parameters.p_LookBackInDay",
                                    "type": "Expression"
                                },
                                "p_BillingIds": {
                                    "value": "@variables('v_BillingIds')",
                                    "type": "Expression"
                                },
                                "p_containername": {
                                    "value": "@pipeline().parameters.p_containername",
                                    "type": "Expression"
                                },
                                "p_BeginDate": {
                                    "value": "@pipeline().parameters.p_BeginDate",
                                    "type": "Expression"
                                },
                                "p_EndDate": {
                                    "value": "@pipeline().parameters.p_EndDate",
                                    "type": "Expression"
                                },
                                "p_BatchType": {
                                    "value": "@pipeline().parameters.p_BatchType",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_LookBackInDay": {
                        "type": "string",
                        "defaultValue": "3"
                    },
                    "p_BillingIds": {
                        "type": "array",
                        "defaultValue": [
                            {
                                "BillingID": "46132814",
                                "KeyVaultURLForAPIKey": "https://kv-acrp-dev.vault.azure.net/secrets/APIKey-46132814/997864aa1b904061bd8a229e52b56ea4"
                            }
                        ]
                    },
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BeginDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_EndDate": {
                        "type": "string",
                        "defaultValue": "NA"
                    },
                    "p_BatchType": {
                        "type": "string",
                        "defaultValue": "Daily"
                    },
                    "p_ForecastMonths": {
                        "type": "string",
                        "defaultValue": "3"
                    }
                },
                "variables": {
                    "v_BillingIds": {
                        "type": "Array"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-02-21T17:32:53Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Billing API Sub 1 - Usage Orchestrator')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pline re-run failed activities')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "BackDaysArray",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Set Total Back Days",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "BackDaysArray",
                            "value": {
                                "value": "@range(1, int(variables('TotalBackDays')))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEach Process Date",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "BackDaysArray",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetSPNSecret",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('BackDaysArray')",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Set ReportingDate",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ReportingDate",
                                        "value": {
                                            "value": "@adddays(utcnow(), mul(item(),-1), 'yyyy-MM-dd')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Execute VM Metrics API",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Set ReportingDate",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pline VM Metrics Sub Main  v4",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "ClientSecret": {
                                                "value": "@activity('GetSPNSecret').output.value",
                                                "type": "Expression"
                                            },
                                            "VMMetricsDate": {
                                                "value": "@variables('ReportingDate')",
                                                "type": "Expression"
                                            },
                                            "VMMetricsConfigKQL": {
                                                "value": "let _ProcessDate = todatetime('@{variables('ReportingDate')}');\nADFErrorLog\n| where todatetime(ReportingDate) == _ProcessDate\n| where APIName  == 'VM Metrics API'\n| where ErrorMessage !contains 'NotFound'\n| where toupper(ErrorResourceID) !in ( (            \n            VMMetrics| where todatetime(metricsDate) == _ProcessDate\n                     | extend resourceId= strcat( RGFQN ,'/providers/Microsoft.Compute/virtualMachines/', virtualMachineName) \n                     | distinct toupper(resourceId)\n        ))\n| project-rename resourceId=ErrorResourceID\n| distinct  resourceId\n| summarize resourceId=make_list(resourceId)\n| project  resourceId=strcat_array(todynamic(resourceId), \",\")",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set Total Back Days",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "TotalBackDays",
                            "value": {
                                "value": "@pipeline().parameters.p_LookInBackDays",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "GetSPNSecret",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@concat(pipeline().parameters.p_SPNSecretURL,'?api-version=7.0')",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_LookInBackDays": {
                        "type": "string",
                        "defaultValue": "3"
                    },
                    "p_SPNSecretURL": {
                        "type": "string",
                        "defaultValue": "https://kv-ccop-dv.vault.azure.net/secrets/CostMGMT-SPN-Secret/eafafff824ca4d8c8a8c604579b70ed1"
                    }
                },
                "variables": {
                    "TotalBackDays": {
                        "type": "String",
                        "defaultValue": "3"
                    },
                    "BackDaysArray": {
                        "type": "Array"
                    },
                    "ReportingDate": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "VM Metrics"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:35Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pline VM Metrics Sub Main  v4')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pline Main')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Execute VM Metrics API",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "If custom ProcessDate is provided",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetSPNSecret",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pline VM Metrics Sub Main  v4",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ClientSecret": {
                                    "value": "@activity('GetSPNSecret').output.value",
                                    "type": "Expression"
                                },
                                "VMMetricsDate": {
                                    "value": "@variables('ProcessDate')",
                                    "type": "Expression"
                                },
                                "VMMetricsConfigKQL": {
                                    "value": "let BillingData_vmlist = view() {BillingData | where billingDate  == todatetime('@{pipeline().parameters.ProcessDate}') | where product startswith \"Virtual Machine\" | where consumedService == 'Microsoft.Compute' | distinct resourceId}; let API_vmlist = view() {APIVMList| project-rename resourceId=['id'] | distinct  resourceId }; \nunion withsource= TableName BillingData_vmlist(), API_vmlist \n| distinct  resourceId\n| summarize resourceId=make_list(resourceId)\n| project  resourceId=strcat_array(todynamic(resourceId), \",\")",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "If custom ProcessDate is provided",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.ProcessDate, 'Yesterday')",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Set Custom Process Date",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ProcessDate",
                                        "value": {
                                            "value": "@pipeline().parameters.ProcessDate",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Set Default Process Date",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ProcessDate",
                                        "value": {
                                            "value": "@adddays(utcnow(),-1, 'yyyy-MM-dd') ",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "GetSPNSecret",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@concat(pipeline().parameters.p_SPNSecretURL,'?api-version=7.0')",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "ProcessDate": {
                        "type": "string"
                    },
                    "p_SPNSecretURL": {
                        "type": "string",
                        "defaultValue": "https://kv-ccop-dv.vault.azure.net/secrets/CostMGMT-SPN-Secret/eafafff824ca4d8c8a8c604579b70ed1"
                    }
                },
                "variables": {
                    "ProcessDate": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "VM Metrics"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:35Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pline VM Metrics Sub Main  v4')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pline re-run failed activities_vmmetrics')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Set ReportingDate",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "ReportingDate",
                            "value": {
                                "value": "@pipeline().parameters.p_RerunReportingDate",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Execute VM Metrics API",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Set ReportingDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetSPNSecret",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pline VM Metrics Sub Main  v4",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ClientSecret": {
                                    "value": "@activity('GetSPNSecret').output.value",
                                    "type": "Expression"
                                },
                                "VMMetricsDate": {
                                    "value": "@variables('ReportingDate')",
                                    "type": "Expression"
                                },
                                "VMMetricsConfigKQL": {
                                    "value": "let _ProcessDate = todatetime('@{variables('ReportingDate')}');\nADFErrorLog\n| where todatetime(ReportingDate) == _ProcessDate\n| where APIName  == 'VM Metrics API'\n| where ErrorMessage !contains 'NotFound'\n| where ErrorResourceID !in ( (            \n            VMMetrics| where todatetime(metricsDate) == _ProcessDate\n                     | extend resourceId= strcat( RGFQN ,'/providers/Microsoft.Compute/virtualMachines/', virtualMachineName) \n                     | distinct resourceId\n        ))\n| project-rename resourceId=ErrorResourceID, subscriptionId=ErrorSubscription\n| extend filename = strcat(split(resourceId,'/')[2], '_', split(resourceId,'/')[4], '_', split(resourceId,'/')[8])\n| distinct  resourceId, filename, subscriptionId",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "GetSPNSecret",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@concat(pipeline().parameters.p_SPNSecretURL,'?api-version=7.0')",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_RerunReportingDate": {
                        "type": "string"
                    },
                    "p_SPNSecretURL": {
                        "type": "string",
                        "defaultValue": "https://kv-ccop-dv.vault.azure.net/secrets/CostMGMT-SPN-Secret/eafafff824ca4d8c8a8c604579b70ed1"
                    }
                },
                "variables": {
                    "ReportingDate": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "VM Metrics"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:35Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pline VM Metrics Sub Main  v4')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API - Monthly')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Monthly Schedule",
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Billing API",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "p_LookBackInDay": "[parameters('Billing API - Monthly_properties_Billing API_parameters_p_LookBackInDay')]",
                            "p_BillingIds": "[parameters('Billing API - Monthly_properties_Billing API_parameters_p_BillingIds')]",
                            "p_containername": "[parameters('Billing API - Monthly_properties_Billing API_parameters_p_containername')]",
                            "p_BeginDate": "[parameters('Billing API - Monthly_properties_Billing API_parameters_p_BeginDate')]",
                            "p_EndDate": "[parameters('Billing API - Monthly_properties_Billing API_parameters_p_EndDate')]",
                            "p_BatchType": "[parameters('Billing API - Monthly_properties_Billing API_parameters_p_BatchType')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Month",
                        "interval": 1,
                        "startTime": "2024-03-05T11:11:00Z",
                        "timeZone": "UTC",
                        "schedule": {
                            "minutes": [
                                0
                            ],
                            "hours": [
                                6
                            ],
                            "monthDays": [
                                5,
                                15
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Billing API')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API - Daily')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Downloads Usage Data, Reservation Data and Credits Data",
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Billing API",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "p_LookBackInDay": "[parameters('Billing API - Daily_properties_Billing API_parameters_p_LookBackInDay')]",
                            "p_BillingIds": "[parameters('Billing API - Daily_properties_Billing API_parameters_p_BillingIds')]",
                            "p_containername": "[parameters('Billing API - Daily_properties_Billing API_parameters_p_containername')]",
                            "p_BeginDate": "[parameters('Billing API - Daily_properties_Billing API_parameters_p_BeginDate')]",
                            "p_EndDate": "[parameters('Billing API - Daily_properties_Billing API_parameters_p_EndDate')]",
                            "p_BatchType": "[parameters('Billing API - Daily_properties_Billing API_parameters_p_BatchType')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2024-02-21T05:05:00Z",
                        "timeZone": "UTC",
                        "schedule": {
                            "minutes": [
                                0
                            ],
                            "hours": [
                                1
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Billing API')]"
            ]
        }
    ]
}