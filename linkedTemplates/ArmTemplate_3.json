{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "fng-dtf-acrp-dev"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/ReferenceData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_Referencedata_From_Dev",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "billingdata//"
                            },
                            {
                                "name": "Destination",
                                "value": "billingdata//"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFileName": "*",
                                    "deleteFilesAfterCompletion": false
                                },
                                "formatSettings": {
                                    "type": "BinaryReadSettings"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "enableSkipIncompatibleRow": false
                        },
                        "inputs": [
                            {
                                "referenceName": "DevDataSet_DataCopy",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": "referencedata"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_DataCopy",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": "referencedata"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Initial Setup"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:27Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pline VMMetrics ADLSG2 to ADX v4')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy DataLake to ADX",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Reset Staging Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@pipeline().parameters.p_StorageAccountDirectory",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "VMMetricsCSV",
                                "type": "DatasetReference",
                                "parameters": {
                                    "dirname": {
                                        "value": "@pipeline().parameters.p_StorageAccountDirectory",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_VMMetrics",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": {
                                        "value": "@pipeline().parameters.p_Dest_Staging_TableName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "ADX Staging to ProdTable",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Copy DataLake to ADX",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-append async VMMetrics <|\nStaging_VMMetrics\n| extend  subscription = tostring(split(id, \"/\")[2])\n| extend  resourceGroupName = tostring(split(id, \"/\")[4])\n| extend  virtualMachineName = tostring(split(id, \"/\")[8])\n| extend  RGFQN = tostring(strcat('/subscriptions/', subscription, '/resourceGroups/', toupper(resourceGroupName)))\n| extend  metricsDate = todatetime(format_datetime(todatetime(timeStamp), 'yyyy-MM-dd'))\n| extend  metricsMonth = format_datetime(todatetime(split(['timespan'], '/')[0]), 'yyyy-MM')\n| extend  metricsHour = format_datetime(todatetime(timeStamp), 'HH')\n| extend  resourceId =  strcat(RGFQN,'/providers/Microsoft.Compute/virtualMachines/', virtualMachineName)",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset Staging Table",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace  Staging_VMMetrics <|\nStaging_VMMetrics\n| take 0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_StorageAccountContainer": {
                        "type": "string"
                    },
                    "p_StorageAccountDirectory": {
                        "type": "string"
                    },
                    "p_VMMetricsDate": {
                        "type": "string"
                    },
                    "p_Dest_Staging_TableName": {
                        "type": "string"
                    },
                    "p_Dest_Production_TableName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "VM Metrics"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:27Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pline VMMetrics UnitTest')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetBearerToken",
                        "description": "Use this Web activity to get bearer token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GetSPNSecret",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{activity('GetSPNSecret').output.value}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Copy REST Output",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "GetBearerToken",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:01:40",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@{concat('Bearer ',activity('GetBearerToken').output.access_token)}",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "RestResource_VMMetrics_v1",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_RelativeURL": {
                                        "value": "/subscriptions/d7e6f206-2d0d-43eb-b2d8-de5503cd6b1e/resourceGroups/RGMINECRAFT2/providers/Microsoft.Compute/virtualMachines/minecraftvm/providers/microsoft.insights/metrics?timespan=@{pipeline().parameters.VMMetricsDate}/@{pipeline().parameters.VMMetricsDate}T23:59:00Z&interval=PT1H&metricnames=Percentage CPU,Disk Read Bytes,Disk Write Bytes,Disk Read Operations/Sec,Disk Write Operations/Sec&aggregation=Average&api-version=2018-01-01",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "VMMetricsJSON_UnitTest",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "GetSPNSecret",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@concat(pipeline().parameters.p_SPNSecretURL,'?api-version=7.0')",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "ClientID": {
                        "type": "string",
                        "defaultValue": "aa5605bb-2877-483d-b005-e1439ee1f988"
                    },
                    "tenant_id": {
                        "type": "string",
                        "defaultValue": "8a807b9b-02da-47f3-a903-791a42a2285c"
                    },
                    "VMMetricsDate": {
                        "type": "string"
                    },
                    "p_SPNSecretURL": {
                        "type": "string",
                        "defaultValue": "https://kv-ccop-dv.vault.azure.net/secrets/CostMGMT-SPN-Secret/eafafff824ca4d8c8a8c604579b70ed1"
                    }
                },
                "folder": {
                    "name": "VM Metrics"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:27Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API - SplitFiles - Reservation')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SplitFiles",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "1.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "SplitFilesByDay - Reservation",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "Container": {
                                        "value": "'@{pipeline().parameters.container}'",
                                        "type": "Expression"
                                    },
                                    "SourceFileName": {
                                        "value": "'@{pipeline().parameters.sourcefilename}'",
                                        "type": "Expression"
                                    },
                                    "SubFolder": {
                                        "value": "'@{pipeline().parameters.subfolder}'",
                                        "type": "Expression"
                                    }
                                },
                                "datasetParameters": {
                                    "DataLakeSource": {},
                                    "WriteMultipleFiles": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "container": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "sourcefilename": {
                        "type": "string"
                    },
                    "subfolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:27Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/BillingData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_Billingdata_From_Dev",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "billingdata//"
                            },
                            {
                                "name": "Destination",
                                "value": "billingdata//"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFileName": "*",
                                    "deleteFilesAfterCompletion": false
                                },
                                "formatSettings": {
                                    "type": "BinaryReadSettings"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "enableSkipIncompatibleRow": false
                        },
                        "inputs": [
                            {
                                "referenceName": "DevDataSet_DataCopy",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.SourceContainer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_DataCopy",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.DestinationContainer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "SourceContainer": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "DestinationContainer": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    }
                },
                "folder": {
                    "name": "Initial Setup"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:27Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pipeline VMMetrics Batch Read API CopyActivity v4')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy REST Output",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:05:00",
                                "requestInterval": "00.00:00:02.000",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@pipeline().parameters.Token",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "AbsoluteUrl": "$['nextLink']"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "RestResource_VMMetrics_v1",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_RelativeURL": {
                                        "value": "@{pipeline().parameters.resourceId}/providers/microsoft.insights/metrics?timespan=@{pipeline().parameters.startofmonthDate}/@{pipeline().parameters.endofmonthDate}T23:59:00Z&interval=PT1H&metricnames=Percentage CPU,Disk Read Bytes,Disk Write Bytes,Disk Read Operations/Sec,Disk Write Operations/Sec&aggregation=Average&api-version=2018-01-01",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "VMMetricsJSON_v4",
                                "type": "DatasetReference",
                                "parameters": {
                                    "dirname": {
                                        "value": "@pipeline().parameters.dirname",
                                        "type": "Expression"
                                    },
                                    "filename": {
                                        "value": "@{pipeline().parameters.filename}",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Wait 2 Seconds",
                        "type": "Wait",
                        "dependsOn": [
                            {
                                "activity": "Copy REST Output",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": 2
                        }
                    },
                    {
                        "name": "Update ADFErrorLog",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Copy REST Output",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-append ADFErrorLog <|\nprint APIName = 'VM Metrics API', ReportingDate='@{pipeline().parameters.VMMetricsDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName=\"REST API to Azure Data Lake\" , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '@{activity('Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= \"@{replace(activity('Copy REST Output').output.errors[0]['Message'] , '\"' ,' ' )}\", ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{pipeline().parameters.resourceId}',  ErrorSubscription= '@{pipeline().parameters.subscriptionId}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "Token": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "VMMetricsDate": {
                        "type": "string"
                    },
                    "dirname": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "subscriptionId": {
                        "type": "string"
                    },
                    "startofmonthDate": {
                        "type": "string"
                    },
                    "endofmonthDate": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "VM Metrics"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:28Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API - Split Files - Usage')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SplitFiles",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "1.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "SplitFilesByDay - Usage",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "Container": {
                                        "value": "'@{pipeline().parameters.container}'",
                                        "type": "Expression"
                                    },
                                    "SourceFileName": {
                                        "value": "'@{pipeline().parameters.sourcefilename}'",
                                        "type": "Expression"
                                    },
                                    "UsageFolderName": {
                                        "value": "'@{pipeline().parameters.UsageFolderName}'",
                                        "type": "Expression"
                                    }
                                },
                                "datasetParameters": {
                                    "DataLakeSource": {},
                                    "WriteMultipleFiles": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 48,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "container": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "sourcefilename": {
                        "type": "string"
                    },
                    "UsageFolderName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:28Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pipeline VMMetrics Read API CopyActivity v4')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy REST Output",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:05:00",
                                "requestInterval": "00.00:00:02.000",
                                "requestMethod": "GET",
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@pipeline().parameters.Token",
                                        "type": "Expression"
                                    }
                                },
                                "paginationRules": {
                                    "AbsoluteUrl": "$['nextLink']"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "RestResource_VMMetrics_v1",
                                "type": "DatasetReference",
                                "parameters": {
                                    "p_RelativeURL": {
                                        "value": "@{pipeline().parameters.resourceId}/providers/microsoft.insights/metrics?timespan=@{pipeline().parameters.startofmonthDate}/@{pipeline().parameters.endofmonthDate}T23:59:00Z&interval=PT1H&metricnames=Percentage CPU,Disk Read Bytes,Disk Write Bytes,Disk Read Operations/Sec,Disk Write Operations/Sec&aggregation=Average&api-version=2018-01-01",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "VMMetricsJSON_v4",
                                "type": "DatasetReference",
                                "parameters": {
                                    "dirname": {
                                        "value": "@pipeline().parameters.dirname",
                                        "type": "Expression"
                                    },
                                    "filename": {
                                        "value": "@{pipeline().parameters.filename}",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Wait 2 Seconds",
                        "type": "Wait",
                        "dependsOn": [
                            {
                                "activity": "Copy REST Output",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": 2
                        }
                    },
                    {
                        "name": "Update ADFErrorLog",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Copy REST Output",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-append ADFErrorLog <|\nprint APIName = 'VM Metrics API', ReportingDate='@{pipeline().parameters.VMMetricsDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName=\"REST API to Azure Data Lake\" , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '@{activity('Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= \"@{replace(activity('Copy REST Output').output.errors[0]['Message'] , '\"' ,' ' )}\", ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{pipeline().parameters.resourceId}',  ErrorSubscription= '@{pipeline().parameters.subscriptionId}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "Token": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "VMMetricsDate": {
                        "type": "string"
                    },
                    "dirname": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "subscriptionId": {
                        "type": "string"
                    },
                    "startofmonthDate": {
                        "type": "string"
                    },
                    "endofmonthDate": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "VM Metrics"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:28Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 2 - ADX Stage to Prod - ReservationDesc')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From Staging Table to Production",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Loop Through Days",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ReservationDescription <|\nlet mindate = toscalar(BillingData | summarize min(billingDate));\nReservationDescription\n| where eventDate !in ((Staging_ReservationDescription | project eventDate=todatetime(format_datetime(todatetime(eventDate),'yyyy-MM-dd')) | distinct eventDate))\n| where eventDate >= mindate\n| union (\n            Staging_ReservationDescription\n            | project ['id']=tolower(['id']),['name']=tolower(['name']),['type']=tolower(['type']),eventDate=todatetime(format_datetime(todatetime(eventDate),'yyyy-MM-dd')),reservationOrderId=tolower(reservationOrderId),description=tolower(description),eventType=tolower(eventType),quantity,amount,currency=tolower(currency),reservationorderName=tolower(reservationorderName),purchasingEnrollment=tolower(purchasingEnrollment),armSkuName=tolower(armSkuName),term=tolower(term),region=tolower(region),purchasingSubscriptionGuid=tolower(purchasingSubscriptionGuid),purchasingSubscriptionName=tolower(purchasingSubscriptionName),accountName=tolower(accountName),accountOwnerEmail=tolower(accountOwnerEmail),departmentName=tolower(departmentName),costCenter=tolower(costCenter),currentEnrollment=tolower(currentEnrollment),billingFrequency=tolower(billingFrequency)\n        )",
                                "type": "Expression"
                            },
                            "commandTimeout": "01:00:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset Staging Table",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace  Staging_ReservationDescription <|\nStaging_ReservationDescription\n| take 0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Loop Through Days",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Reset Staging Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.p_BillingDate",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Get Folder Stats",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "FolderValidation",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FilePath": {
                                                    "value": "@{pipeline().parameters.p_StorageAccountContainer}/@{formatDateTime(item(), 'yyyy')}/@{formatDateTime(item(), 'MM')}/@{formatDateTime(item(), 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "exists",
                                            "childItems"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "BinaryReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "IsFolderValid",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Folder Stats",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(activity('Get Folder Stats').output.exists,true),greater(length(activity('Get Folder Stats').output.childItems),0))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Copy DataLake to ADX",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 1,
                                                    "retryIntervalInSeconds": 300,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true,
                                                            "wildcardFolderPath": {
                                                                "value": "@{formatDateTime(item(), 'yyyy')}/@{formatDateTime(item(), 'MM')}/@{formatDateTime(item(), 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                                "type": "Expression"
                                                            },
                                                            "wildcardFileName": "*",
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "AzureDataExplorerSink"
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "id",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "id",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "name",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "name",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "type",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "type",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "eventDate",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "eventDate",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "reservationOrderId",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "reservationOrderId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "description",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "description",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "eventType",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "eventType",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "quantity",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "quantity",
                                                                    "type": "Double"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "amount",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "amount",
                                                                    "type": "Double"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "currency",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "currency",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "reservationOrderName",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "reservationorderName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "purchasingEnrollment",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "purchasingEnrollment",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "armSkuName",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "armSkuName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "term",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "term",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "region",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "region",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "purchasingSubscriptionGuid",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "purchasingSubscriptionGuid",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "purchasingSubscriptionName",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "purchasingSubscriptionName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "accountName",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "accountName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "accountOwnerEmail",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "accountOwnerEmail",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "departmentName",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "departmentName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "costCenter",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "costCenter",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "currentEnrollment",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "currentEnrollment",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "billingFrequency",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "billingFrequency",
                                                                    "type": "String"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "src_BillingDataCSV",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ContainerName": {
                                                                "value": "@pipeline().parameters.p_StorageAccountContainer",
                                                                "type": "Expression"
                                                            },
                                                            "DirectoryName": {
                                                                "value": "@{formatDateTime(item(), 'yyyy')}/@{formatDateTime(item(), 'MM')}/@{formatDateTime(item(), 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "adx_BillingData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "TableName": "Staging_ReservationDescription"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_StorageAccountContainer": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BillingDate": {
                        "type": "array"
                    },
                    "p_SubDirectory": {
                        "type": "string",
                        "defaultValue": "ReservationOrdersDesc"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:29Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 4 - ADX Stage to Prod - Usage')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From Staging Table to Production",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Update UsageDataLog",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-append BillingData with (tags= '[\"drop-by:@{pipeline().parameters.p_BillingDate}\"]') <|\nStaging_BillingData \n| project\n['kind'] = tolower(['kind']),\n['id']=tolower(['id']),\nname=tolower(name),\n['type']=tolower(['type']),\ntags=tolower(tags),\nbillingAccountId=tolower(billingAccountId),\nbillingAccountName=tolower(billingAccountName),\nbillingPeriodStartDate,\nbillingPeriodEndDate,\nbillingProfileId=tolower(billingProfileId),\nbillingProfileName=tolower(billingProfileName),\naccountOwnerId=tolower(accountOwnerId),\naccountName=tolower(accountName),\nsubscriptionId=tolower(subscriptionId),\nsubscriptionName=tolower(subscriptionName),\n['date']=['date'],\nproduct=tolower(product),\npartNumber=tolower(partNumber),\nmeterId=tolower(meterId),\nquantity,\neffectivePrice,\ncost,\nunitPrice,\nbillingCurrency=tolower(billingCurrency),\nresourceLocation=tolower(resourceLocation),\nconsumedService=tolower(consumedService),\nresourceId=tolower(resourceId),\nresourceName=tolower(resourceName),\nserviceInfo2=tolower(serviceInfo2),\ninvoiceSection=tolower(invoiceSection),\nresourceGroup=tolower(resourceGroup),\nofferId=tolower(offerId),\nisAzureCreditEligible=tolower(isAzureCreditEligible),\npublisherType=tolower(publisherType),\nchargeType=tolower(chargeType),\nfrequency=tolower(frequency),\nmeterDetails=tolower(meterDetails),\nRGFQN = strcat('/subscriptions/', tolower(subscriptionId), '/resourceGroups/', tolower(resourceGroup )),\nbillingDate = todatetime(format_datetime(todatetime(['date']), 'yyyy-MM-dd')),\nbillingMonth = format_datetime(todatetime(['date']), 'yyyy-MM')",
                                "type": "Expression"
                            },
                            "commandTimeout": "03:00:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Update UsageDataLog",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "isDataExists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-append usageDataLog <| \nStaging_BillingData\n| summarize usageCost=sum(cost) by billingAccountId, subscriptionId, subscriptionName,billingDate = format_datetime(todatetime(['date']), 'yyyy-MM-dd'), frequency = '@{pipeline().parameters.p_BatchType}', logdate=now()",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "isDataExists",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Check Data Already Exists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('Check Data Already Exists').output.value[0].Flag,'True')",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Get Extent ID",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureDataExplorerSource",
                                            "query": {
                                                "value": "BillingData\n| where extent_tags() has \"drop-by:@{pipeline().parameters.p_BillingDate}\"\n| project  extentid=extent_id(), tag=extent_tags()\n| distinct extentid",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:10:00",
                                            "noTruncation": false
                                        },
                                        "dataset": {
                                            "referenceName": "ADX_Generic",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "TableName": "ADFErrorLog"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Drop Extent",
                                    "type": "AzureDataExplorerCommand",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Extent ID",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "command": {
                                            "value": ".drop extents ('@{activity('Get Extent ID').output.firstRow.extentid}') from BillingData",
                                            "type": "Expression"
                                        },
                                        "commandTimeout": "00:20:00"
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Check Data Already Exists",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "BillingData\n| where billingDate in ((Staging_BillingData | project billingDate = format_datetime(todatetime(['date']), 'yyyy-MM-dd') | distinct billingDate))\n| distinct billingDate\n| count\n| extend Flag=iff(Count>0, 'True', 'False')\n| project Flag",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_BillingDate": {
                        "type": "string"
                    },
                    "p_SubDirectory": {
                        "type": "string"
                    },
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BatchType": {
                        "type": "string"
                    }
                },
                "variables": {
                    "kql": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:29Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 2 - ADX Stage to Prod - ReservationOrders')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From Staging Table to Production",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Copy DataLake to ADX_copy1_copy1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ReservationOrders <|\nReservationOrders\n| take 0\n| union (\n            Staging_ReservationOrders\n            | project ['id']=tolower(['id']),['type']=tolower(['type']),['name']=tolower(['name']),etag=tolower(etag),displayName=tolower(displayName), requestDateTime=todatetime(format_datetime(todatetime(requestDateTime),'yyyy-MM-dd')),createdDateTime=todatetime(format_datetime(todatetime(createdDateTime),'yyyy-MM-dd')), expiryDate=todatetime(format_datetime(todatetime(expiryDate),'yyyy-MM-dd')),benefitStartTime=todatetime(format_datetime(todatetime(benefitStartTime),'yyyy-MM-dd')), term=tolower(term),provisioningState=tolower(provisioningState),originalQuantity,billingPlan=tolower(billingPlan)\n        )",
                                "type": "Expression"
                            },
                            "commandTimeout": "01:00:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset Staging Table",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace  Staging_ReservationOrders <|\nStaging_ReservationOrders\n| take 0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Copy DataLake to ADX_copy1_copy1",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Reset Staging Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@{pipeline().parameters.p_SubDirectory}",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "src_BillingDataCSV",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ContainerName": {
                                        "value": "@pipeline().parameters.p_StorageAccountContainer",
                                        "type": "Expression"
                                    },
                                    "DirectoryName": {
                                        "value": "@{pipeline().parameters.p_SubDirectory}",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_ReservationOrders"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_StorageAccountContainer": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BillingDate": {
                        "type": "array"
                    },
                    "p_SubDirectory": {
                        "type": "string",
                        "defaultValue": "ReservationOrders"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:29Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 2 - ADX Stage to Prod - Reservation Usage')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From Staging Table to Production",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "isDataExists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": "@variables('kql')",
                                "type": "Expression"
                            },
                            "commandTimeout": "03:00:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset Staging Table",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace  Staging_ReservationSummary <|\nStaging_ReservationSummary\n| take 0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Loop Through Days",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Reset Staging Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.p_BillingDate",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Get Folder Stats",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "FolderValidation",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FilePath": {
                                                    "value": "@{pipeline().parameters.p_containername}/@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "exists",
                                            "childItems"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "BinaryReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "IsFolderValid",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Folder Stats",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(activity('Get Folder Stats').output.exists,true),greater(length(activity('Get Folder Stats').output.childItems),0))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Copy DataLake to ADX",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 1,
                                                    "retryIntervalInSeconds": 300,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true,
                                                            "wildcardFolderPath": {
                                                                "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                                "type": "Expression"
                                                            },
                                                            "wildcardFileName": "*",
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "AzureDataExplorerSink"
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "src_BillingDataCSV",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ContainerName": {
                                                                "value": "@pipeline().parameters.p_containername",
                                                                "type": "Expression"
                                                            },
                                                            "DirectoryName": {
                                                                "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "adx_BillingData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "TableName": "Staging_ReservationSummary"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Check Data Already Exists",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Loop Through Days",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "BillingData\n| where billingDate in ((Staging_ReservationSummary | project billingDate = todatetime(format_datetime(todatetime(usageDate), 'yyyy-MM-dd')) | distinct billingDate))\n| distinct billingDate\n| count\n| extend Flag=iff(Count>0, 'True', 'False')\n| project Flag",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "isDataExists",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Check Data Already Exists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('Check Data Already Exists').output.value[0].Flag,'True')",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Update KQL For Append",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "kql",
                                        "value": {
                                            "value": ".set-or-append ReservationSummary <|\nStaging_ReservationSummary\n| extend usageDate = todatetime(format_datetime(todatetime(usageDate), 'yyyy-MM-dd')), UsageMonth = format_datetime(todatetime(usageDate), \"yyyy-MM\")\n| project ['id']=tolower(['id']),['name']=tolower(['name']),['type']=tolower(['type']),reservationOrderId=tolower(reservationOrderId),\nreservationId=tolower(reservationId),skuName=tolower(skuName),['kind']=tolower(['kind']),reservedHours,usageDate,UsageMonth,usedHours,minUtilizationPercentage,avgUtilizationPercentage,maxUtilizationPercentage,purchasedQuantity,remainingQuantity,totalReservedQuantity,usedQuantity,utilizedPercentage",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Update KQL For Replace",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "kql",
                                        "value": {
                                            "value": ".set-or-replace ReservationSummary <|\nlet mindate = toscalar(BillingData | summarize min(billingDate));\nReservationSummary\n| where usageDate !in ((Staging_ReservationSummary\n                        | distinct todatetime(format_datetime(todatetime(usageDate), 'yyyy-MM-dd')) )\n                      )\n| where usageDate >= mindate\n| union (\n    Staging_ReservationSummary\n    | extend usageDate = todatetime(format_datetime(todatetime(usageDate), 'yyyy-MM-dd')), UsageMonth = format_datetime(todatetime(usageDate), \"yyyy-MM\")\n    | project ['id']=tolower(['id']),['name']=tolower(['name']),['type']=tolower(['type']),reservationOrderId=tolower(reservationOrderId),\n    reservationId=tolower(reservationId),skuName=tolower(skuName),['kind']=tolower(['kind']),reservedHours,usageDate,UsageMonth,usedHours,minUtilizationPercentage,avgUtilizationPercentage,maxUtilizationPercentage,purchasedQuantity,remainingQuantity,totalReservedQuantity,usedQuantity,utilizedPercentage)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_BillingDate": {
                        "type": "string"
                    },
                    "p_SubDirectory": {
                        "type": "string"
                    },
                    "p_containername": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BatchType": {
                        "type": "string"
                    }
                },
                "variables": {
                    "kql": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:29Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/BillingSummary-InitialLoad')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From Staging Table to Production",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Loop Through Days",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace BillingSummary <|\nBillingSummary\n| where billingPeriod !in ((Staging_BillingSummary | extend billingPeriodId=strcat(substring(billingPeriodId, 0, 4),'-',substring(billingPeriodId, 4, 2)) | distinct billingPeriodId))\n| union (\n            Staging_BillingSummary\n            | project billingId = tostring(split(id, '/')[2]),billingPeriod=strcat(substring(billingPeriodId, 0, 4),'-',substring(billingPeriodId, 4, 2)),currencyCode,beginningBalance,endingBalance,newPurchases,adjustments,utilized,serviceOverage,chargesBilledSeparately,totalOverage,totalUsage,azureMarketplaceServiceCharges,adjustmentType=name,adjustmentvalue=value,billingPeriodStart,billingPeriodEnd,balanceDeduct\n        )",
                                "type": "Expression"
                            },
                            "commandTimeout": "01:00:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset Staging Table",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "GetDates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace  Staging_BillingSummary <|\nStaging_BillingSummary\n| take 0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "GetDates",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "range ReportingDate from ago(5000d) to  endofmonth(now())  step 1d\n| where ReportingDate > todatetime('2020-01-01')\n| extend ReportingMonth=format_datetime(ReportingDate, 'yyyy-MM')\n| summarize ReportingDate=max(ReportingDate) by ReportingMonth\n| distinct ReportingDate",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Loop Through Days",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Reset Staging Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetDates').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Copy DataLake to ADX",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 300,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{pipeline().parameters.p_SubDirectory}/csv",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureDataExplorerSink"
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "src_BillingDataCSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": {
                                                    "value": "@pipeline().parameters.p_StorageAccountContainer",
                                                    "type": "Expression"
                                                },
                                                "DirectoryName": {
                                                    "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{pipeline().parameters.p_SubDirectory}/csv",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "adx_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "TableName": "Staging_BillingSummary"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_StorageAccountContainer": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_SubDirectory": {
                        "type": "string",
                        "defaultValue": "Balancesummary"
                    }
                },
                "folder": {
                    "name": "Initial Setup/InitialLoad - ADX"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:29Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Usage-InitialLoad')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From Staging Table to Production",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Loop Through Days",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace BillingData <|\nBillingData\n| where billingDate !in (\n                            (    Staging_BillingData\n                                | where isnotempty(billingAccountId)\n                                | distinct todatetime(format_datetime(todatetime(['date']), 'yyyy-MM-dd')) \n                            )\n                        )\n| where isnotempty(billingAccountId)\n| where billingAccountName contains 'fidelity' \n| union (\n            Staging_BillingData\n            | where isnotempty(billingAccountId)\n            | where billingAccountName contains 'fidelity' \n            | extend  RGFQN = strcat('/subscriptions/', tolower(subscriptionId), '/resourceGroups/', tolower(resourceGroup )),\n            billingDate = todatetime(format_datetime(todatetime(['date']), 'yyyy-MM-dd')),\n            billingMonth = format_datetime(todatetime(['date']), 'yyyy-MM'),\n            publisherType=tolower(publisherType),\n            chargeType=tolower(chargeType),\n            frequency=tolower(frequency),\n            resourceGroup=tolower(resourceGroup),\n            resourceName=tolower(resourceName),\n            resourceId=tolower(resourceId),\n            resourceLocation=tolower(resourceLocation),\n            product=tolower(product),\n            subscriptionId=tolower(subscriptionId),\n            subscriptionName=tolower(subscriptionName),\n            type=tolower(type),\n            billingAccountId=tolower(billingAccountId),\n            billingAccountName=tolower(billingAccountName),\n            billingProfileId=tolower(billingProfileId),\n            billingProfileName=tolower(billingProfileName),\n            accountOwnerId=tolower(accountOwnerId),\n            accountName=tolower(accountName),\n            partNumber=tolower(partNumber),\n            meterId=tolower(meterId),\n            consumedService=tolower(consumedService),\n            invoiceSection=tolower(invoiceSection),\n            offerId=tolower(offerId),\n            isAzureCreditEligible=tolower(isAzureCreditEligible),\n            meterDetails=tolower(meterDetails)\n        )",
                                "type": "Expression"
                            },
                            "commandTimeout": "02:00:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset Staging Table",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "GetDates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace  Staging_BillingData <|\nStaging_BillingData\n| take 0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Loop Through Days",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Reset Staging Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetDates').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Copy DataLake to ADX",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 300,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureDataExplorerSink"
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "name": "kind",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "kind",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "id",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "name",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "type",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingAccountId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingAccountName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingAccountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodStartDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingPeriodEndDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingProfileId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingProfileName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingProfileName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "accountOwnerId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "accountOwnerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "accountName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "accountName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "subscriptionId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "subscriptionName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "subscriptionName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "date",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "date",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "product",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "product",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "partNumber",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "partNumber",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "meterId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "meterId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "quantity",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "quantity",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "effectivePrice",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "effectivePrice",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "cost",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "cost",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "unitPrice",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "unitPrice",
                                                        "type": "Double"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "billingCurrency",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "billingCurrency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceLocation",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceLocation",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "consumedService",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "consumedService",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceName",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "invoiceSection",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "invoiceSection",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "resourceGroup",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "resourceGroup",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "offerId",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "offerId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "isAzureCreditEligible",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "publisherType",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "publisherType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "chargeType",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "chargeType",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "frequency",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "frequency",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "name": "meterDetails",
                                                        "type": "String",
                                                        "physicalType": "String"
                                                    },
                                                    "sink": {
                                                        "name": "meterDetails",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "src_BillingDataCSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": {
                                                    "value": "@pipeline().parameters.p_StorageAccountContainer",
                                                    "type": "Expression"
                                                },
                                                "DirectoryName": {
                                                    "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "adx_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "TableName": "Staging_BillingData"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "GetDates",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "range ReportingDate from ago(5000d) to now() step 1d\n| extend ReportingDate=todatetime(format_datetime(ReportingDate, 'yyyy-MM-dd'))\n| where ReportingDate >= todatetime('2020-01-01')\n| where tostring(ReportingDate) contains '2021-06'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_StorageAccountContainer": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_SubDirectory": {
                        "type": "string",
                        "defaultValue": "Usage"
                    }
                },
                "folder": {
                    "name": "Initial Setup/InitialLoad - ADX"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:29Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 2 - ADX Stage to Prod - BillingSummary')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From Staging Table to Production",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Loop Through Days",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace BillingSummary <|\nlet mindate = toscalar(BillingData | summarize min(billingDate));\nBillingSummary\n| where billingPeriod !in ((Staging_BillingSummary | extend billingPeriodId=strcat(substring(billingPeriodId, 0, 4),'-',substring(billingPeriodId, 4, 2)) | distinct billingPeriodId))\n| where billingPeriodEnd >= mindate\n| union (\n            Staging_BillingSummary\n            | project billingId = tostring(split(id, '/')[2]),billingPeriod=strcat(substring(billingPeriodId, 0, 4),'-',substring(billingPeriodId, 4, 2)),currencyCode,beginningBalance,endingBalance,newPurchases,adjustments,utilized,serviceOverage,chargesBilledSeparately,totalOverage,totalUsage,azureMarketplaceServiceCharges,adjustmentType=name,adjustmentvalue=value,billingPeriodStart,billingPeriodEnd,balanceDeduct\n        )",
                                "type": "Expression"
                            },
                            "commandTimeout": "01:00:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset Staging Table",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace  Staging_BillingSummary <|\nStaging_BillingSummary\n| take 0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Loop Through Days",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Reset Staging Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.p_BillingDate",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Get Folder Stats",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "FolderValidation",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FilePath": {
                                                    "value": "@{pipeline().parameters.p_StorageAccountContainer}/@{formatDateTime(item(), 'yyyy')}/@{formatDateTime(item(), 'MM')}/@{formatDateTime(item(), 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "exists",
                                            "childItems"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "BinaryReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "IsFolderValid",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Folder Stats",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(activity('Get Folder Stats').output.exists,true),greater(length(activity('Get Folder Stats').output.childItems),0))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Copy DataLake to ADX",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 1,
                                                    "retryIntervalInSeconds": 300,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true,
                                                            "wildcardFolderPath": {
                                                                "value": "@{formatDateTime(item(), 'yyyy')}/@{formatDateTime(item(), 'MM')}/@{formatDateTime(item(), 'dd')}/@{pipeline().parameters.p_SubDirectory}/csv",
                                                                "type": "Expression"
                                                            },
                                                            "wildcardFileName": "*",
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "AzureDataExplorerSink"
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "src_BillingDataCSV",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ContainerName": {
                                                                "value": "@pipeline().parameters.p_StorageAccountContainer",
                                                                "type": "Expression"
                                                            },
                                                            "DirectoryName": {
                                                                "value": "@{formatDateTime(item(), 'yyyy')}/@{formatDateTime(item(), 'MM')}/@{formatDateTime(item(), 'dd')}/@{pipeline().parameters.p_SubDirectory}/csv",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "adx_BillingData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "TableName": "Staging_BillingSummary"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_StorageAccountContainer": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BillingDate": {
                        "type": "array"
                    },
                    "p_SubDirectory": {
                        "type": "string",
                        "defaultValue": "Balancesummary"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:29Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API Sub 2 - ADX Stage to Prod - MarketPlace')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From Staging Table to Production",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Loop Through Days",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace MarketPlace <|\nlet mindate = toscalar(BillingData | summarize min(billingDate));\nMarketPlace\n| where billingMonth !in ((Staging_MarketPlace\n                        | project billingMonth = format_datetime(todatetime(usageStartDate), \"yyyy-MM\") | distinct billingMonth )\n                      )\n| extend usagedate_cnvt = todatetime(usageStartDate)\n| where usagedate_cnvt >= mindate\n| project-away usagedate_cnvt\n| union (\n            Staging_MarketPlace\n            | project  usageStartDate=format_datetime(todatetime(usageStartDate), \"yyyy-MM-dd\"),usageEndDate=format_datetime(todatetime(usageEndDate), \"yyyy-MM-dd\"), \n            subscriptionGuid=tolower(subscriptionGuid), resourceGroup=tolower(resourceGroup), \n            instanceId=tolower(instanceId), offerName=tolower(offerName), orderNumber=tolower(orderNumber), publisherName=tolower(publisherName), planName=tolower(planName), consumedQuantity, resourceRate, extendedCost, isRecurringCharge,billingMonth=format_datetime(todatetime(usageStartDate), \"yyyy-MM\")\n        )",
                                "type": "Expression"
                            },
                            "commandTimeout": "01:00:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset Staging Table",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace  Staging_MarketPlace <|\nStaging_MarketPlace\n| take 0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Loop Through Days",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Reset Staging Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.p_BillingDate",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Get Folder Stats",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "FolderValidation",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FilePath": {
                                                    "value": "@{pipeline().parameters.p_StorageAccountContainer}/@{formatDateTime(item(), 'yyyy')}/@{formatDateTime(item(), 'MM')}/@{formatDateTime(item(), 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "exists",
                                            "childItems"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobFSReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "BinaryReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "IsFolderValid",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Folder Stats",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(activity('Get Folder Stats').output.exists,true),greater(length(activity('Get Folder Stats').output.childItems),0))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Copy DataLake to ADX",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 1,
                                                    "retryIntervalInSeconds": 300,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true,
                                                            "wildcardFolderPath": {
                                                                "value": "@{formatDateTime(item(), 'yyyy')}/@{formatDateTime(item(), 'MM')}/@{formatDateTime(item(), 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                                "type": "Expression"
                                                            },
                                                            "wildcardFileName": "*",
                                                            "enablePartitionDiscovery": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "AzureDataExplorerSink"
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "usageStartDate",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "usageStartDate",
                                                                    "type": "String",
                                                                    "physicalType": "string"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "usageEndDate",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "usageEndDate",
                                                                    "type": "String",
                                                                    "physicalType": "string"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "subscriptionGuid",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "subscriptionGuid",
                                                                    "type": "String",
                                                                    "physicalType": "string"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "resourceGroup",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceGroup",
                                                                    "type": "String",
                                                                    "physicalType": "string"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "instanceId",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "instanceId",
                                                                    "type": "String",
                                                                    "physicalType": "string"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "offerName",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "offerName",
                                                                    "type": "String",
                                                                    "physicalType": "string"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "orderNumber",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "orderNumber",
                                                                    "type": "String",
                                                                    "physicalType": "string"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "publisherName",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "publisherName",
                                                                    "type": "String",
                                                                    "physicalType": "string"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "planName",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "planName",
                                                                    "type": "String",
                                                                    "physicalType": "string"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "consumedQuantity",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "consumedQuantity",
                                                                    "type": "Double",
                                                                    "physicalType": "real"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "resourceRate",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "resourceRate",
                                                                    "type": "Double",
                                                                    "physicalType": "real"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "extendedCost",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "extendedCost",
                                                                    "type": "Double",
                                                                    "physicalType": "real"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "isRecurringCharge",
                                                                    "type": "String",
                                                                    "physicalType": "String"
                                                                },
                                                                "sink": {
                                                                    "name": "isRecurringCharge",
                                                                    "type": "String",
                                                                    "physicalType": "string"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "src_BillingDataTSV_Marketplace",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ContainerName": {
                                                                "value": "@pipeline().parameters.p_StorageAccountContainer",
                                                                "type": "Expression"
                                                            },
                                                            "DirectoryName": {
                                                                "value": "@{formatDateTime(item(), 'yyyy')}/@{formatDateTime(item(), 'MM')}/@{formatDateTime(item(), 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                                "type": "Expression"
                                                            },
                                                            "FileName": "*"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "adx_BillingData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "TableName": "Staging_MarketPlace"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_StorageAccountContainer": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_BillingDate": {
                        "type": "array"
                    },
                    "p_SubDirectory": {
                        "type": "string",
                        "defaultValue": "MarketPlace"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:29Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Reservation-InitialLoad')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "From Staging Table to Production",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Loop Through Days",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ReservationSummary <|\nReservationSummary\n| where UsageMonth !in ((Staging_ReservationSummary\n                        | distinct format_datetime(todatetime(usageDate), 'yyyy-MM') )\n                      )\n| union (\n    Staging_ReservationSummary\n    | extend usageDate = todatetime(format_datetime(todatetime(usageDate), 'yyyy-MM-dd')), UsageMonth = format_datetime(todatetime(usageDate), \"yyyy-MM\")\n    | project ['id']=tolower(['id']),['name']=tolower(['name']),['type']=tolower(['type']),reservationOrderId=tolower(reservationOrderId),\n    reservationId=tolower(reservationId),skuName=tolower(skuName),['kind']=tolower(['kind']),reservedHours,usageDate,UsageMonth,usedHours,minUtilizationPercentage,avgUtilizationPercentage,maxUtilizationPercentage,purchasedQuantity,remainingQuantity,totalReservedQuantity,usedQuantity,utilizedPercentage)",
                                "type": "Expression"
                            },
                            "commandTimeout": "01:00:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset Staging Table",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "GetDates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 300,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace  Staging_ReservationSummary <|\nStaging_ReservationSummary\n| take 0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Loop Through Days",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Reset Staging Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetDates').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Copy DataLake to ADX",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 300,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "*",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureDataExplorerSink"
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "src_BillingDataCSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ContainerName": {
                                                    "value": "@pipeline().parameters.p_StorageAccountContainer",
                                                    "type": "Expression"
                                                },
                                                "DirectoryName": {
                                                    "value": "@{formatDateTime(item().ReportingDate, 'yyyy')}/@{formatDateTime(item().ReportingDate, 'MM')}/@{formatDateTime(item().ReportingDate, 'dd')}/@{pipeline().parameters.p_SubDirectory}",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "adx_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "TableName": "Staging_ReservationSummary"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "GetDates",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "range ReportingDate from ago(@{pipeline().parameters.p_NoOfDays}d) to now(-1d) step 1d\n| extend ReportingDate=todatetime(format_datetime(ReportingDate, 'yyyy-MM-dd'))",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "ADFErrorLog"
                                }
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_StorageAccountContainer": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data"
                    },
                    "p_NoOfDays": {
                        "type": "string"
                    },
                    "p_SubDirectory": {
                        "type": "string",
                        "defaultValue": "Reservation"
                    }
                },
                "folder": {
                    "name": "Initial Setup/InitialLoad - ADX"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:29Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/BillingData LoadReferenceFiles_OLD')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Loads Reference data for Billing Data",
                "activities": [
                    {
                        "name": "ProductMeterCategory_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_ProductMeterCategory",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Product",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Product",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FNFCategory",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "FNFCategory",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CCOP Approved",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CCOPApproved",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostType",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CostType",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsPrePay",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "IsPrePay",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADX_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_ProductMeterCategory",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_ProductMeterCategory",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_ProductMeterCategory"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_ProductMeterCategory",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LOB",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_ProductMeterCategory <|\nStaging_ProductMeterCategory \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ProductMeterCategory",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ProductMeterCategory_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ProductMeterCategory <| Staging_ProductMeterCategory \n| extend Product=tolower(Product),FNFCategory=tolower(FNFCategory),CCOPApproved=tobool(CCOPApproved),CostType=tolower(CostType),IsPrePay=tobool(IsPrePay)\n| distinct Product, FNFCategory, CCOPApproved, CostType, IsPrePay",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOBBudget_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_LOBBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "LineOfBusiness",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "LineOfBusiness",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "YearMonth",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "YearMonth",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Budget",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Budget",
                                            "type": "Int64",
                                            "physicalType": "long"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADX_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_LOBBudget",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_LOBBudget"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_LOBBudget",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ProductMeterCategory",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_LOBBudget <|\nStaging_LOBBudget \n| where 1==0\n",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOBBudget",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LOBBudget_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace LOBBudget <|\nlet UnDefined = 'undefined';\nStaging_LOBBudget\n| extend Year=split(YearMonth, '-')[0],Month=split(YearMonth, '-')[1]\n| extend YearMonth = strcat(Year,'-', substring(strcat('0',Month), -2, 2))\n| project LineOfBusiness, YearMonth, Budget\n| join kind=leftouter LOB on $left.LineOfBusiness==$right.ID\n| extend LineOfBusiness = iif(isempty(ID),UnDefined,ShortName)\n| project LineOfBusiness, YearMonth, Budget",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationLKP_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_ApplicationLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "App ID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Application Name",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ApplicationName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppAbreviation",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppAbreviation",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostCenter",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CostCenter",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ISApplication",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "IsApplication",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AvalibleForCostReporting",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AvailableForCostReporting",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RTO",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "RTO",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RPO",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "RPO",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Revenue",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Revenue",
                                            "type": "Double",
                                            "physicalType": "real"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ITAppOwner",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ITAppOWner",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "HostedInAzure",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "HostedInAzure",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppLOB",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppLOB",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "CSVText_referencedata",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@pipeline().parameters.p_FileName_ApplicationLKP",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_ApplicationLKP"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_ApplicationLKP",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LOBBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_ApplicationLKP <|\nStaging_ApplicationLKP \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationLKP",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ApplicationLKP_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ApplicationLKP <|\n Staging_ApplicationLKP\n| extend rpo_t = toint(split(RPO, ' ')[0]), HostedInAzure_t = tobool(HostedInAzure)\n| extend rpo_c = iif(isnull(rpo_t),toint(0),rpo_t), HostedInAzure_c = iif(isnull(HostedInAzure_t),false,HostedInAzure_t)\n| project AppID, ApplicationName, AppAbreviation, CostCenter, IsApplication = tobool(IsApplication), AvailableForCostReporting = tobool(AvailableForCostReporting),\n RTO=toint(RTO), RPO = rpo_c, Revenue, ITAppOWner, HostedInAzure= HostedInAzure_c, AppLOB",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationBudget_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Staging_ApplicationBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "SubscriptionGuid",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionGuid",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceGroupFQN",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceGroupFQN",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": " AppCode",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppCode",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingMonth",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "BillingMonth",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BudgetAMT",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "BudgetAMT",
                                            "type": "Double",
                                            "physicalType": "real"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Year",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Year",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Month",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Month",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "CSVText_referencedata",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@pipeline().parameters.p_FileName_ApplicationBudget",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_ApplicationBudget"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Staging_ApplicationBudget",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ApplicationLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_ApplicationBudget <|\nStaging_ApplicationBudget \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ApplicationBudget",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ApplicationBudget_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace ApplicationBudget <|\n Staging_ApplicationBudget\n| extend YearMonth_t = strcat(Year,'-', substring(strcat('0',Month), -2, 2))\n| project SubscriptionGuid=tolower(SubscriptionGuid), SubscriptionName=tolower(SubscriptionName), ResourceGroupFQN=tolower(ResourceGroupFQN), AppCode=tolower(AppCode), AppName=tolower(AppName), BillingMonth = YearMonth_t, BudgetAMT,\nParentHostingSubHostingID=tolower(ParentHostingSubHostingID)",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "HostingLKP_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Staging_HostingLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingSubHostingID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentHostingID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ParentHostingServiceName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ParentHostingServiceName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubHostingServiceID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubHostingServiceID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubHostingServiceName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubHostingServiceName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADX_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_HostingLKP",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_HostingLKP"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Staging_HostingLKP",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "ApplicationBudget",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_HostingLKP <|\nStaging_HostingLKP \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "HostingLKP",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "HostingLKP_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace HostingLKP <|\nStaging_HostingLKP\n| extend ParentHostingSubHostingID=toreal(ParentHostingSubHostingID),ParentHostingID=tolong(ParentHostingID),SubHostingServiceID=tolong(SubHostingServiceID),ParentHostingServiceName=tolower(ParentHostingServiceName),SubHostingServiceName=tolower(SubHostingServiceName)\n| project ParentHostingSubHostingID, ParentHostingID, ParentHostingServiceName, SubHostingServiceID, SubHostingServiceName",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Copy ITSMOCostMapping to ADX",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Reset Staging_BillingConfig",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "RGFQN",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceGroupFQN",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscritionGuid",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionGuid",
                                            "type": "Guid",
                                            "physicalType": "guid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceGroupName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceGroupName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "HostingService",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "HostingService",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppCode1",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppCode1",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AppName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "AppName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostCenter",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CostCenter",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LineOfBusiness",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "LineOfBusiness",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MigrationStatus",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "MigrationStatus",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CoreSubscription",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "CoreSubscription",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PrevFISSpend",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "PrevFISSpend",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsApplication",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "IsApplication",
                                            "type": "Boolean",
                                            "physicalType": "bool"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FinanceLOB",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "FinanceLOB",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADX_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_ITSMOCostMapping",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_BillingConfig"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Staging_BillingConfig to BillingConfig",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Copy ITSMOCostMapping to ADX",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace BillingConfig <| \nlet UnDefined = 'undefined';\nStaging_BillingConfig\n| extend SubscriptionGuid=toguid(tolower(SubscriptionGuid)),\nResourceGroupFQN=tolower(ResourceGroupFQN),\nSubscriptionName = trim_start(\" \",tolower(replace(@'./.', @'_\\1', SubscriptionName))),\nResourceGroupName=tolower(ResourceGroupName),\nHostingService=tolower(HostingService),\nAppCode1=tolower(AppCode1),\nAppName=tolower(AppName),\nCostCenter=tolower(CostCenter),\nLineOfBusiness=tolower(LineOfBusiness),\nMigrationStatus=tolower(MigrationStatus),\nCoreSubscription=tolower(CoreSubscription),\nPrevFISSpend=tolower(PrevFISSpend),\nIsApplication=iff(isempty(IsApplication) or isnull(IsApplication), false, IsApplication)\n| distinct ResourceGroupFQN, SubscriptionName, SubscriptionGuid, ResourceGroupName, HostingService, AppCode1, AppName, CostCenter, LineOfBusiness, MigrationStatus, CoreSubscription, PrevFISSpend, IsApplication,FinanceLOB\n| join kind=leftouter LOB on $left.LineOfBusiness==$right.ID\n| extend LineOfBusiness = iif(isempty(ID),UnDefined,ShortName)\n| join kind=leftouter (LOB | project ID1=ID, FullName1=FullName) on $left.FinanceLOB==$right.ID1\n| extend FinanceLOB = iif(isempty(ID1),UnDefined,FullName1)\n| join kind=leftouter (HostingLKP | project ParentHostingSubHostingID=tostring(ParentHostingSubHostingID), SubHostingServiceName) on $left.HostingService==$right.ParentHostingSubHostingID\n| extend HostingService = iif(isempty(ParentHostingSubHostingID), UnDefined, SubHostingServiceName)\n| distinct ResourceGroupFQN, SubscriptionName, SubscriptionGuid, ResourceGroupName, HostingService, AppCode1, AppName, CostCenter, LineOfBusiness, MigrationStatus, CoreSubscription, PrevFISSpend, IsApplication,FinanceLOB",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset Staging_BillingConfig",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "HostingLKP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace Staging_BillingConfig <|\nBillingConfig \n| where 1==0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LoadFlexData_Staging",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear Staging_FlexData",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "HttpReadSettings",
                                    "requestMethod": "GET"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "InstanceSizeFlexibilityGroup",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "InstanceSizeFlexibilityGroup",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ArmSkuName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ArmSkuName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Ratio",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Ratio",
                                            "type": "Double",
                                            "physicalType": "real"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "Flex_ISFRatio",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_FlexGroup"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear Staging_FlexData",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Staging_BillingConfig to BillingConfig",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_FlexGroup<|\nStaging_FlexGroup\n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "FlexData",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LoadFlexData_Staging",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace FlexGroup <|\nStaging_FlexGroup",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOB_Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Clear_Staging_LOB",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "AzureDataExplorerSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "ID",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ID",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ShortName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ShortName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FullName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "FullName",
                                            "type": "String",
                                            "physicalType": "string"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ADX_ExcelSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.p_Container",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.p_FileName_CostMapping",
                                        "type": "Expression"
                                    },
                                    "WorkSheetName": {
                                        "value": "@pipeline().parameters.p_WorkSheetName_LOBLookUp",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "adx_BillingData",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "Staging_LOB"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Clear_Staging_LOB",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace Staging_LOB <|\nStaging_LOB \n| where 1==0",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LOB",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "LOB_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": {
                                "value": ".set-or-replace LOB <| Staging_LOB \n| extend ShortName=tolower(ShortName),FullName=tolower(FullName)\n| project ID, ShortName, FullName",
                                "type": "Expression"
                            },
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "p_Container": {
                        "type": "string",
                        "defaultValue": "azure-cost-metric-data/referencedata"
                    },
                    "p_FileName_ProductMeterCategory": {
                        "type": "string",
                        "defaultValue": "ProductMeterCategory.xlsx"
                    },
                    "p_WorkSheetName_ProductMeterCategory": {
                        "type": "string",
                        "defaultValue": "ProductMeterCategory"
                    },
                    "p_FileName_ApplicationLKP": {
                        "type": "string",
                        "defaultValue": "ApplicationLKP.csv"
                    },
                    "p_FileName_ApplicationBudget": {
                        "type": "string",
                        "defaultValue": "ApplicationBudget.csv"
                    },
                    "p_FileName_CostMapping": {
                        "type": "string",
                        "defaultValue": "ITSMOCostMapping.xlsx"
                    },
                    "p_FileName_FlexData": {
                        "type": "string",
                        "defaultValue": "ISFRatio.csv"
                    },
                    "p_WorkSheetName_HostingLKP": {
                        "type": "string",
                        "defaultValue": "HostingLKP"
                    },
                    "p_WorkSheetName_LOBLookUp": {
                        "type": "string",
                        "defaultValue": "LOBLookUp"
                    },
                    "p_WorkSheetName_ITSMOCostMapping": {
                        "type": "string",
                        "defaultValue": "ITSMOCostMapping"
                    },
                    "p_WorkSheetName_LOBBudget": {
                        "type": "string",
                        "defaultValue": "LOBBudget"
                    }
                },
                "folder": {
                    "name": "Billing"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:29Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/pipeline API VMs List v4')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetBearerToken",
                        "description": "Use this Web activity to get bearer token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Set List Variable",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{pipeline().parameters.ClientSecret}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set List Variable",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Lookup BillingConfig",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Resource_List",
                            "value": {
                                "value": "@activity('Lookup BillingConfig').output.value",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set Token",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "GetBearerToken",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Token",
                            "value": {
                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Lookup BillingConfig",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set BillingDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@pipeline().parameters.BillingConfigKQL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "adx_BillingConfig",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Set BillingDate",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "BillingDate",
                            "value": {
                                "value": "@pipeline().parameters.BillingDate",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEach Subscription",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "REST APIVMList Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('Resource_List')",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "Wait for 7 seconds",
                                    "type": "Wait",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST output",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 7
                                    }
                                },
                                {
                                    "name": "Copy REST output",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@{concat('Bearer ',activity('GetBearerToken').output.access_token)}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "paginationRules": {
                                                "AbsoluteUrl": "$['nextLink']"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureDataExplorerSink"
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['name']"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['type']"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['location']"
                                                    },
                                                    "sink": {
                                                        "name": "location",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['vmId']"
                                                    },
                                                    "sink": {
                                                        "name": "vmId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['resources'][0]['id']"
                                                    },
                                                    "sink": {
                                                        "name": "resourceId",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_VMs",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_relativeURL": {
                                                    "value": "/subscriptions/@{item().SubscriptionGuid}/providers/Microsoft.Compute/virtualMachines?api-version=2019-12-01",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "adx_APIVMList",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "REST APIVMList Table",
                        "type": "AzureDataExplorerCommand",
                        "dependsOn": [
                            {
                                "activity": "Set Token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "command": ".set-or-replace  APIVMList <|\nAPIVMList\n| take 0",
                            "commandTimeout": "00:20:00"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "ClientID": {
                        "type": "string",
                        "defaultValue": "aa5605bb-2877-483d-b005-e1439ee1f988"
                    },
                    "tenant_id": {
                        "type": "string",
                        "defaultValue": "8a807b9b-02da-47f3-a903-791a42a2285c"
                    },
                    "BillingDate": {
                        "type": "string"
                    },
                    "BillingConfigKQL": {
                        "type": "string",
                        "defaultValue": "BillingConfig | summarize  SubscriptionName=max(SubscriptionName) by SubscriptionGuid"
                    },
                    "ClientSecret": {
                        "type": "string"
                    }
                },
                "variables": {
                    "Resource_List": {
                        "type": "Array"
                    },
                    "BillingDate": {
                        "type": "String"
                    },
                    "Token": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "VM Metrics"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:29Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Billing API - Reservation - LoadMonthlyData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetDateRange",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set Parent Directory",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureDataExplorerSource",
                                "query": {
                                    "value": "@pipeline().parameters.daterangekql",
                                    "type": "Expression"
                                },
                                "queryTimeout": "00:10:00",
                                "noTruncation": false
                            },
                            "dataset": {
                                "referenceName": "ADX_Generic",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": {
                                        "value": "ADFErrorLog",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Set ReportingDate",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "GetDateRange",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "v_DateRange",
                            "value": {
                                "value": "@activity('GetDateRange').output.value",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEach Subscription",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Set ReportingDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('v_DateRange')",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Wait for 60 seconds",
                                    "type": "Wait",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 60
                                    }
                                },
                                {
                                    "name": "If Gateway Error",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy REST Output",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(greater(indexof(activity('Copy REST Output').output.errors[0]['Message'], 'GatewayTimeout' ) ,-1), \ngreater(indexof(activity('Copy REST Output').output.errors[0]['Message'], 'Too many requests' ) ,-1))\n",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Update ADFErrorLog - others",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Reservation - Historic', ReportingDate='@{item().Min_ReportingDate},@{item().Max_ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Copy Rest Ouput', ErrorCode= '@{activity('Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Copy REST Output').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError_Log",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog - others",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Reservation - Historic', ReportingDate='@{item().Min_ReportingDate},@{item().Max_ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Wait 7 minutes",
                                                "type": "Wait",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "waitTimeInSeconds": 420
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Retry Copy REST Output",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Reservation - Historic', ReportingDate='@{item().Min_ReportingDate},@{item().Max_ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Retry Copy Rest Ouput', ErrorCode= '@{activity('Retry Copy REST Output').output.errors[0]['Code']}' , ErrorMessage= '@{trim(replace(replace(replace(uriComponentToString(replace(replace(replace(uriComponent(activity('Retry Copy REST Output').output.errors[0]['Message']), '%0A', ''),'%0D',''),'%09','')),'\"',' '),'''',' '),'\\',''))}', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Update ADFErrorLog_SimpleError",
                                                "type": "AzureDataExplorerCommand",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Update ADFErrorLog",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "command": {
                                                        "value": ".set-or-append ADFErrorLog <| print APIName = 'Billing API - Reservation - Historic', ReportingDate='@{item().Min_ReportingDate},@{item().Max_ReportingDate}' ,ProcessDateTime= todatetime('@{pipeline().TriggerTime}') , ProcessName='REST API to Azure Data Lake' , PipelineName= '@{pipeline().Pipeline}', PipelineRunID= '@{pipeline().RunId}' , ActivityType='Copy' , ActivityName= 'Read and Copy Rest Ouput', ErrorCode= '-9999' , ErrorMessage= 'API Failure', ErrorCategory= 'ActivityFailed', ErrorResourceID= '@{item().SubscriptionGuid}',  ErrorSubscription= '@{item().SubscriptionGuid}', ErrorTimestamp=todatetime('@{utcnow()}')",
                                                        "type": "Expression"
                                                    },
                                                    "commandTimeout": "00:20:00"
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDataExplorer_ACTSADX01_CostManagement",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Retry Copy REST Output",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Set Token_copy1",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RestSource",
                                                        "httpRequestTimeout": "00:05:00",
                                                        "requestInterval": "00.00:00:02.000",
                                                        "requestMethod": "GET",
                                                        "additionalHeaders": {
                                                            "Authorization": {
                                                                "value": "@variables('Token')",
                                                                "type": "Expression"
                                                            }
                                                        },
                                                        "paginationRules": {
                                                            "AbsoluteUrl": "$['nextLink']"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".csv"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "path": "[['id']"
                                                                },
                                                                "sink": {
                                                                    "name": "id",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['name']"
                                                                },
                                                                "sink": {
                                                                    "name": "name",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['type']"
                                                                },
                                                                "sink": {
                                                                    "name": "type",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['reservationOrderId']"
                                                                },
                                                                "sink": {
                                                                    "name": "reservationOrderId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['reservationId']"
                                                                },
                                                                "sink": {
                                                                    "name": "reservationId",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['skuName']"
                                                                },
                                                                "sink": {
                                                                    "name": "skuName",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['kind']"
                                                                },
                                                                "sink": {
                                                                    "name": "kind",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['reservedHours']"
                                                                },
                                                                "sink": {
                                                                    "name": "reservedHours",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['usageDate']"
                                                                },
                                                                "sink": {
                                                                    "name": "usageDate",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['usedHours']"
                                                                },
                                                                "sink": {
                                                                    "name": "usedHours",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['minUtilizationPercentage']"
                                                                },
                                                                "sink": {
                                                                    "name": "minUtilizationPercentage",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['avgUtilizationPercentage']"
                                                                },
                                                                "sink": {
                                                                    "name": "avgUtilizationPercentage",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['maxUtilizationPercentage']"
                                                                },
                                                                "sink": {
                                                                    "name": "maxUtilizationPercentage",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['purchasedQuantity']"
                                                                },
                                                                "sink": {
                                                                    "name": "purchasedQuantity",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['remainingQuantity']"
                                                                },
                                                                "sink": {
                                                                    "name": "remainingQuantity",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['totalReservedQuantity']"
                                                                },
                                                                "sink": {
                                                                    "name": "totalReservedQuantity",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['usedQuantity']"
                                                                },
                                                                "sink": {
                                                                    "name": "usedQuantity",
                                                                    "type": "String"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "path": "[['properties']['utilizedPercentage']"
                                                                },
                                                                "sink": {
                                                                    "name": "utilizedPercentage",
                                                                    "type": "String"
                                                                }
                                                            }
                                                        ],
                                                        "collectionReference": "$['value']"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "RestResource_BillingData",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "p_RelativeURL": {
                                                                "value": "/providers/Microsoft.Billing/billingAccounts/@{item().BillingAccountID}/providers/Microsoft.Consumption/reservationSummaries?grain=daily&$filter=properties/usageDate ge @{item().Min_ReportingDate} AND properties/usageDate le @{item().Max_ReportingDate}&api-version=2019-10-01",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "BillingDataCSV",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "sink_filename": {
                                                                "value": "@{item().BillingAccountID}_@{item().FileKey}.csv",
                                                                "type": "Expression"
                                                            },
                                                            "dir_name": {
                                                                "value": "@variables('RunDate')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "GetBearerToken_copy1",
                                                "description": "Use this Web activity to get bearer token",
                                                "type": "WebActivity",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Wait 7 minutes",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "method": "POST",
                                                    "headers": {
                                                        "Content-Type": "application/x-www-form-urlencoded"
                                                    },
                                                    "url": {
                                                        "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                                        "type": "Expression"
                                                    },
                                                    "body": {
                                                        "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{activity('GetSPNSecret').output.value}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Set Token_copy1",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "GetBearerToken_copy1",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "Token",
                                                    "value": {
                                                        "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Copy REST Output",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Token",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:05:00",
                                            "requestInterval": "00.00:00:02.000",
                                            "requestMethod": "GET",
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@variables('Token')",
                                                    "type": "Expression"
                                                }
                                            },
                                            "paginationRules": {
                                                "AbsoluteUrl": "$['nextLink']"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".csv"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "name": "id",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['name']"
                                                    },
                                                    "sink": {
                                                        "name": "name",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['type']"
                                                    },
                                                    "sink": {
                                                        "name": "type",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['reservationOrderId']"
                                                    },
                                                    "sink": {
                                                        "name": "reservationOrderId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['reservationId']"
                                                    },
                                                    "sink": {
                                                        "name": "reservationId",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['skuName']"
                                                    },
                                                    "sink": {
                                                        "name": "skuName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['kind']"
                                                    },
                                                    "sink": {
                                                        "name": "kind",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['reservedHours']"
                                                    },
                                                    "sink": {
                                                        "name": "reservedHours",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['usageDate']"
                                                    },
                                                    "sink": {
                                                        "name": "usageDate",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['usedHours']"
                                                    },
                                                    "sink": {
                                                        "name": "usedHours",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['minUtilizationPercentage']"
                                                    },
                                                    "sink": {
                                                        "name": "minUtilizationPercentage",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['avgUtilizationPercentage']"
                                                    },
                                                    "sink": {
                                                        "name": "avgUtilizationPercentage",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['maxUtilizationPercentage']"
                                                    },
                                                    "sink": {
                                                        "name": "maxUtilizationPercentage",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['purchasedQuantity']"
                                                    },
                                                    "sink": {
                                                        "name": "purchasedQuantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['remainingQuantity']"
                                                    },
                                                    "sink": {
                                                        "name": "remainingQuantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['totalReservedQuantity']"
                                                    },
                                                    "sink": {
                                                        "name": "totalReservedQuantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['usedQuantity']"
                                                    },
                                                    "sink": {
                                                        "name": "usedQuantity",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']['utilizedPercentage']"
                                                    },
                                                    "sink": {
                                                        "name": "utilizedPercentage",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RestResource_BillingData",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "p_RelativeURL": {
                                                    "value": "/providers/Microsoft.Billing/billingAccounts/@{item().BillingAccountID}/providers/Microsoft.Consumption/reservationSummaries?grain=daily&$filter=properties/usageDate ge @{item().Min_ReportingDate} AND properties/usageDate le @{item().Max_ReportingDate}&api-version=2019-10-01",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BillingDataCSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sink_filename": {
                                                    "value": "@{item().BillingAccountID}_@{item().FileKey}.csv",
                                                    "type": "Expression"
                                                },
                                                "dir_name": {
                                                    "value": "@variables('RunDate')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "GetBearerToken",
                                    "description": "Use this Web activity to get bearer token",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSPNSecret",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Content-Type": "application/x-www-form-urlencoded"
                                        },
                                        "url": {
                                            "value": "https://login.microsoftonline.com/@{pipeline().parameters.tenant_id}/oauth2/token",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "grant_type=client_credentials&client_id=@{pipeline().parameters.ClientID}&resource=https://management.azure.com&client_secret=@{activity('GetSPNSecret').output.value}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Token",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "GetBearerToken",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Token",
                                        "value": {
                                            "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "GetSPNSecret",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {},
                                        "url": {
                                            "value": "@concat(pipeline().parameters.p_SPNSecretURL,'?api-version=7.0')",
                                            "type": "Expression"
                                        },
                                        "authentication": {
                                            "type": "MSI",
                                            "resource": "https://vault.azure.net"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set Parent Directory",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "RunDate",
                            "value": {
                                "value": "@replace(replace(concat('HistoricData-Reservation-',formatDateTime(utcnow())),':','-'),'.','-')",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "ClientID": {
                        "type": "string",
                        "defaultValue": "aa5605bb-2877-483d-b005-e1439ee1f988"
                    },
                    "tenant_id": {
                        "type": "string",
                        "defaultValue": "8a807b9b-02da-47f3-a903-791a42a2285c"
                    },
                    "daterangekql": {
                        "type": "string",
                        "defaultValue": " range ReportingDate from ago(1296d) to todatetime('2021-08-01') step 1d | extend ReportingDate=todatetime(format_datetime(ReportingDate, 'yyyy-MM-dd')) | extend FileKey = format_datetime(ReportingDate, 'yyyy-MM-dd'),Filter = format_datetime(ReportingDate, 'yyyy-MM') | where Filter == '2021-07' | summarize Min_ReportingDate= min(ReportingDate), Max_ReportingDate = max(ReportingDate) by FileKey | project Min_ReportingDate=format_datetime(Min_ReportingDate,'yyyy-MM-dd'), Max_ReportingDate=format_datetime(Max_ReportingDate,'yyyy-MM-dd'), FileKey,BillingAccountID='88673741'"
                    },
                    "p_SPNSecretURL": {
                        "type": "string",
                        "defaultValue": "https://kv-ccop-dv.vault.azure.net/secrets/CostMGMT-SPN-Secret/eafafff824ca4d8c8a8c604579b70ed1"
                    }
                },
                "variables": {
                    "v_DateRange": {
                        "type": "Array"
                    },
                    "REST_API_ProcessStatus": {
                        "type": "String"
                    },
                    "Token": {
                        "type": "String"
                    },
                    "RunDate": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Billing/HistoricData"
                },
                "annotations": [],
                "lastPublishTime": "2024-01-05T11:08:31Z"
            },
            "dependsOn": []
        }
    ]
}